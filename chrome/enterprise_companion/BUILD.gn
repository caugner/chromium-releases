import("//build/util/process_version.gni")
import("//testing/test.gni")

process_version("version_header") {
  sources = [ "//chrome/VERSION" ]
  template_file = "enterprise_companion_version.h.in"
  output = "$target_gen_dir/enterprise_companion_version.h"
}

source_set("base") {
  sources = [
    "enterprise_companion.cc",
    "enterprise_companion.h",
    "enterprise_companion_service.cc",
    "enterprise_companion_service.h",
    "enterprise_companion_service_stub.cc",
    "enterprise_companion_service_stub.h",
    "ipc_support.cc",
    "ipc_support.h",
    "lock.cc",
    "lock.h",
  ]
  deps = [
    ":client",
    ":version_header",
    "mojom/",
    "//base",
    "//components/named_mojo_ipc_server",
    "//components/named_system_lock",
    "//mojo/core/embedder",
    "//mojo/public/cpp/platform",
  ]
}

test("enterprise_companion_tests") {
  testonly = true

  sources = [
    "enterprise_companion_service_stub_unittest.cc",
    "enterprise_companion_service_unittest.cc",
    "test/run_all_unittests.cc",
  ]
  deps = [
    ":base",
    ":client",
    "mojom/",
    "//base",
    "//base/test:test_support",
    "//chrome/enterprise_companion/device_management_storage:unit_tests",
    "//components/named_mojo_ipc_server",
    "//testing/gtest",
  ]
}

static_library("client") {
  sources = [
    "enterprise_companion_client.cc",
    "enterprise_companion_client.h",
  ]
  deps = [ "//mojo/public/cpp/platform" ]
}

if (!is_official_build) {
  executable("enterprise_companion") {
    sources = [ "main.cc" ]
    deps = [ ":base" ]

    if (is_win) {
      configs += [ "//build/config/win:windowed" ]
    }
  }
}

group("all") {
  testonly = true

  deps = [
    ":client",
    ":enterprise_companion_tests",
  ]
  if (!is_official_build) {
    deps += [ ":enterprise_companion" ]
  }
}
