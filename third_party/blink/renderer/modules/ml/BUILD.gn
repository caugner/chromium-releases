# Copyright 2022 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/buildflag_header.gni")
import("//testing/libfuzzer/fuzzer_test.gni")
import("//third_party/blink/renderer/modules/modules.gni")
import("//third_party/libprotobuf-mutator/fuzzable_proto_library.gni")
import("//third_party/protobuf/proto_library.gni")

blink_modules_sources("ml") {
  sources = [
    "ml.cc",
    "ml.h",
    "ml_context.cc",
    "ml_context.h",
    "ml_model.cc",
    "ml_model.h",
    "ml_model_loader.cc",
    "ml_model_loader.h",
    "ml_trace.cc",
    "ml_trace.h",
    "navigator_ml.cc",
    "navigator_ml.h",
    "webnn/ml_activation.cc",
    "webnn/ml_activation.h",
    "webnn/ml_buffer.cc",
    "webnn/ml_buffer.h",
    "webnn/ml_error.cc",
    "webnn/ml_error.h",
    "webnn/ml_graph.cc",
    "webnn/ml_graph.h",
    "webnn/ml_graph_builder.cc",
    "webnn/ml_graph_builder.h",
    "webnn/ml_graph_type_converter.cc",
    "webnn/ml_graph_type_converter.h",
    "webnn/ml_graph_utils.cc",
    "webnn/ml_graph_utils.h",
    "webnn/ml_operand.cc",
    "webnn/ml_operand.h",
    "webnn/ml_operator.cc",
    "webnn/ml_operator.h",
  ]

  deps = [
    "//components/ml/mojom:mojom_blink",
    "//components/ml/webnn",
    "//components/ml/webnn:features",
    "//services/webnn/public/mojom:mojom_blink",
  ]
}

source_set("unit_tests") {
  testonly = true
  sources = [
    "ml_model_loader_test.cc",
    "ml_model_loader_test_util.cc",
    "ml_model_loader_test_util.h",
    "ml_trace_unittest.cc",
    "webnn/ml_graph_builder_test.cc",
    "webnn/ml_graph_builder_test.h",
    "webnn/ml_graph_builder_utils.cc",
    "webnn/ml_graph_builder_utils.h",
    "webnn/ml_graph_test.cc",
  ]

  deps = [
    "//components/ml/mojom:mojom_blink",
    "//components/ml/webnn",
    "//services/webnn/public/mojom:mojom_blink",
    "//testing/gtest",
    "//third_party/blink/public:test_headers",
    "//third_party/blink/renderer/controller:blink_bindings_test_sources",
    "//third_party/blink/renderer/core:unit_test_support",
    "//third_party/blink/renderer/modules",
    "//third_party/blink/renderer/platform",
    "//third_party/blink/renderer/platform:test_support",
    "//third_party/blink/renderer/platform/wtf",
  ]
}

if (use_fuzzing_engine_with_lpm) {
  fuzzable_proto_library("webnn_proto") {
    generate_python = true
    sources = [ "webnn/fuzzer/webnn.proto" ]
  }

  fuzzer_test("conv2d_fuzzer") {
    sources = [
      "webnn/fuzzer/conv2d_fuzzer.cc",
      "webnn/fuzzer/utils.cc",
      "webnn/fuzzer/utils.h",
      "webnn/ml_graph_builder_utils.cc",
      "webnn/ml_graph_builder_utils.h",
    ]
    deps = [
      ":webnn_proto",
      "//third_party/blink/renderer/controller:blink_bindings_test_sources",
      "//third_party/blink/renderer/core:testing",
      "//third_party/blink/renderer/modules:modules",
      "//third_party/blink/renderer/platform:blink_fuzzer_test_support",
      "//third_party/libprotobuf-mutator",
    ]
  }

  fuzzer_test("pool2d_fuzzer") {
    sources = [
      "webnn/fuzzer/pool2d_fuzzer.cc",
      "webnn/fuzzer/utils.cc",
      "webnn/fuzzer/utils.h",
      "webnn/ml_graph_builder_utils.cc",
      "webnn/ml_graph_builder_utils.h",
    ]
    deps = [
      ":webnn_proto",
      "//third_party/blink/renderer/controller:blink_bindings_test_sources",
      "//third_party/blink/renderer/core:testing",
      "//third_party/blink/renderer/modules:modules",
      "//third_party/blink/renderer/platform:blink_fuzzer_test_support",
      "//third_party/libprotobuf-mutator",
    ]
  }
}
