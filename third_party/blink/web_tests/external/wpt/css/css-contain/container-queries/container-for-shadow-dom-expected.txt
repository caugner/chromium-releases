This is a testharness.js-based test.
[FAIL] Match container in walking flat tree ancestors
  assert_equals: expected "rgb(0, 128, 0)" but got "rgb(0, 0, 0)"
[FAIL] Match container in ::part selector's originating element tree
  assert_equals: expected "rgb(0, 128, 0)" but got "rgb(0, 0, 0)"
[FAIL] Match container for ::before in ::slotted selector's originating element tree
  assert_equals: expected "rgb(0, 128, 0)" but got "rgb(0, 0, 0)"
[FAIL] Match container for ::before in ::part selector's originating element tree
  assert_equals: expected "rgb(0, 128, 0)" but got "rgb(0, 0, 0)"
[FAIL] Match container for ::part selector's originating element tree for exportparts
  assert_equals: expected "rgb(0, 128, 0)" but got "rgb(0, 0, 0)"
[FAIL] Should not match container inside shadow tree for ::part()
  assert_equals: expected "rgb(0, 128, 0)" but got "rgb(255, 0, 0)"
[FAIL] A :host::part rule should match containers in the originating element tree
  assert_equals: expected "rgb(0, 128, 0)" but got "rgb(0, 0, 0)"
Harness: the test ran to completion.

