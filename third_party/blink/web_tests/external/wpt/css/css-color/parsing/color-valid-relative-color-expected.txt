This is a testharness.js-based test.
Found 1046 FAIL, 0 TIMEOUT, 0 NOTRUN.
[FAIL] e.style['color'] = "rgb(from rebeccapurple r g b)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.6)\nExpected: rgb(from rebeccapurple r g b).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "rgb(from rebeccapurple r g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.6)\nExpected: rgb(from rebeccapurple r g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) r g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.6 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 51 +/- 0.01, expected 51 but got 0.2
[FAIL] e.style['color'] = "rgb(from hsl(120deg 20% 50% / .5) r g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.6 0.4 / 0.5)\nExpected: rgb(from rgba(102, 153, 102, 0.5) r g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 102 +/- 0.01, expected 102 but got 0.4
[FAIL] e.style['color'] = "rgb(from rgb(from rebeccapurple r g b) r g b)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.6)\nExpected: rgb(from rgb(from rebeccapurple r g b) r g b).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "rgb(from rebeccapurple 0 0 0)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0)\nExpected: rgb(from rebeccapurple 0 0 0).\nError: assert_equals: Color format is correct. expected "rgb(from rebeccapurple   )" but got "color(srgb   )"
[FAIL] e.style['color'] = "rgb(from rebeccapurple 0 0 0 / 0)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0 / 0)\nExpected: rgb(from rebeccapurple 0 0 0 / 0).\nError: assert_equals: Color format is correct. expected "rgb(from rebeccapurple    / )" but got "color(srgb    / )"
[FAIL] e.style['color'] = "rgb(from rebeccapurple 0 g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0.2 0.6)\nExpected: rgb(from rebeccapurple 0 g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "rgb(from rebeccapurple r 0 b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0 0.6)\nExpected: rgb(from rebeccapurple r 0 b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "rgb(from rebeccapurple r g 0 / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0)\nExpected: rgb(from rebeccapurple r g 0 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "rgb(from rebeccapurple r g b / 0)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.6 / 0)\nExpected: rgb(from rebeccapurple r g b / 0).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 4
[FAIL] e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) 0 g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0.4 0.6 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) 0 g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) r 0 b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0 0.6 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r 0 b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) r g 0 / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r g 0 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) r g b / 0)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.6 / 0)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r g b / 0).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "rgb(from rebeccapurple 25 g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.0980392 0.2 0.6)\nExpected: rgb(from rebeccapurple 25 g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "rgb(from rebeccapurple r 25 b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.0980392 0.6)\nExpected: rgb(from rebeccapurple r 25 b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "rgb(from rebeccapurple r g 25 / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.0980392)\nExpected: rgb(from rebeccapurple r g 25 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "rgb(from rebeccapurple r g b / .25)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.6 / 0.25)\nExpected: rgb(from rebeccapurple r g b / 0.25).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 4
[FAIL] e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) 25 g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.0980392 0.4 0.6 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) 25 g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) r 25 b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.0980392 0.6 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r 25 b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) r g 25 / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.0980392 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r g 25 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) r g b / .20)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.6 / 0.2)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r g b / 0.20).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "rgb(from rebeccapurple 20% g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.2 0.6)\nExpected: rgb(from rebeccapurple 20% g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "rgb(from rebeccapurple r 20% b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.6)\nExpected: rgb(from rebeccapurple r 20% b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "rgb(from rebeccapurple r g 20% / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.2)\nExpected: rgb(from rebeccapurple r g 20% / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "rgb(from rebeccapurple r g b / 20%)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.6 / 0.2)\nExpected: rgb(from rebeccapurple r g b / 20%).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 4
[FAIL] e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) 20% g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.6 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) 20% g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) r 20% b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.2 0.6 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r 20% b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) r g 20% / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.2 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r g 20% / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) r g b / 20%)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.6 / 0.2)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r g b / 20%).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "rgb(from rebeccapurple 25 g b / 25%)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.0980392 0.2 0.6 / 0.25)\nExpected: rgb(from rebeccapurple 25 g b / 25%).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 2 got 4
[FAIL] e.style['color'] = "rgb(from rebeccapurple r 25 b / 25%)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.0980392 0.6 / 0.25)\nExpected: rgb(from rebeccapurple r 25 b / 25%).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 2 got 4
[FAIL] e.style['color'] = "rgb(from rebeccapurple r g 25 / 25%)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.0980392 / 0.25)\nExpected: rgb(from rebeccapurple r g 25 / 25%).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 2 got 4
[FAIL] e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) 25 g b / 25%)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.0980392 0.4 0.6 / 0.25)\nExpected: rgb(from rgba(51, 102, 153, 0.8) 25 g b / 25%).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 6 got 4
[FAIL] e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) r 25 b / 25%)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.0980392 0.6 / 0.25)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r 25 b / 25%).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 6 got 4
[FAIL] e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) r g 25 / 25%)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.0980392 / 0.25)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r g 25 / 25%).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 6 got 4
[FAIL] e.style['color'] = "rgb(from rebeccapurple g b r)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.6 0.4)\nExpected: rgb(from rebeccapurple g b r).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "rgb(from rebeccapurple b alpha r / g)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.6 0.00392157 0.4)\nExpected: rgb(from rebeccapurple b alpha r / g).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "rgb(from rebeccapurple r r r / r)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.4 0.4)\nExpected: rgb(from rebeccapurple r r r / r).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "rgb(from rebeccapurple alpha alpha alpha / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.00392157 0.00392157 0.00392157)\nExpected: rgb(from rebeccapurple alpha alpha alpha / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) g b r)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.6 0.2 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) g b r).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 51 +/- 0.01, expected 51 but got 0.4
[FAIL] e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) b alpha r / g)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.6 0.00313725 0.2)\nExpected: rgb(from rgba(51, 102, 153, 0.8) b alpha r / g).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) r r r / r)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.2 0.2)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r r r / r).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) alpha alpha alpha / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.00313725 0.00313725 0.00313725 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) alpha alpha alpha / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 51 +/- 0.01, expected 51 but got 0.00313725
[FAIL] e.style['color'] = "rgb(from rebeccapurple r 20% 10)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.0392157)\nExpected: rgb(from rebeccapurple r 20% 10).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 2 got 3
[FAIL] e.style['color'] = "rgb(from rebeccapurple r 10 20%)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.0392157 0.2)\nExpected: rgb(from rebeccapurple r 10 20%).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 2 got 3
[FAIL] e.style['color'] = "rgb(from rebeccapurple 0% 10 10)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0.0392157 0.0392157)\nExpected: rgb(from rebeccapurple 0% 10 10).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 1, expected 10 +/- 0.01, expected 10 but got 0.0392157
[FAIL] e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) r 20% 10)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.2 0.0392157 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r 20% 10).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 6 got 4
[FAIL] e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) r 10 20%)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.0392157 0.2 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r 10 20%).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 6 got 4
[FAIL] e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) 0% 10 10)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0.0392157 0.0392157 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) 0% 10 10).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 7 got 4
[FAIL] e.style['color'] = "rgb(from rebeccapurple calc(r) calc(g) calc(b))" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.6)\nExpected: rgb(from rebeccapurple calc(r) calc(g) calc(b)).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "rgb(from rebeccapurple r calc(g * 2) 10)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.4 0.0392157)\nExpected: rgb(from rebeccapurple r calc(2 * g) 10).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 2 got 3
[FAIL] e.style['color'] = "rgb(from rebeccapurple b calc(r * .5) 10)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.6 0.2 0.0392157)\nExpected: rgb(from rebeccapurple b calc(0.5 * r) 10).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 2 got 3
[FAIL] e.style['color'] = "rgb(from rebeccapurple r calc(g * .5 + g * .5) 10)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.0392157)\nExpected: rgb(from rebeccapurple r calc((0.5 * g) + (0.5 * g)) 10).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.5 +/- 0.01, expected 0.5 but got 0.4
[FAIL] e.style['color'] = "rgb(from rebeccapurple r calc(b * .5 - g * .5) 10)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.0392157)\nExpected: rgb(from rebeccapurple r calc((0.5 * b) - (0.5 * g)) 10).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.5 +/- 0.01, expected 0.5 but got 0.4
[FAIL] e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) calc(r) calc(g) calc(b) / calc(alpha))" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.6 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) calc(r) calc(g) calc(b) / calc(alpha)).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 51 +/- 0.01, expected 51 but got 0.2
[FAIL] e.style['color'] = "rgb(from rebeccapurple none none none)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0)\nExpected: rgb(from rebeccapurple none none none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "rgb(from rebeccapurple none none none / none)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0 / none)\nExpected: rgb(from rebeccapurple none none none / none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "rgb(from rebeccapurple r g none)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0)\nExpected: rgb(from rebeccapurple r g none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "rgb(from rebeccapurple r g none / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0)\nExpected: rgb(from rebeccapurple r g none / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "rgb(from rebeccapurple r g b / none)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.6 / none)\nExpected: rgb(from rebeccapurple r g b / none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "rgb(from rgb(20% 40% 60% / 80%) r g none / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r g none / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 51 +/- 0.01, expected 51 but got 0.2
[FAIL] e.style['color'] = "rgb(from rgb(20% 40% 60% / 80%) r g b / none)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.6 / none)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r g b / none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "rgb(from rgb(none none none) r g b)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0)\nExpected: rgb(from rgb(0, 0, 0) r g b).\nError: assert_equals: Color format is correct. expected "rgb(from rgb(, , ) r g b)" but got "color(srgb   )"
[FAIL] e.style['color'] = "rgb(from rgb(none none none / none) r g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0 / 0)\nExpected: rgb(from rgba(0, 0, 0, 0) r g b / alpha).\nError: assert_equals: Color format is correct. expected "rgb(from rgba(, , , ) r g b / alpha)" but got "color(srgb    / )"
[FAIL] e.style['color'] = "rgb(from rgb(20% none 60%) r g b)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0 0.6)\nExpected: rgb(from rgb(51, 0, 153) r g b).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 51 +/- 0.01, expected 51 but got 0.2
[FAIL] e.style['color'] = "rgb(from rgb(20% 40% 60% / none) r g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.6 / 0)\nExpected: rgb(from rgba(51, 102, 153, 0) r g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 51 +/- 0.01, expected 51 but got 0.2
[FAIL] e.style['color'] = "rgb(from color-mix(in srgb, red, red) r g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 1 0 0)\nExpected: rgb(from color-mix(in srgb, red, red) r g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "rgba(from rebeccapurple r g b)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.6)\nExpected: rgb(from rebeccapurple r g b).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "rgba(from rebeccapurple r g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.6)\nExpected: rgb(from rebeccapurple r g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) r g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.6 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 51 +/- 0.01, expected 51 but got 0.2
[FAIL] e.style['color'] = "rgba(from hsl(120deg 20% 50% / .5) r g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.6 0.4 / 0.5)\nExpected: rgb(from rgba(102, 153, 102, 0.5) r g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 102 +/- 0.01, expected 102 but got 0.4
[FAIL] e.style['color'] = "rgba(from rgb(from rebeccapurple r g b) r g b)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.6)\nExpected: rgb(from rgb(from rebeccapurple r g b) r g b).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "rgba(from rebeccapurple 0 0 0)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0)\nExpected: rgb(from rebeccapurple 0 0 0).\nError: assert_equals: Color format is correct. expected "rgb(from rebeccapurple   )" but got "color(srgb   )"
[FAIL] e.style['color'] = "rgba(from rebeccapurple 0 0 0 / 0)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0 / 0)\nExpected: rgb(from rebeccapurple 0 0 0 / 0).\nError: assert_equals: Color format is correct. expected "rgb(from rebeccapurple    / )" but got "color(srgb    / )"
[FAIL] e.style['color'] = "rgba(from rebeccapurple 0 g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0.2 0.6)\nExpected: rgb(from rebeccapurple 0 g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "rgba(from rebeccapurple r 0 b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0 0.6)\nExpected: rgb(from rebeccapurple r 0 b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "rgba(from rebeccapurple r g 0 / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0)\nExpected: rgb(from rebeccapurple r g 0 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "rgba(from rebeccapurple r g b / 0)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.6 / 0)\nExpected: rgb(from rebeccapurple r g b / 0).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 4
[FAIL] e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) 0 g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0.4 0.6 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) 0 g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) r 0 b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0 0.6 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r 0 b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) r g 0 / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r g 0 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) r g b / 0)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.6 / 0)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r g b / 0).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "rgba(from rebeccapurple 25 g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.0980392 0.2 0.6)\nExpected: rgb(from rebeccapurple 25 g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "rgba(from rebeccapurple r 25 b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.0980392 0.6)\nExpected: rgb(from rebeccapurple r 25 b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "rgba(from rebeccapurple r g 25 / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.0980392)\nExpected: rgb(from rebeccapurple r g 25 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "rgba(from rebeccapurple r g b / .25)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.6 / 0.25)\nExpected: rgb(from rebeccapurple r g b / 0.25).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 4
[FAIL] e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) 25 g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.0980392 0.4 0.6 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) 25 g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) r 25 b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.0980392 0.6 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r 25 b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) r g 25 / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.0980392 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r g 25 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) r g b / .20)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.6 / 0.2)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r g b / 0.20).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "rgba(from rebeccapurple 20% g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.2 0.6)\nExpected: rgb(from rebeccapurple 20% g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "rgba(from rebeccapurple r 20% b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.6)\nExpected: rgb(from rebeccapurple r 20% b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "rgba(from rebeccapurple r g 20% / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.2)\nExpected: rgb(from rebeccapurple r g 20% / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "rgba(from rebeccapurple r g b / 20%)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.6 / 0.2)\nExpected: rgb(from rebeccapurple r g b / 20%).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 4
[FAIL] e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) 20% g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.6 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) 20% g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) r 20% b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.2 0.6 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r 20% b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) r g 20% / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.2 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r g 20% / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) r g b / 20%)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.6 / 0.2)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r g b / 20%).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "rgba(from rebeccapurple 25 g b / 25%)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.0980392 0.2 0.6 / 0.25)\nExpected: rgb(from rebeccapurple 25 g b / 25%).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 2 got 4
[FAIL] e.style['color'] = "rgba(from rebeccapurple r 25 b / 25%)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.0980392 0.6 / 0.25)\nExpected: rgb(from rebeccapurple r 25 b / 25%).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 2 got 4
[FAIL] e.style['color'] = "rgba(from rebeccapurple r g 25 / 25%)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.0980392 / 0.25)\nExpected: rgb(from rebeccapurple r g 25 / 25%).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 2 got 4
[FAIL] e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) 25 g b / 25%)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.0980392 0.4 0.6 / 0.25)\nExpected: rgb(from rgba(51, 102, 153, 0.8) 25 g b / 25%).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 6 got 4
[FAIL] e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) r 25 b / 25%)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.0980392 0.6 / 0.25)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r 25 b / 25%).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 6 got 4
[FAIL] e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) r g 25 / 25%)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.0980392 / 0.25)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r g 25 / 25%).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 6 got 4
[FAIL] e.style['color'] = "rgba(from rebeccapurple g b r)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.6 0.4)\nExpected: rgb(from rebeccapurple g b r).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "rgba(from rebeccapurple b alpha r / g)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.6 0.00392157 0.4)\nExpected: rgb(from rebeccapurple b alpha r / g).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "rgba(from rebeccapurple r r r / r)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.4 0.4)\nExpected: rgb(from rebeccapurple r r r / r).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "rgba(from rebeccapurple alpha alpha alpha / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.00392157 0.00392157 0.00392157)\nExpected: rgb(from rebeccapurple alpha alpha alpha / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) g b r)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.6 0.2 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) g b r).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 51 +/- 0.01, expected 51 but got 0.4
[FAIL] e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) b alpha r / g)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.6 0.00313725 0.2)\nExpected: rgb(from rgba(51, 102, 153, 0.8) b alpha r / g).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) r r r / r)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.2 0.2)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r r r / r).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) alpha alpha alpha / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.00313725 0.00313725 0.00313725 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) alpha alpha alpha / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 51 +/- 0.01, expected 51 but got 0.00313725
[FAIL] e.style['color'] = "rgba(from rebeccapurple r 20% 10)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.0392157)\nExpected: rgb(from rebeccapurple r 20% 10).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 2 got 3
[FAIL] e.style['color'] = "rgba(from rebeccapurple r 10 20%)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.0392157 0.2)\nExpected: rgb(from rebeccapurple r 10 20%).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 2 got 3
[FAIL] e.style['color'] = "rgba(from rebeccapurple 0% 10 10)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0.0392157 0.0392157)\nExpected: rgb(from rebeccapurple 0% 10 10).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 1, expected 10 +/- 0.01, expected 10 but got 0.0392157
[FAIL] e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) r 20% 10)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.2 0.0392157 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r 20% 10).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 6 got 4
[FAIL] e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) r 10 20%)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.0392157 0.2 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r 10 20%).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 6 got 4
[FAIL] e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) 0% 10 10)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0.0392157 0.0392157 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) 0% 10 10).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 7 got 4
[FAIL] e.style['color'] = "rgba(from rebeccapurple calc(r) calc(g) calc(b))" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.6)\nExpected: rgb(from rebeccapurple calc(r) calc(g) calc(b)).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "rgba(from rebeccapurple r calc(g * 2) 10)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.4 0.0392157)\nExpected: rgb(from rebeccapurple r calc(2 * g) 10).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 2 got 3
[FAIL] e.style['color'] = "rgba(from rebeccapurple b calc(r * .5) 10)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.6 0.2 0.0392157)\nExpected: rgb(from rebeccapurple b calc(0.5 * r) 10).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 2 got 3
[FAIL] e.style['color'] = "rgba(from rebeccapurple r calc(g * .5 + g * .5) 10)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.0392157)\nExpected: rgb(from rebeccapurple r calc((0.5 * g) + (0.5 * g)) 10).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.5 +/- 0.01, expected 0.5 but got 0.4
[FAIL] e.style['color'] = "rgba(from rebeccapurple r calc(b * .5 - g * .5) 10)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.0392157)\nExpected: rgb(from rebeccapurple r calc((0.5 * b) - (0.5 * g)) 10).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.5 +/- 0.01, expected 0.5 but got 0.4
[FAIL] e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) calc(r) calc(g) calc(b) / calc(alpha))" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.6 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) calc(r) calc(g) calc(b) / calc(alpha)).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 51 +/- 0.01, expected 51 but got 0.2
[FAIL] e.style['color'] = "rgba(from rebeccapurple none none none)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0)\nExpected: rgb(from rebeccapurple none none none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "rgba(from rebeccapurple none none none / none)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0 / none)\nExpected: rgb(from rebeccapurple none none none / none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "rgba(from rebeccapurple r g none)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0)\nExpected: rgb(from rebeccapurple r g none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "rgba(from rebeccapurple r g none / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0)\nExpected: rgb(from rebeccapurple r g none / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "rgba(from rebeccapurple r g b / none)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.6 / none)\nExpected: rgb(from rebeccapurple r g b / none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "rgba(from rgb(20% 40% 60% / 80%) r g none / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0 / 0.8)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r g none / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 51 +/- 0.01, expected 51 but got 0.2
[FAIL] e.style['color'] = "rgba(from rgb(20% 40% 60% / 80%) r g b / none)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.6 / none)\nExpected: rgb(from rgba(51, 102, 153, 0.8) r g b / none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "rgba(from rgb(none none none) r g b)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0)\nExpected: rgb(from rgb(0, 0, 0) r g b).\nError: assert_equals: Color format is correct. expected "rgb(from rgb(, , ) r g b)" but got "color(srgb   )"
[FAIL] e.style['color'] = "rgba(from rgb(none none none / none) r g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0 / 0)\nExpected: rgb(from rgba(0, 0, 0, 0) r g b / alpha).\nError: assert_equals: Color format is correct. expected "rgb(from rgba(, , , ) r g b / alpha)" but got "color(srgb    / )"
[FAIL] e.style['color'] = "rgba(from rgb(20% none 60%) r g b)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0 0.6)\nExpected: rgb(from rgb(51, 0, 153) r g b).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 51 +/- 0.01, expected 51 but got 0.2
[FAIL] e.style['color'] = "rgba(from rgb(20% 40% 60% / none) r g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.6 / 0)\nExpected: rgb(from rgba(51, 102, 153, 0) r g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 51 +/- 0.01, expected 51 but got 0.2
[FAIL] e.style['color'] = "rgba(from color-mix(in srgb, red, red) r g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 1 0 0)\nExpected: rgb(from color-mix(in srgb, red, red) r g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "hsl(from rebeccapurple h s l)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.6)\nExpected: hsl(from rebeccapurple h s l).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "hsl(from rebeccapurple h s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.6)\nExpected: hsl(from rebeccapurple h s l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "hsl(from rgb(20%, 40%, 60%, 80%) h s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.6 / 0.8)\nExpected: hsl(from rgba(51, 102, 153, 0.8) h s l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 51 +/- 0.01, expected 51 but got 0.2
[FAIL] e.style['color'] = "hsl(from hsl(120deg 20% 50% / .5) h s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.6 0.4 / 0.5)\nExpected: hsl(from rgba(102, 153, 102, 0.5) h s l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 102 +/- 0.01, expected 102 but got 0.4
[FAIL] e.style['color'] = "hsl(from hsl(from rebeccapurple h s l) h s l)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.6)\nExpected: hsl(from hsl(from rebeccapurple h s l) h s l).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "hsl(from rebeccapurple 0 0% 0%)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0)\nExpected: hsl(from rebeccapurple 0 0% 0%).\nError: assert_equals: Color format is correct. expected "hsl(from rebeccapurple  % %)" but got "color(srgb   )"
[FAIL] e.style['color'] = "hsl(from rebeccapurple 0deg 0% 0%)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0)\nExpected: hsl(from rebeccapurple 0deg 0% 0%).\nError: assert_equals: Color format is correct. expected "hsl(from rebeccapurple deg % %)" but got "color(srgb   )"
[FAIL] e.style['color'] = "hsl(from rebeccapurple 0 0% 0% / 0)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0 / 0)\nExpected: hsl(from rebeccapurple 0 0% 0% / 0).\nError: assert_equals: Color format is correct. expected "hsl(from rebeccapurple  % % / )" but got "color(srgb    / )"
[FAIL] e.style['color'] = "hsl(from rebeccapurple 0deg 0% 0% / 0)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0 / 0)\nExpected: hsl(from rebeccapurple 0deg 0% 0% / 0).\nError: assert_equals: Color format is correct. expected "hsl(from rebeccapurple deg % % / )" but got "color(srgb    / )"
[FAIL] e.style['color'] = "hsl(from rebeccapurple 0 s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.6 0.2 0.2)\nExpected: hsl(from rebeccapurple 0 s l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "hsl(from rebeccapurple 0deg s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.6 0.2 0.2)\nExpected: hsl(from rebeccapurple 0deg s l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "hsl(from rebeccapurple h 0% l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.4 0.4)\nExpected: hsl(from rebeccapurple h 0% l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "hsl(from rebeccapurple h s 0% / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0)\nExpected: hsl(from rebeccapurple h s 0% / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "hsl(from rebeccapurple h s l / 0)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.6 / 0)\nExpected: hsl(from rebeccapurple h s l / 0).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 4
[FAIL] e.style['color'] = "hsl(from rgb(20%, 40%, 60%, 80%) 0 s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.6 0.2 0.2 / 0.8)\nExpected: hsl(from rgba(51, 102, 153, 0.8) 0 s l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "hsl(from rgb(20%, 40%, 60%, 80%) 0deg s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.6 0.2 0.2 / 0.8)\nExpected: hsl(from rgba(51, 102, 153, 0.8) 0deg s l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "hsl(from rgb(20%, 40%, 60%, 80%) h 0% l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.4 0.4 / 0.8)\nExpected: hsl(from rgba(51, 102, 153, 0.8) h 0% l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "hsl(from rgb(20%, 40%, 60%, 80%) h s 0% / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0 / 0.8)\nExpected: hsl(from rgba(51, 102, 153, 0.8) h s 0% / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "hsl(from rgb(20%, 40%, 60%, 80%) h s l / 0)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.6 / 0)\nExpected: hsl(from rgba(51, 102, 153, 0.8) h s l / 0).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "hsl(from rebeccapurple 25 s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.6 0.366667 0.2)\nExpected: hsl(from rebeccapurple 25 s l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "hsl(from rebeccapurple 25deg s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.6 0.366667 0.2)\nExpected: hsl(from rebeccapurple 25deg s l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "hsl(from rebeccapurple h 20% l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.32 0.48)\nExpected: hsl(from rebeccapurple h 20% l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "hsl(from rebeccapurple h s 20% / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.1 0.3)\nExpected: hsl(from rebeccapurple h s 20% / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "hsl(from rebeccapurple h s l / .25)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.6 / 0.25)\nExpected: hsl(from rebeccapurple h s l / .25).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 4
[FAIL] e.style['color'] = "hsl(from rgb(20%, 40%, 60%, 80%) 25 s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.6 0.366667 0.2 / 0.8)\nExpected: hsl(from rgba(51, 102, 153, 0.8) 25 s l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "hsl(from rgb(20%, 40%, 60%, 80%) 25deg s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.6 0.366667 0.2 / 0.8)\nExpected: hsl(from rgba(51, 102, 153, 0.8) 25deg s l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "hsl(from rgb(20%, 40%, 60%, 80%) h 20% l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.32 0.4 0.48 / 0.8)\nExpected: hsl(from rgba(51, 102, 153, 0.8) h 20% l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "hsl(from rgb(20%, 40%, 60%, 80%) h s 20% / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.1 0.2 0.3 / 0.8)\nExpected: hsl(from rgba(51, 102, 153, 0.8) h s 20% / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "hsl(from rgb(20%, 40%, 60%, 80%) h s l / .2)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.6 / 0.2)\nExpected: hsl(from rgba(51, 102, 153, 0.8) h s l / .2).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "hsl(from rebeccapurple h l s)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.5 0.3 0.7)\nExpected: hsl(from rebeccapurple h l s).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "hsl(from rebeccapurple h alpha l / s)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.396 0.404)\nExpected: hsl(from rebeccapurple h alpha l / s).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "hsl(from rebeccapurple h l l / l)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.24 0.56)\nExpected: hsl(from rebeccapurple h l l / l).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "hsl(from rebeccapurple h alpha alpha / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.01 0.0099 0.0101)\nExpected: hsl(from rebeccapurple h alpha alpha / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "hsl(from rgb(20%, 40%, 60%, 80%) h l s)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.3 0.5 0.7 / 0.8)\nExpected: hsl(from rgba(51, 102, 153, 0.8) h l s).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 51 +/- 0.01, expected 51 but got 0.3
[FAIL] e.style['color'] = "hsl(from rgb(20%, 40%, 60%, 80%) h alpha l / s)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.3968 0.4 0.4032)\nExpected: hsl(from rgba(51, 102, 153, 0.8) h alpha l / s).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "hsl(from rgb(20%, 40%, 60%, 80%) h l l / l)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.24 0.4 0.56)\nExpected: hsl(from rgba(51, 102, 153, 0.8) h l l / l).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "hsl(from rgb(20%, 40%, 60%, 80%) h alpha alpha / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.007936 0.008 0.008064 / 0.8)\nExpected: hsl(from rgba(51, 102, 153, 0.8) h alpha alpha / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 51 +/- 0.01, expected 51 but got 0.007936
[FAIL] e.style['color'] = "hsl(from rebeccapurple calc(h) calc(s) calc(l))" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.6)\nExpected: hsl(from rebeccapurple calc(h) calc(s) calc(l)).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "hsl(from rgb(20%, 40%, 60%, 80%) calc(h) calc(s) calc(l) / calc(alpha))" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.6 / 0.8)\nExpected: hsl(from rgba(51, 102, 153, 0.8) calc(h) calc(s) calc(l) / calc(alpha)).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 51 +/- 0.01, expected 51 but got 0.2
[FAIL] e.style['color'] = "hsl(from rebeccapurple none none none)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0)\nExpected: hsl(from rebeccapurple none none none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "hsl(from rebeccapurple none none none / none)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0 / none)\nExpected: hsl(from rebeccapurple none none none / none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "hsl(from rebeccapurple h s none)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0)\nExpected: hsl(from rebeccapurple h s none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "hsl(from rebeccapurple h s none / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0)\nExpected: hsl(from rebeccapurple h s none / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "hsl(from rebeccapurple h s l / none)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.6 / none)\nExpected: hsl(from rebeccapurple h s l / none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "hsl(from rebeccapurple none s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.6 0.2 0.2)\nExpected: hsl(from rebeccapurple none s l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "hsl(from hsl(120deg 20% 50% / .5) h s none / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0 / 0.5)\nExpected: hsl(from rgba(102, 153, 102, 0.5) h s none / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 102 +/- 0.01, expected 102 but got 0
[FAIL] e.style['color'] = "hsl(from hsl(120deg 20% 50% / .5) h s l / none)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.6 0.4 / none)\nExpected: hsl(from rgba(102, 153, 102, 0.5) h s l / none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "hsl(from hsl(120deg 20% 50% / .5) none s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.6 0.4 0.4 / 0.5)\nExpected: hsl(from rgba(102, 153, 102, 0.5) none s l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 102 +/- 0.01, expected 102 but got 0.6
[FAIL] e.style['color'] = "hsl(from hsl(none none none) h s l)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0)\nExpected: hsl(from rgb(0, 0, 0) h s l).\nError: assert_equals: Color format is correct. expected "hsl(from rgb(, , ) h s l)" but got "color(srgb   )"
[FAIL] e.style['color'] = "hsl(from hsl(none none none / none) h s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0 / 0)\nExpected: hsl(from rgba(0, 0, 0, 0) h s l / alpha).\nError: assert_equals: Color format is correct. expected "hsl(from rgba(, , , ) h s l / alpha)" but got "color(srgb    / )"
[FAIL] e.style['color'] = "hsl(from hsl(120deg none 50% / .5) h s l)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.5 0.5 0.5 / 0.5)\nExpected: hsl(from rgba(128, 128, 128, 0.5) h s l).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 128 +/- 0.01, expected 128 but got 0.5
[FAIL] e.style['color'] = "hsl(from hsl(120deg 20% 50% / none) h s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.6 0.4 / 0)\nExpected: hsl(from rgba(102, 153, 102, 0) h s l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 102 +/- 0.01, expected 102 but got 0.4
[FAIL] e.style['color'] = "hsl(from hsl(none 20% 50% / .5) h s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.6 0.4 0.4 / 0.5)\nExpected: hsl(from rgba(153, 102, 102, 0.5) h s l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 153 +/- 0.01, expected 153 but got 0.6
[FAIL] e.style['color'] = "hsl(from color-mix(in srgb, red, red) h s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 1 0 0)\nExpected: hsl(from color-mix(in srgb, red, red) h s l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "hsla(from rebeccapurple h s l)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.6)\nExpected: hsl(from rebeccapurple h s l).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "hsla(from rebeccapurple h s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.6)\nExpected: hsl(from rebeccapurple h s l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "hsla(from rgb(20%, 40%, 60%, 80%) h s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.6 / 0.8)\nExpected: hsl(from rgba(51, 102, 153, 0.8) h s l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 51 +/- 0.01, expected 51 but got 0.2
[FAIL] e.style['color'] = "hsla(from hsl(120deg 20% 50% / .5) h s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.6 0.4 / 0.5)\nExpected: hsl(from rgba(102, 153, 102, 0.5) h s l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 102 +/- 0.01, expected 102 but got 0.4
[FAIL] e.style['color'] = "hsla(from hsl(from rebeccapurple h s l) h s l)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.6)\nExpected: hsl(from hsl(from rebeccapurple h s l) h s l).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "hsla(from rebeccapurple 0 0% 0%)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0)\nExpected: hsl(from rebeccapurple 0 0% 0%).\nError: assert_equals: Color format is correct. expected "hsl(from rebeccapurple  % %)" but got "color(srgb   )"
[FAIL] e.style['color'] = "hsla(from rebeccapurple 0deg 0% 0%)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0)\nExpected: hsl(from rebeccapurple 0deg 0% 0%).\nError: assert_equals: Color format is correct. expected "hsl(from rebeccapurple deg % %)" but got "color(srgb   )"
[FAIL] e.style['color'] = "hsla(from rebeccapurple 0 0% 0% / 0)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0 / 0)\nExpected: hsl(from rebeccapurple 0 0% 0% / 0).\nError: assert_equals: Color format is correct. expected "hsl(from rebeccapurple  % % / )" but got "color(srgb    / )"
[FAIL] e.style['color'] = "hsla(from rebeccapurple 0deg 0% 0% / 0)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0 / 0)\nExpected: hsl(from rebeccapurple 0deg 0% 0% / 0).\nError: assert_equals: Color format is correct. expected "hsl(from rebeccapurple deg % % / )" but got "color(srgb    / )"
[FAIL] e.style['color'] = "hsla(from rebeccapurple 0 s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.6 0.2 0.2)\nExpected: hsl(from rebeccapurple 0 s l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "hsla(from rebeccapurple 0deg s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.6 0.2 0.2)\nExpected: hsl(from rebeccapurple 0deg s l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "hsla(from rebeccapurple h 0% l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.4 0.4)\nExpected: hsl(from rebeccapurple h 0% l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "hsla(from rebeccapurple h s 0% / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0)\nExpected: hsl(from rebeccapurple h s 0% / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "hsla(from rebeccapurple h s l / 0)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.6 / 0)\nExpected: hsl(from rebeccapurple h s l / 0).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 4
[FAIL] e.style['color'] = "hsla(from rgb(20%, 40%, 60%, 80%) 0 s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.6 0.2 0.2 / 0.8)\nExpected: hsl(from rgba(51, 102, 153, 0.8) 0 s l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "hsla(from rgb(20%, 40%, 60%, 80%) 0deg s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.6 0.2 0.2 / 0.8)\nExpected: hsl(from rgba(51, 102, 153, 0.8) 0deg s l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "hsla(from rgb(20%, 40%, 60%, 80%) h 0% l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.4 0.4 / 0.8)\nExpected: hsl(from rgba(51, 102, 153, 0.8) h 0% l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "hsla(from rgb(20%, 40%, 60%, 80%) h s 0% / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0 / 0.8)\nExpected: hsl(from rgba(51, 102, 153, 0.8) h s 0% / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "hsla(from rgb(20%, 40%, 60%, 80%) h s l / 0)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.6 / 0)\nExpected: hsl(from rgba(51, 102, 153, 0.8) h s l / 0).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "hsla(from rebeccapurple 25 s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.6 0.366667 0.2)\nExpected: hsl(from rebeccapurple 25 s l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "hsla(from rebeccapurple 25deg s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.6 0.366667 0.2)\nExpected: hsl(from rebeccapurple 25deg s l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "hsla(from rebeccapurple h 20% l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.32 0.48)\nExpected: hsl(from rebeccapurple h 20% l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "hsla(from rebeccapurple h s 20% / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.1 0.3)\nExpected: hsl(from rebeccapurple h s 20% / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
[FAIL] e.style['color'] = "hsla(from rebeccapurple h s l / .25)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.6 / 0.25)\nExpected: hsl(from rebeccapurple h s l / .25).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 4
[FAIL] e.style['color'] = "hsla(from rgb(20%, 40%, 60%, 80%) 25 s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.6 0.366667 0.2 / 0.8)\nExpected: hsl(from rgba(51, 102, 153, 0.8) 25 s l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "hsla(from rgb(20%, 40%, 60%, 80%) 25deg s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.6 0.366667 0.2 / 0.8)\nExpected: hsl(from rgba(51, 102, 153, 0.8) 25deg s l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "hsla(from rgb(20%, 40%, 60%, 80%) h 20% l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.32 0.4 0.48 / 0.8)\nExpected: hsl(from rgba(51, 102, 153, 0.8) h 20% l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "hsla(from rgb(20%, 40%, 60%, 80%) h s 20% / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.1 0.2 0.3 / 0.8)\nExpected: hsl(from rgba(51, 102, 153, 0.8) h s 20% / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "hsla(from rgb(20%, 40%, 60%, 80%) h s l / .2)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.6 / 0.2)\nExpected: hsl(from rgba(51, 102, 153, 0.8) h s l / .2).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "hsla(from rebeccapurple h l s)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.5 0.3 0.7)\nExpected: hsl(from rebeccapurple h l s).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "hsla(from rebeccapurple h alpha l / s)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.396 0.404)\nExpected: hsl(from rebeccapurple h alpha l / s).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "hsla(from rebeccapurple h l l / l)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.24 0.56)\nExpected: hsl(from rebeccapurple h l l / l).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "hsla(from rebeccapurple h alpha alpha / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.01 0.0099 0.0101)\nExpected: hsl(from rebeccapurple h alpha alpha / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "hsla(from rgb(20%, 40%, 60%, 80%) h l s)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.3 0.5 0.7 / 0.8)\nExpected: hsl(from rgba(51, 102, 153, 0.8) h l s).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 51 +/- 0.01, expected 51 but got 0.3
[FAIL] e.style['color'] = "hsla(from rgb(20%, 40%, 60%, 80%) h alpha l / s)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.3968 0.4 0.4032)\nExpected: hsl(from rgba(51, 102, 153, 0.8) h alpha l / s).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "hsla(from rgb(20%, 40%, 60%, 80%) h l l / l)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.24 0.4 0.56)\nExpected: hsl(from rgba(51, 102, 153, 0.8) h l l / l).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "hsla(from rgb(20%, 40%, 60%, 80%) h alpha alpha / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.007936 0.008 0.008064 / 0.8)\nExpected: hsl(from rgba(51, 102, 153, 0.8) h alpha alpha / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 51 +/- 0.01, expected 51 but got 0.007936
[FAIL] e.style['color'] = "hsla(from rebeccapurple calc(h) calc(s) calc(l))" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.6)\nExpected: hsl(from rebeccapurple calc(h) calc(s) calc(l)).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "hsla(from rgb(20%, 40%, 60%, 80%) calc(h) calc(s) calc(l) / calc(alpha))" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.6 / 0.8)\nExpected: hsl(from rgba(51, 102, 153, 0.8) calc(h) calc(s) calc(l) / calc(alpha)).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 51 +/- 0.01, expected 51 but got 0.2
[FAIL] e.style['color'] = "hsla(from rebeccapurple none none none)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0)\nExpected: hsl(from rebeccapurple none none none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "hsla(from rebeccapurple none none none / none)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0 / none)\nExpected: hsl(from rebeccapurple none none none / none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "hsla(from rebeccapurple h s none)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0)\nExpected: hsl(from rebeccapurple h s none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "hsla(from rebeccapurple h s none / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0)\nExpected: hsl(from rebeccapurple h s none / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "hsla(from rebeccapurple h s l / none)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.6 / none)\nExpected: hsl(from rebeccapurple h s l / none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "hsla(from rebeccapurple none s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.6 0.2 0.2)\nExpected: hsl(from rebeccapurple none s l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "hsla(from hsl(120deg 20% 50% / .5) h s none / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0 / 0.5)\nExpected: hsl(from rgba(102, 153, 102, 0.5) h s none / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 102 +/- 0.01, expected 102 but got 0
[FAIL] e.style['color'] = "hsla(from hsl(120deg 20% 50% / .5) h s l / none)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.6 0.4 / none)\nExpected: hsl(from rgba(102, 153, 102, 0.5) h s l / none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "hsla(from hsl(120deg 20% 50% / .5) none s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.6 0.4 0.4 / 0.5)\nExpected: hsl(from rgba(102, 153, 102, 0.5) none s l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 102 +/- 0.01, expected 102 but got 0.6
[FAIL] e.style['color'] = "hsla(from hsl(none none none) h s l)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0)\nExpected: hsl(from rgb(0, 0, 0) h s l).\nError: assert_equals: Color format is correct. expected "hsl(from rgb(, , ) h s l)" but got "color(srgb   )"
[FAIL] e.style['color'] = "hsla(from hsl(none none none / none) h s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0 / 0)\nExpected: hsl(from rgba(0, 0, 0, 0) h s l / alpha).\nError: assert_equals: Color format is correct. expected "hsl(from rgba(, , , ) h s l / alpha)" but got "color(srgb    / )"
[FAIL] e.style['color'] = "hsla(from hsl(120deg none 50% / .5) h s l)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.5 0.5 0.5 / 0.5)\nExpected: hsl(from rgba(128, 128, 128, 0.5) h s l).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 128 +/- 0.01, expected 128 but got 0.5
[FAIL] e.style['color'] = "hsla(from hsl(120deg 20% 50% / none) h s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.6 0.4 / 0)\nExpected: hsl(from rgba(102, 153, 102, 0) h s l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 102 +/- 0.01, expected 102 but got 0.4
[FAIL] e.style['color'] = "hsla(from hsl(none 20% 50% / .5) h s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.6 0.4 0.4 / 0.5)\nExpected: hsl(from rgba(153, 102, 102, 0.5) h s l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 153 +/- 0.01, expected 153 but got 0.6
[FAIL] e.style['color'] = "hsla(from color-mix(in srgb, red, red) h s l / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 1 0 0)\nExpected: hsl(from color-mix(in srgb, red, red) h s l / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "hwb(from rebeccapurple h w b)" should set the property value
  assert_equals: serialization should be canonical expected "hwb(from rebeccapurple h w b)" but got "color(srgb 0.4 0.2 0.6)"
[FAIL] e.style['color'] = "hwb(from rebeccapurple h w b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "hwb(from rebeccapurple h w b / alpha)" but got "color(srgb 0.4 0.2 0.6)"
[FAIL] e.style['color'] = "hwb(from rgb(20%, 40%, 60%, 80%) h w b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.6 / 0.8)\nExpected: hwb(from rgba(51, 102, 153, 0.8) h w b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 51 +/- 0.01, expected 51 but got 0.2
[FAIL] e.style['color'] = "hwb(from hsl(120deg 20% 50% / .5) h w b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.6 0.4 / 0.5)\nExpected: hwb(from rgba(102, 153, 102, 0.5) h w b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 102 +/- 0.01, expected 102 but got 0.4
[FAIL] e.style['color'] = "hwb(from hwb(from rebeccapurple h w b) h w b)" should set the property value
  assert_equals: serialization should be canonical expected "hwb(from hwb(from rebeccapurple h w b) h w b)" but got "color(srgb 0.4 0.2 0.6)"
[FAIL] e.style['color'] = "hwb(from rebeccapurple 0 0% 0%)" should set the property value
  assert_equals: serialization should be canonical expected "hwb(from rebeccapurple 0 0% 0%)" but got "color(srgb 1 0 0)"
[FAIL] e.style['color'] = "hwb(from rebeccapurple 0deg 0% 0%)" should set the property value
  assert_equals: serialization should be canonical expected "hwb(from rebeccapurple 0deg 0% 0%)" but got "color(srgb 1 0 0)"
[FAIL] e.style['color'] = "hwb(from rebeccapurple 0 0% 0% / 0)" should set the property value
  assert_equals: serialization should be canonical expected "hwb(from rebeccapurple 0 0% 0% / 0)" but got "color(srgb 1 0 0 / 0)"
[FAIL] e.style['color'] = "hwb(from rebeccapurple 0deg 0% 0% / 0)" should set the property value
  assert_equals: serialization should be canonical expected "hwb(from rebeccapurple 0deg 0% 0% / 0)" but got "color(srgb 1 0 0 / 0)"
[FAIL] e.style['color'] = "hwb(from rebeccapurple 0 w b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "hwb(from rebeccapurple 0 w b / alpha)" but got "color(srgb 0.6 0.2 0.2)"
[FAIL] e.style['color'] = "hwb(from rebeccapurple 0deg w b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "hwb(from rebeccapurple 0deg w b / alpha)" but got "color(srgb 0.6 0.2 0.2)"
[FAIL] e.style['color'] = "hwb(from rebeccapurple h 0% b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "hwb(from rebeccapurple h 0% b / alpha)" but got "color(srgb 0.3 0 0.6)"
[FAIL] e.style['color'] = "hwb(from rebeccapurple h w 0% / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "hwb(from rebeccapurple h w 0% / alpha)" but got "color(srgb 0.6 0.2 1)"
[FAIL] e.style['color'] = "hwb(from rebeccapurple h w b / 0)" should set the property value
  assert_equals: serialization should be canonical expected "hwb(from rebeccapurple h w b / 0)" but got "color(srgb 0.4 0.2 0.6 / 0)"
[FAIL] e.style['color'] = "hwb(from rgb(20%, 40%, 60%, 80%) 0 w b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.6 0.2 0.2 / 0.8)\nExpected: hwb(from rgba(51, 102, 153, 0.8) 0 w b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "hwb(from rgb(20%, 40%, 60%, 80%) 0deg w b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.6 0.2 0.2 / 0.8)\nExpected: hwb(from rgba(51, 102, 153, 0.8) 0deg w b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "hwb(from rgb(20%, 40%, 60%, 80%) h 0% b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0.3 0.6 / 0.8)\nExpected: hwb(from rgba(51, 102, 153, 0.8) h 0% b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "hwb(from rgb(20%, 40%, 60%, 80%) h w 0% / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.6 1 / 0.8)\nExpected: hwb(from rgba(51, 102, 153, 0.8) h w 0% / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "hwb(from rgb(20%, 40%, 60%, 80%) h w b / 0)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.6 / 0)\nExpected: hwb(from rgba(51, 102, 153, 0.8) h w b / 0).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "hwb(from rebeccapurple 25 w b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "hwb(from rebeccapurple 25 w b / alpha)" but got "color(srgb 0.6 0.366667 0.2)"
[FAIL] e.style['color'] = "hwb(from rebeccapurple 25deg w b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "hwb(from rebeccapurple 25deg w b / alpha)" but got "color(srgb 0.6 0.366667 0.2)"
[FAIL] e.style['color'] = "hwb(from rebeccapurple h 20% b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "hwb(from rebeccapurple h 20% b / alpha)" but got "color(srgb 0.4 0.2 0.6)"
[FAIL] e.style['color'] = "hwb(from rebeccapurple h w 20% / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "hwb(from rebeccapurple h w 20% / alpha)" but got "color(srgb 0.5 0.2 0.8)"
[FAIL] e.style['color'] = "hwb(from rebeccapurple h w b / .2)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0.6 / 0.2)\nExpected: hwb(from rebeccapurple h w b / 0.2).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 4
[FAIL] e.style['color'] = "hwb(from rgb(20%, 40%, 60%, 80%) 25 w b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.6 0.366667 0.2 / 0.8)\nExpected: hwb(from rgba(51, 102, 153, 0.8) 25 w b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "hwb(from rgb(20%, 40%, 60%, 80%) 25deg w b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.6 0.366667 0.2 / 0.8)\nExpected: hwb(from rgba(51, 102, 153, 0.8) 25deg w b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "hwb(from rgb(20%, 40%, 60%, 80%) h 20% b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.6 / 0.8)\nExpected: hwb(from rgba(51, 102, 153, 0.8) h 20% b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "hwb(from rgb(20%, 40%, 60%, 80%) h w 20% / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.5 0.8 / 0.8)\nExpected: hwb(from rgba(51, 102, 153, 0.8) h w 20% / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "hwb(from rgb(20%, 40%, 60%, 80%) h w b / .2)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.6 / 0.2)\nExpected: hwb(from rgba(51, 102, 153, 0.8) h w b / .2).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "hwb(from rebeccapurple h b w)" should set the property value
  assert_equals: serialization should be canonical expected "hwb(from rebeccapurple h b w)" but got "color(srgb 0.6 0.4 0.8)"
[FAIL] e.style['color'] = "hwb(from rebeccapurple h alpha w / b)" should set the property value
  assert_equals: serialization should be canonical expected "hwb(from rebeccapurple h alpha w / b)" but got "color(srgb 0.405 0.01 0.8)"
[FAIL] e.style['color'] = "hwb(from rebeccapurple h w w / w)" should set the property value
  assert_equals: serialization should be canonical expected "hwb(from rebeccapurple h w w / w)" but got "color(srgb 0.5 0.2 0.8)"
[FAIL] e.style['color'] = "hwb(from rebeccapurple h alpha alpha / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "hwb(from rebeccapurple h alpha alpha / alpha)" but got "color(srgb 0.5 0.01 0.99)"
[FAIL] e.style['color'] = "hwb(from rgb(20%, 40%, 60%, 80%) h b w)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.6 0.8 / 0.8)\nExpected: hwb(from rgba(51, 102, 153, 0.8) h b w).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 51 +/- 0.01, expected 51 but got 0.4
[FAIL] e.style['color'] = "hwb(from rgb(20%, 40%, 60%, 80%) h alpha w / b)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.008 0.404 0.8)\nExpected: hwb(from rgba(51, 102, 153, 0.8) h alpha w / b).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "hwb(from rgb(20%, 40%, 60%, 80%) h w w / w)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.5 0.8)\nExpected: hwb(from rgba(51, 102, 153, 0.8) h w w / w).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "hwb(from rgb(20%, 40%, 60%, 80%) h alpha alpha / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.008 0.5 0.992 / 0.8)\nExpected: hwb(from rgba(51, 102, 153, 0.8) h alpha alpha / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 51 +/- 0.01, expected 51 but got 0.008
[FAIL] e.style['color'] = "hwb(from rebeccapurple calc(h) calc(w) calc(b))" should set the property value
  assert_equals: serialization should be canonical expected "hwb(from rebeccapurple calc(h) calc(w) calc(b))" but got "color(srgb 0.4 0.2 0.6)"
[FAIL] e.style['color'] = "hwb(from rgb(20%, 40%, 60%, 80%) calc(h) calc(w) calc(b) / calc(alpha))" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0.6 / 0.8)\nExpected: hwb(from rgba(51, 102, 153, 0.8) calc(h) calc(w) calc(b) / calc(alpha)).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 51 +/- 0.01, expected 51 but got 0.2
[FAIL] e.style['color'] = "hwb(from rebeccapurple none none none)" should set the property value
  assert_equals: serialization should be canonical expected "hwb(from rebeccapurple none none none)" but got "color(srgb 1 0 0)"
[FAIL] e.style['color'] = "hwb(from rebeccapurple none none none / none)" should set the property value
  assert_equals: serialization should be canonical expected "hwb(from rebeccapurple none none none / none)" but got "color(srgb 1 0 0 / none)"
[FAIL] e.style['color'] = "hwb(from rebeccapurple h w none)" should set the property value
  assert_equals: serialization should be canonical expected "hwb(from rebeccapurple h w none)" but got "color(srgb 0.6 0.2 1)"
[FAIL] e.style['color'] = "hwb(from rebeccapurple h w none / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "hwb(from rebeccapurple h w none / alpha)" but got "color(srgb 0.6 0.2 1)"
[FAIL] e.style['color'] = "hwb(from rebeccapurple h w b / none)" should set the property value
  assert_equals: serialization should be canonical expected "hwb(from rebeccapurple h w b / none)" but got "color(srgb 0.4 0.2 0.6 / none)"
[FAIL] e.style['color'] = "hwb(from rebeccapurple none w b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "hwb(from rebeccapurple none w b / alpha)" but got "color(srgb 0.6 0.2 0.2)"
[FAIL] e.style['color'] = "hwb(from hwb(120deg 20% 50% / .5) h w none / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 1 0.2 / 0.5)\nExpected: hwb(from rgba(51, 128, 51, 0.5) h w none / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 51 +/- 0.01, expected 51 but got 0.2
[FAIL] e.style['color'] = "hwb(from hwb(120deg 20% 50% / .5) h w b / none)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.5 0.2 / none)\nExpected: hwb(from rgba(51, 128, 51, 0.5) h w b / none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "hwb(from hwb(120deg 20% 50% / .5) none w b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.5 0.2 0.2 / 0.5)\nExpected: hwb(from rgba(51, 128, 51, 0.5) none w b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 51 +/- 0.01, expected 51 but got 0.5
[FAIL] e.style['color'] = "hwb(from hwb(none none none) h w b)" should set the property value
  Colors do not match.\nActual:   color(srgb 1 0 0)\nExpected: hwb(from rgb(255, 0, 0) h w b).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 255 +/- 0.01, expected 255 but got 1
[FAIL] e.style['color'] = "hwb(from hwb(none none none / none) h w b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 1 0 0 / 0)\nExpected: hwb(from rgba(255, 0, 0, 0) h w b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 255 +/- 0.01, expected 255 but got 1
[FAIL] e.style['color'] = "hwb(from hwb(120deg none 50% / .5) h w b)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0.5 0 / 0.5)\nExpected: hwb(from rgba(0, 128, 0, 0.5) h w b).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 1, expected 128 +/- 0.01, expected 128 but got 0.5
[FAIL] e.style['color'] = "hwb(from hwb(120deg 20% 50% / none) h w b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.5 0.2 / 0)\nExpected: hwb(from rgba(51, 128, 51, 0) h w b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 51 +/- 0.01, expected 51 but got 0.2
[FAIL] e.style['color'] = "hwb(from hwb(none 20% 50% / .5) h w b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.5 0.2 0.2 / 0.5)\nExpected: hwb(from rgba(128, 51, 51, 0.5) h w b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 128 +/- 0.01, expected 128 but got 0.5
[FAIL] e.style['color'] = "hwb(from color-mix(in srgb, red, red) h w b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "hwb(from color-mix(in srgb, red, red) h w b / alpha)" but got "color(srgb 1 0 0)"
[FAIL] e.style['color'] = "lab(from lab(25 20 50) l a b)" should set the property value
  assert_equals: serialization should be canonical expected "lab(from lab(25 20 50) l a b)" but got "lab(25 20 50)"
[FAIL] e.style['color'] = "lab(from lab(25 20 50) l a b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "lab(from lab(25 20 50) l a b / alpha)" but got "lab(25 20 50)"
[FAIL] e.style['color'] = "lab(from lab(25 20 50 / 40%) l a b / alpha)" should set the property value
  Colors do not match.\nActual:   lab(25 20 50 / 0.4)\nExpected: lab(from lab(25 20 50 / 0.4) l a b / alpha).\nError: assert_equals: Color format is correct. expected "lab(from lab(   / ) l a b / alpha)" but got "lab(   / )"
[FAIL] e.style['color'] = "lab(from lab(200 300 400 / 500%) l a b / alpha)" should set the property value
  Colors do not match.\nActual:   lab(100 300 400)\nExpected: lab(from lab(100 300 400) l a b / alpha).\nError: assert_equals: Color format is correct. expected "lab(from lab(  ) l a b / alpha)" but got "lab(  )"
[FAIL] e.style['color'] = "lab(from lab(-200 -300 -400 / -500%) l a b / alpha)" should set the property value
  Colors do not match.\nActual:   lab(0 -300 -400 / 0)\nExpected: lab(from lab(0 -300 -400 / 0) l a b / alpha).\nError: assert_equals: Color format is correct. expected "lab(from lab( - - / ) l a b / alpha)" but got "lab( - - / )"
[FAIL] e.style['color'] = "lab(from lab(from lab(25 20 50) l a b) l a b)" should set the property value
  assert_equals: serialization should be canonical expected "lab(from lab(from lab(25 20 50) l a b) l a b)" but got "lab(25 20 50)"
[FAIL] e.style['color'] = "lab(from color(display-p3 0 0 0) l a b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "lab(from color(display-p3 0 0 0) l a b / alpha)" but got "lab(0 0 0)"
[FAIL] e.style['color'] = "lab(from lab(25 20 50) 0 0 0)" should set the property value
  assert_equals: serialization should be canonical expected "lab(from lab(25 20 50) 0 0 0)" but got "lab(0 0 0)"
[FAIL] e.style['color'] = "lab(from lab(25 20 50) 0 0 0 / 0)" should set the property value
  assert_equals: serialization should be canonical expected "lab(from lab(25 20 50) 0 0 0 / 0)" but got "lab(0 0 0 / 0)"
[FAIL] e.style['color'] = "lab(from lab(25 20 50) 0 a b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "lab(from lab(25 20 50) 0 a b / alpha)" but got "lab(0 20 50)"
[FAIL] e.style['color'] = "lab(from lab(25 20 50) l 0 b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "lab(from lab(25 20 50) l 0 b / alpha)" but got "lab(25 0 50)"
[FAIL] e.style['color'] = "lab(from lab(25 20 50) l a 0 / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "lab(from lab(25 20 50) l a 0 / alpha)" but got "lab(25 20 0)"
[FAIL] e.style['color'] = "lab(from lab(25 20 50) l a b / 0)" should set the property value
  assert_equals: serialization should be canonical expected "lab(from lab(25 20 50) l a b / 0)" but got "lab(25 20 50 / 0)"
[FAIL] e.style['color'] = "lab(from lab(25 20 50 / 40%) 0 a b / alpha)" should set the property value
  Colors do not match.\nActual:   lab(0 20 50 / 0.4)\nExpected: lab(from lab(25 20 50 / 0.4) 0 a b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "lab(from lab(25 20 50 / 40%) l 0 b / alpha)" should set the property value
  Colors do not match.\nActual:   lab(25 0 50 / 0.4)\nExpected: lab(from lab(25 20 50 / 0.4) l 0 b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "lab(from lab(25 20 50 / 40%) l a 0 / alpha)" should set the property value
  Colors do not match.\nActual:   lab(25 20 0 / 0.4)\nExpected: lab(from lab(25 20 50 / 0.4) l a 0 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "lab(from lab(25 20 50 / 40%) l a b / 0)" should set the property value
  Colors do not match.\nActual:   lab(25 20 50 / 0)\nExpected: lab(from lab(25 20 50 / 0.4) l a b / 0).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "lab(from lab(25 20 50) 35 a b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "lab(from lab(25 20 50) 35 a b / alpha)" but got "lab(35 20 50)"
[FAIL] e.style['color'] = "lab(from lab(25 20 50) l 35 b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "lab(from lab(25 20 50) l 35 b / alpha)" but got "lab(25 35 50)"
[FAIL] e.style['color'] = "lab(from lab(25 20 50) l a 35 / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "lab(from lab(25 20 50) l a 35 / alpha)" but got "lab(25 20 35)"
[FAIL] e.style['color'] = "lab(from lab(25 20 50) l a b / .35)" should set the property value
  Colors do not match.\nActual:   lab(25 20 50 / 0.35)\nExpected: lab(from lab(25 20 50) l a b / 0.35).\nError: assert_equals: Color format is correct. expected "lab(from lab(  ) l a b / )" but got "lab(   / )"
[FAIL] e.style['color'] = "lab(from lab(25 20 50 / 40%) 35 a b / alpha)" should set the property value
  Colors do not match.\nActual:   lab(35 20 50 / 0.4)\nExpected: lab(from lab(25 20 50 / 0.4) 35 a b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "lab(from lab(25 20 50 / 40%) l 35 b / alpha)" should set the property value
  Colors do not match.\nActual:   lab(25 35 50 / 0.4)\nExpected: lab(from lab(25 20 50 / 0.4) l 35 b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "lab(from lab(25 20 50 / 40%) l a 35 / alpha)" should set the property value
  Colors do not match.\nActual:   lab(25 20 35 / 0.4)\nExpected: lab(from lab(25 20 50 / 0.4) l a 35 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "lab(from lab(25 20 50 / 40%) l a b / .35)" should set the property value
  Colors do not match.\nActual:   lab(25 20 50 / 0.35)\nExpected: lab(from lab(25 20 50 / 0.4) l a b / .35).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "lab(from lab(0.7 45 30 / 40%) 200 300 400 / 500)" should set the property value
  Colors do not match.\nActual:   lab(100 300 400)\nExpected: lab(from lab(0.7 45 30 / 0.4) 200 300 400 / 500).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 8 got 3
[FAIL] e.style['color'] = "lab(from lab(0.7 45 30 / 40%) -200 -300 -400 / -500)" should set the property value
  Colors do not match.\nActual:   lab(0 -300 -400 / 0)\nExpected: lab(from lab(0.7 45 30 / 0.4) -200 -300 -400 / -500).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 8 got 4
[FAIL] e.style['color'] = "lab(from lab(25 20 50) l b a)" should set the property value
  assert_equals: serialization should be canonical expected "lab(from lab(25 20 50) l b a)" but got "lab(25 50 20)"
[FAIL] e.style['color'] = "lab(from lab(25 20 50) l a a / a)" should set the property value
  assert_equals: serialization should be canonical expected "lab(from lab(25 20 50) l a a / a)" but got "lab(25 20 20)"
[FAIL] e.style['color'] = "lab(from lab(25 20 50 / 40%) l b a)" should set the property value
  Colors do not match.\nActual:   lab(25 50 20 / 0.4)\nExpected: lab(from lab(25 20 50 / 0.4) l b a).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 1, expected 20 +/- 0.01, expected 20 but got 50
[FAIL] e.style['color'] = "lab(from lab(25 20 50 / 40%) l a a / a)" should set the property value
  Colors do not match.\nActual:   lab(25 20 20)\nExpected: lab(from lab(25 20 50 / 0.4) l a a / a).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "lab(from lab(25 20 50) calc(l) calc(a) calc(b))" should set the property value
  assert_equals: serialization should be canonical expected "lab(from lab(25 20 50) calc(l) calc(a) calc(b))" but got "lab(25 20 50)"
[FAIL] e.style['color'] = "lab(from lab(25 20 50 / 40%) calc(l) calc(a) calc(b) / calc(alpha))" should set the property value
  Colors do not match.\nActual:   lab(25 20 50 / 0.4)\nExpected: lab(from lab(25 20 50 / 0.4) calc(l) calc(a) calc(b) / calc(alpha)).\nError: assert_equals: Color format is correct. expected "lab(from lab(   / ) calc(l) calc(a) calc(b) / calc(alpha))" but got "lab(   / )"
[FAIL] e.style['color'] = "lab(from lab(50 -30 40) calc(l - 20) a b)" should set the property value
  Colors do not match.\nActual:   lab(30 -30 40)\nExpected: lab(from lab(50 -30 40) calc(-20 + l) a b).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "lab(from lab(50 -30 40) l calc(a / 3) calc(b / 2))" should set the property value
  Colors do not match.\nActual:   lab(50 -10 20)\nExpected: lab(from lab(50 -30 40) l calc(0.333333 * a) calc(0.5 * b)).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 3
[FAIL] e.style['color'] = "lab(from lab(25 20 50) none none none)" should set the property value
  assert_equals: serialization should be canonical expected "lab(from lab(25 20 50) none none none)" but got "lab(none none none)"
[FAIL] e.style['color'] = "lab(from lab(25 20 50) none none none / none)" should set the property value
  assert_equals: serialization should be canonical expected "lab(from lab(25 20 50) none none none / none)" but got "lab(none none none / none)"
[FAIL] e.style['color'] = "lab(from lab(25 20 50) l a none)" should set the property value
  assert_equals: serialization should be canonical expected "lab(from lab(25 20 50) l a none)" but got "lab(25 20 none)"
[FAIL] e.style['color'] = "lab(from lab(25 20 50) l a none / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "lab(from lab(25 20 50) l a none / alpha)" but got "lab(25 20 none)"
[FAIL] e.style['color'] = "lab(from lab(25 20 50) l a b / none)" should set the property value
  assert_equals: serialization should be canonical expected "lab(from lab(25 20 50) l a b / none)" but got "lab(25 20 50 / none)"
[FAIL] e.style['color'] = "lab(from lab(25 20 50 / 40%) l a none / alpha)" should set the property value
  Colors do not match.\nActual:   lab(25 20 none / 0.4)\nExpected: lab(from lab(25 20 50 / 0.4) l a none / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "lab(from lab(25 20 50 / 40%) l a b / none)" should set the property value
  Colors do not match.\nActual:   lab(25 20 50 / none)\nExpected: lab(from lab(25 20 50 / 0.4) l a b / none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "lab(from lab(none none none) l a b)" should set the property value
  assert_equals: serialization should be canonical expected "lab(from lab(none none none) l a b)" but got "lab(0 0 0)"
[FAIL] e.style['color'] = "lab(from lab(none none none / none) l a b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "lab(from lab(none none none / none) l a b / alpha)" but got "lab(0 0 0 / 0)"
[FAIL] e.style['color'] = "lab(from lab(25 none 50) l a b)" should set the property value
  assert_equals: serialization should be canonical expected "lab(from lab(25 none 50) l a b)" but got "lab(25 0 50)"
[FAIL] e.style['color'] = "lab(from lab(25 20 50 / none) l a b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "lab(from lab(25 20 50 / none) l a b / alpha)" but got "lab(25 20 50 / 0)"
[FAIL] e.style['color'] = "lab(from color-mix(in lab, lab(25 20 50), lab(25 20 50)) l a b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "lab(from color-mix(in lab, lab(25 20 50), lab(25 20 50)) l a b / alpha)" but got "lab(25 20 50)"
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) l a b)" should set the property value
  assert_equals: serialization should be canonical expected "oklab(from oklab(0.25 0.2 0.5) l a b)" but got "oklab(0.25 0.2 0.5)"
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) l a b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "oklab(from oklab(0.25 0.2 0.5) l a b / alpha)" but got "oklab(0.25 0.2 0.5)"
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5 / 40%) l a b / alpha)" should set the property value
  Colors do not match.\nActual:   oklab(0.25 0.2 0.5 / 0.4)\nExpected: oklab(from oklab(0.25 0.2 0.5 / 0.4) l a b / alpha).\nError: assert_equals: Color format is correct. expected "oklab(from oklab(   / ) l a b / alpha)" but got "oklab(   / )"
[FAIL] e.style['color'] = "oklab(from oklab(2 3 4 / 500%) l a b / alpha)" should set the property value
  Colors do not match.\nActual:   oklab(1 3 4)\nExpected: oklab(from oklab(1 3 4) l a b / alpha).\nError: assert_equals: Color format is correct. expected "oklab(from oklab(  ) l a b / alpha)" but got "oklab(  )"
[FAIL] e.style['color'] = "oklab(from oklab(-2 -3 -4 / -500%) l a b / alpha)" should set the property value
  Colors do not match.\nActual:   oklab(0 -3 -4 / 0)\nExpected: oklab(from oklab(0 -3 -4 / 0) l a b / alpha).\nError: assert_equals: Color format is correct. expected "oklab(from oklab( - - / ) l a b / alpha)" but got "oklab( - - / )"
[FAIL] e.style['color'] = "oklab(from oklab(from oklab(0.25 0.2 0.5) l a b) l a b)" should set the property value
  assert_equals: serialization should be canonical expected "oklab(from oklab(from oklab(0.25 0.2 0.5) l a b) l a b)" but got "oklab(0.25 0.2 0.5)"
[FAIL] e.style['color'] = "oklab(from color(display-p3 0 0 0) l a b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "oklab(from color(display-p3 0 0 0) l a b / alpha)" but got "oklab(0 0 0)"
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) 0 0 0)" should set the property value
  assert_equals: serialization should be canonical expected "oklab(from oklab(0.25 0.2 0.5) 0 0 0)" but got "oklab(0 0 0)"
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) 0 0 0 / 0)" should set the property value
  assert_equals: serialization should be canonical expected "oklab(from oklab(0.25 0.2 0.5) 0 0 0 / 0)" but got "oklab(0 0 0 / 0)"
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) 0 a b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "oklab(from oklab(0.25 0.2 0.5) 0 a b / alpha)" but got "oklab(0 0.2 0.5)"
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) l 0 b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "oklab(from oklab(0.25 0.2 0.5) l 0 b / alpha)" but got "oklab(0.25 0 0.5)"
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) l a 0 / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "oklab(from oklab(0.25 0.2 0.5) l a 0 / alpha)" but got "oklab(0.25 0.2 0)"
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) l a b / 0)" should set the property value
  assert_equals: serialization should be canonical expected "oklab(from oklab(0.25 0.2 0.5) l a b / 0)" but got "oklab(0.25 0.2 0.5 / 0)"
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5 / 40%) 0 a b / alpha)" should set the property value
  Colors do not match.\nActual:   oklab(0 0.2 0.5 / 0.4)\nExpected: oklab(from oklab(0.25 0.2 0.5 / 0.4) 0 a b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5 / 40%) l 0 b / alpha)" should set the property value
  Colors do not match.\nActual:   oklab(0.25 0 0.5 / 0.4)\nExpected: oklab(from oklab(0.25 0.2 0.5 / 0.4) l 0 b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5 / 40%) l a 0 / alpha)" should set the property value
  Colors do not match.\nActual:   oklab(0.25 0.2 0 / 0.4)\nExpected: oklab(from oklab(0.25 0.2 0.5 / 0.4) l a 0 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5 / 40%) l a b / 0)" should set the property value
  Colors do not match.\nActual:   oklab(0.25 0.2 0.5 / 0)\nExpected: oklab(from oklab(0.25 0.2 0.5 / 0.4) l a b / 0).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) 0.35 a b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "oklab(from oklab(0.25 0.2 0.5) 0.35 a b / alpha)" but got "oklab(0.35 0.2 0.5)"
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) l 0.35 b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "oklab(from oklab(0.25 0.2 0.5) l 0.35 b / alpha)" but got "oklab(0.25 0.35 0.5)"
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) l a 0.35 / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "oklab(from oklab(0.25 0.2 0.5) l a 0.35 / alpha)" but got "oklab(0.25 0.2 0.35)"
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) l a b / 0.35)" should set the property value
  assert_equals: serialization should be canonical expected "oklab(from oklab(0.25 0.2 0.5) l a b / 0.35)" but got "oklab(0.25 0.2 0.5 / 0.35)"
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5 / 40%) 0.35 a b / alpha)" should set the property value
  Colors do not match.\nActual:   oklab(0.35 0.2 0.5 / 0.4)\nExpected: oklab(from oklab(0.25 0.2 0.5 / 0.4) 0.35 a b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5 / 40%) l 0.35 b / alpha)" should set the property value
  Colors do not match.\nActual:   oklab(0.25 0.35 0.5 / 0.4)\nExpected: oklab(from oklab(0.25 0.2 0.5 / 0.4) l 0.35 b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5 / 40%) l a 0.35 / alpha)" should set the property value
  Colors do not match.\nActual:   oklab(0.25 0.2 0.35 / 0.4)\nExpected: oklab(from oklab(0.25 0.2 0.5 / 0.4) l a 0.35 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5 / 40%) l a b / .35)" should set the property value
  Colors do not match.\nActual:   oklab(0.25 0.2 0.5 / 0.35)\nExpected: oklab(from oklab(0.25 0.2 0.5 / 0.4) l a b / .35).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "oklab(from oklab(0.7 0.45 0.3 / 40%) 2 3 4 / 500)" should set the property value
  Colors do not match.\nActual:   oklab(1 3 4)\nExpected: oklab(from oklab(0.7 0.45 0.3 / 0.4) 2 3 4 / 500).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 8 got 3
[FAIL] e.style['color'] = "oklab(from oklab(0.7 0.45 0.3 / 40%) -2 -3 -4 / -500)" should set the property value
  Colors do not match.\nActual:   oklab(0 -3 -4 / 0)\nExpected: oklab(from oklab(0.7 0.45 0.3 / 0.4) -2 -3 -4 / -500).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 8 got 4
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) l b a)" should set the property value
  assert_equals: serialization should be canonical expected "oklab(from oklab(0.25 0.2 0.5) l b a)" but got "oklab(0.25 0.5 0.2)"
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) l a a / a)" should set the property value
  assert_equals: serialization should be canonical expected "oklab(from oklab(0.25 0.2 0.5) l a a / a)" but got "oklab(0.25 0.2 0.2 / 0.2)"
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5 / 40%) l b a)" should set the property value
  Colors do not match.\nActual:   oklab(0.25 0.5 0.2 / 0.4)\nExpected: oklab(from oklab(0.25 0.2 0.5 / 0.4) l b a).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 1, expected 0.2 +/- 0.01, expected 0.2 but got 0.5
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5 / 40%) l a a / a)" should set the property value
  Colors do not match.\nActual:   oklab(0.25 0.2 0.2 / 0.2)\nExpected: oklab(from oklab(0.25 0.2 0.5 / 0.4) l a a / a).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 2, expected 0.5 +/- 0.01, expected 0.5 but got 0.2
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) calc(l) calc(a) calc(b))" should set the property value
  assert_equals: serialization should be canonical expected "oklab(from oklab(0.25 0.2 0.5) calc(l) calc(a) calc(b))" but got "oklab(0.25 0.2 0.5)"
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5 / 40%) calc(l) calc(a) calc(b) / calc(alpha))" should set the property value
  Colors do not match.\nActual:   oklab(0.25 0.2 0.5 / 0.4)\nExpected: oklab(from oklab(0.25 0.2 0.5 / 0.4) calc(l) calc(a) calc(b) / calc(alpha)).\nError: assert_equals: Color format is correct. expected "oklab(from oklab(   / ) calc(l) calc(a) calc(b) / calc(alpha))" but got "oklab(   / )"
[FAIL] e.style['color'] = "oklab(from oklab(0.7 0.25 -0.15) calc(l - 0.2) a b)" should set the property value
  Colors do not match.\nActual:   oklab(0.5 0.25 -0.15)\nExpected: oklab(from oklab(0.7 0.25 -0.15) calc(-0.2 + l) a b).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "oklab(from oklab(0.7 0.25 -0.15) l calc(a / 2) calc(b / 3))" should set the property value
  Colors do not match.\nActual:   oklab(0.7 0.125 -0.05)\nExpected: oklab(from oklab(0.7 0.25 -0.15) l calc(0.5 * a) calc(0.333333 * b)).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 3
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) none none none)" should set the property value
  assert_equals: serialization should be canonical expected "oklab(from oklab(0.25 0.2 0.5) none none none)" but got "oklab(none none none)"
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) none none none / none)" should set the property value
  assert_equals: serialization should be canonical expected "oklab(from oklab(0.25 0.2 0.5) none none none / none)" but got "oklab(none none none / none)"
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) l a none)" should set the property value
  assert_equals: serialization should be canonical expected "oklab(from oklab(0.25 0.2 0.5) l a none)" but got "oklab(0.25 0.2 none)"
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) l a none / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "oklab(from oklab(0.25 0.2 0.5) l a none / alpha)" but got "oklab(0.25 0.2 none)"
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) l a b / none)" should set the property value
  assert_equals: serialization should be canonical expected "oklab(from oklab(0.25 0.2 0.5) l a b / none)" but got "oklab(0.25 0.2 0.5 / none)"
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5 / 40%) l a none / alpha)" should set the property value
  Colors do not match.\nActual:   oklab(0.25 0.2 none / 0.4)\nExpected: oklab(from oklab(0.25 0.2 0.5 / 0.4) l a none / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5 / 40%) l a b / none)" should set the property value
  Colors do not match.\nActual:   oklab(0.25 0.2 0.5 / none)\nExpected: oklab(from oklab(0.25 0.2 0.5 / 0.4) l a b / none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "oklab(from oklab(none none none) l a b)" should set the property value
  assert_equals: serialization should be canonical expected "oklab(from oklab(none none none) l a b)" but got "oklab(0 0 0)"
[FAIL] e.style['color'] = "oklab(from oklab(none none none / none) l a b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "oklab(from oklab(none none none / none) l a b / alpha)" but got "oklab(0 0 0 / 0)"
[FAIL] e.style['color'] = "oklab(from oklab(0.25 none 0.5) l a b)" should set the property value
  assert_equals: serialization should be canonical expected "oklab(from oklab(0.25 none 0.5) l a b)" but got "oklab(0.25 0 0.5)"
[FAIL] e.style['color'] = "oklab(from oklab(0.25 0.2 0.5 / none) l a b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "oklab(from oklab(0.25 0.2 0.5 / none) l a b / alpha)" but got "oklab(0.25 0.2 0.5 / 0)"
[FAIL] e.style['color'] = "oklab(from color-mix(in oklab, oklab(0.25 0.2 0.5), oklab(0.25 0.2 0.5)) l a b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "oklab(from color-mix(in oklab, oklab(0.25 0.2 0.5), oklab(0.25 0.2 0.5)) l a b / alpha)" but got "oklab(0.25 0.2 0.5)"
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30) l c h)" should set the property value
  assert_equals: serialization should be canonical expected "lch(from lch(0.7 45 30) l c h)" but got "lch(0.7 45 30)"
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30) l c h / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "lch(from lch(0.7 45 30) l c h / alpha)" but got "lch(0.7 45 30)"
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30 / 40%) l c h / alpha)" should set the property value
  Colors do not match.\nActual:   lch(0.7 45 30 / 0.4)\nExpected: lch(from lch(0.7 45 30 / 0.4) l c h / alpha).\nError: assert_equals: Color format is correct. expected "lch(from lch(   / ) l c h / alpha)" but got "lch(   / )"
[FAIL] e.style['color'] = "lch(from lch(200 300 400 / 500%) l c h / alpha)" should set the property value
  Colors do not match.\nActual:   lch(100 300 40)\nExpected: lch(from lch(100 300 40) l c h / alpha).\nError: assert_equals: Color format is correct. expected "lch(from lch(  ) l c h / alpha)" but got "lch(  )"
[FAIL] e.style['color'] = "lch(from lch(-200 -300 -400 / -500%) l c h / alpha)" should set the property value
  Colors do not match.\nActual:   lch(0 0 320 / 0)\nExpected: lch(from lch(0 0 320 / 0) l c h / alpha).\nError: assert_equals: Color format is correct. expected "lch(from lch(   / ) l c h / alpha)" but got "lch(   / )"
[FAIL] e.style['color'] = "lch(from lch(from lch(0.7 45 30) l c h) l c h)" should set the property value
  assert_equals: serialization should be canonical expected "lch(from lch(from lch(0.7 45 30) l c h) l c h)" but got "lch(0.7 45 30)"
[FAIL] e.style['color'] = "lch(from color(display-p3 0 0 0) l c h / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "lch(from color(display-p3 0 0 0) l c h / alpha)" but got "lch(0 0 0)"
[FAIL] e.style['color'] = "lch(from lab(0.7 45 30) l c h / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "lch(from lab(0.7 45 30) l c h / alpha)" but got "lch(0.7 54.0833 33.6901)"
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30) 0 0 0)" should set the property value
  assert_equals: serialization should be canonical expected "lch(from lch(0.7 45 30) 0 0 0)" but got "lch(0 0 0)"
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30) 0 0 0deg)" should set the property value
  assert_equals: serialization should be canonical expected "lch(from lch(0.7 45 30) 0 0 0deg)" but got "lch(0 0 0)"
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30) 0 0 0 / 0)" should set the property value
  assert_equals: serialization should be canonical expected "lch(from lch(0.7 45 30) 0 0 0 / 0)" but got "lch(0 0 0 / 0)"
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30) 0 0 0deg / 0)" should set the property value
  assert_equals: serialization should be canonical expected "lch(from lch(0.7 45 30) 0 0 0deg / 0)" but got "lch(0 0 0 / 0)"
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30) 0 c h / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "lch(from lch(0.7 45 30) 0 c h / alpha)" but got "lch(0 45 30)"
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30) l 0 h / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "lch(from lch(0.7 45 30) l 0 h / alpha)" but got "lch(0.7 0 30)"
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30) l c 0 / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "lch(from lch(0.7 45 30) l c 0 / alpha)" but got "lch(0.7 45 0)"
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30) l c 0deg / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "lch(from lch(0.7 45 30) l c 0deg / alpha)" but got "lch(0.7 45 0)"
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30) l c h / 0)" should set the property value
  assert_equals: serialization should be canonical expected "lch(from lch(0.7 45 30) l c h / 0)" but got "lch(0.7 45 30 / 0)"
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30 / 40%) 0 c h / alpha)" should set the property value
  Colors do not match.\nActual:   lch(0 45 30 / 0.4)\nExpected: lch(from lch(0.7 45 30 / 0.4) 0 c h / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30 / 40%) l 0 h / alpha)" should set the property value
  Colors do not match.\nActual:   lch(0.7 0 30 / 0.4)\nExpected: lch(from lch(0.7 45 30 / 0.4) l 0 h / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30 / 40%) l c 0 / alpha)" should set the property value
  Colors do not match.\nActual:   lch(0.7 45 0 / 0.4)\nExpected: lch(from lch(0.7 45 30 / 0.4) l c 0 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30 / 40%) l c 0deg / alpha)" should set the property value
  Colors do not match.\nActual:   lch(0.7 45 0 / 0.4)\nExpected: lch(from lch(0.7 45 30 / 0.4) l c 0deg / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30 / 40%) l c h / 0)" should set the property value
  Colors do not match.\nActual:   lch(0.7 45 30 / 0)\nExpected: lch(from lch(0.7 45 30 / 0.4) l c h / 0).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30) 25 c h / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "lch(from lch(0.7 45 30) 25 c h / alpha)" but got "lch(25 45 30)"
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30) l 25 h / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "lch(from lch(0.7 45 30) l 25 h / alpha)" but got "lch(0.7 25 30)"
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30) l c 25 / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "lch(from lch(0.7 45 30) l c 25 / alpha)" but got "lch(0.7 45 25)"
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30) l c 25deg / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "lch(from lch(0.7 45 30) l c 25deg / alpha)" but got "lch(0.7 45 25)"
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30) l c h / 0.25)" should set the property value
  assert_equals: serialization should be canonical expected "lch(from lch(0.7 45 30) l c h / 0.25)" but got "lch(0.7 45 30 / 0.25)"
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30 / 40%) 25 c h / alpha)" should set the property value
  Colors do not match.\nActual:   lch(25 45 30 / 0.4)\nExpected: lch(from lch(0.7 45 30 / 0.4) 25 c h / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30 / 40%) l 25 h / alpha)" should set the property value
  Colors do not match.\nActual:   lch(0.7 25 30 / 0.4)\nExpected: lch(from lch(0.7 45 30 / 0.4) l 25 h / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30 / 40%) l c 25 / alpha)" should set the property value
  Colors do not match.\nActual:   lch(0.7 45 25 / 0.4)\nExpected: lch(from lch(0.7 45 30 / 0.4) l c 25 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30 / 40%) l c 25deg / alpha)" should set the property value
  Colors do not match.\nActual:   lch(0.7 45 25 / 0.4)\nExpected: lch(from lch(0.7 45 30 / 0.4) l c 25deg / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30 / 40%) l c h / .25)" should set the property value
  Colors do not match.\nActual:   lch(0.7 45 30 / 0.25)\nExpected: lch(from lch(0.7 45 30 / 0.4) l c h / .25).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30 / 40%) 200 300 400 / 500)" should set the property value
  Colors do not match.\nActual:   lch(100 300 40)\nExpected: lch(from lch(0.7 45 30 / 0.4) 200 300 400 / 500).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 8 got 3
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30 / 40%) -200 -300 -400 / -500)" should set the property value
  Colors do not match.\nActual:   lch(0 0 320 / 0)\nExpected: lch(from lch(0.7 45 30 / 0.4) -200 -300 -400 / -500).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 8 got 4
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30 / 40%) 50 120 400deg / 500)" should set the property value
  Colors do not match.\nActual:   lch(50 120 40)\nExpected: lch(from lch(0.7 45 30 / 0.4) 50 120 400deg / 500).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 8 got 3
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30 / 40%) 50 120 -400deg / -500)" should set the property value
  Colors do not match.\nActual:   lch(50 120 320 / 0)\nExpected: lch(from lch(0.7 45 30 / 0.4) 50 120 -400deg / -500).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 8 got 4
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30) l c c / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "lch(from lch(0.7 45 30) l c c / alpha)" but got "lch(0.7 45 45)"
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30 / 40%) l c c / alpha)" should set the property value
  Colors do not match.\nActual:   lch(0.7 45 45 / 0.4)\nExpected: lch(from lch(0.7 45 30 / 0.4) l c c / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 2, expected 30 +/- 0.01, expected 30 but got 45
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30) calc(l) calc(c) calc(h))" should set the property value
  assert_equals: serialization should be canonical expected "lch(from lch(0.7 45 30) calc(l) calc(c) calc(h))" but got "lch(0.7 45 30)"
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30 / 40%) calc(l) calc(c) calc(h) / calc(alpha))" should set the property value
  Colors do not match.\nActual:   lch(0.7 45 30 / 0.4)\nExpected: lch(from lch(0.7 45 30 / 0.4) calc(l) calc(c) calc(h) / calc(alpha)).\nError: assert_equals: Color format is correct. expected "lch(from lch(   / ) calc(l) calc(c) calc(h) / calc(alpha))" but got "lch(   / )"
[FAIL] e.style['color'] = "lch(from lch(50 100 300) calc(l - 20) c h)" should set the property value
  Colors do not match.\nActual:   lch(30 100 300)\nExpected: lch(from lch(50 100 300) calc(-20 + l) c h).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "lch(from lch(50 100 300) l calc(c / 2) h)" should set the property value
  Colors do not match.\nActual:   lch(50 50 300)\nExpected: lch(from lch(50 100 300) l calc(0.5 * c) h).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "lch(from lch(50 100 300) l c calc(h * 2.5))" should set the property value
  Colors do not match.\nActual:   lch(50 100 30)\nExpected: lch(from lch(50 100 300) l c calc(2.5 * h)).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30) none none none)" should set the property value
  assert_equals: serialization should be canonical expected "lch(from lch(0.7 45 30) none none none)" but got "lch(none none none)"
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30) none none none / none)" should set the property value
  assert_equals: serialization should be canonical expected "lch(from lch(0.7 45 30) none none none / none)" but got "lch(none none none / none)"
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30) l c none)" should set the property value
  assert_equals: serialization should be canonical expected "lch(from lch(0.7 45 30) l c none)" but got "lch(0.7 45 none)"
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30) l c none / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "lch(from lch(0.7 45 30) l c none / alpha)" but got "lch(0.7 45 none)"
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30) l c h / none)" should set the property value
  assert_equals: serialization should be canonical expected "lch(from lch(0.7 45 30) l c h / none)" but got "lch(0.7 45 30 / none)"
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30 / 40%) l c none / alpha)" should set the property value
  Colors do not match.\nActual:   lch(0.7 45 none / 0.4)\nExpected: lch(from lch(0.7 45 30 / 0.4) l c none / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30 / 40%) l c h / none)" should set the property value
  Colors do not match.\nActual:   lch(0.7 45 30 / none)\nExpected: lch(from lch(0.7 45 30 / 0.4) l c h / none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "lch(from lch(none none none) l c h)" should set the property value
  assert_equals: serialization should be canonical expected "lch(from lch(none none none) l c h)" but got "lch(0 0 0)"
[FAIL] e.style['color'] = "lch(from lch(none none none / none) l c h / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "lch(from lch(none none none / none) l c h / alpha)" but got "lch(0 0 0 / 0)"
[FAIL] e.style['color'] = "lch(from lch(0.7 none 30) l c h)" should set the property value
  assert_equals: serialization should be canonical expected "lch(from lch(0.7 none 30) l c h)" but got "lch(0.7 0 30)"
[FAIL] e.style['color'] = "lch(from lch(0.7 45 30 / none) l c h / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "lch(from lch(0.7 45 30 / none) l c h / alpha)" but got "lch(0.7 45 30 / 0)"
[FAIL] e.style['color'] = "lch(from color-mix(in lch, lch(70 45 30), lch(70 45 30)) l c h / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "lch(from color-mix(in lch, lch(70 45 30), lch(70 45 30)) l c h / alpha)" but got "lch(70 45 30)"
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30) l c h)" should set the property value
  assert_equals: serialization should be canonical expected "oklch(from oklch(0.7 0.45 30) l c h)" but got "oklch(0.7 0.45 30)"
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30) l c h / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "oklch(from oklch(0.7 0.45 30) l c h / alpha)" but got "oklch(0.7 0.45 30)"
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) l c h / alpha)" should set the property value
  Colors do not match.\nActual:   oklch(0.7 0.45 30 / 0.4)\nExpected: oklch(from oklch(0.7 0.45 30 / 0.4) l c h / alpha).\nError: assert_equals: Color format is correct. expected "oklch(from oklch(   / ) l c h / alpha)" but got "oklch(   / )"
[FAIL] e.style['color'] = "oklch(from oklch(2 3 400 / 500%) l c h / alpha)" should set the property value
  Colors do not match.\nActual:   oklch(1 3 40)\nExpected: oklch(from oklch(1 3 40) l c h / alpha).\nError: assert_equals: Color format is correct. expected "oklch(from oklch(  ) l c h / alpha)" but got "oklch(  )"
[FAIL] e.style['color'] = "oklch(from oklch(-2 -3 -400 / -500%) l c h / alpha)" should set the property value
  Colors do not match.\nActual:   oklch(0 0 320 / 0)\nExpected: oklch(from oklch(0 0 320 / 0) l c h / alpha).\nError: assert_equals: Color format is correct. expected "oklch(from oklch(   / ) l c h / alpha)" but got "oklch(   / )"
[FAIL] e.style['color'] = "oklch(from oklch(from oklch(0.7 0.45 30) l c h) l c h)" should set the property value
  assert_equals: serialization should be canonical expected "oklch(from oklch(from oklch(0.7 0.45 30) l c h) l c h)" but got "oklch(0.7 0.45 30)"
[FAIL] e.style['color'] = "oklch(from color(display-p3 0 0 0) l c h / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "oklch(from color(display-p3 0 0 0) l c h / alpha)" but got "oklch(0 0 0)"
[FAIL] e.style['color'] = "oklch(from oklab(0.7 45 30) l c h / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "oklch(from oklab(0.7 45 30) l c h / alpha)" but got "oklch(0.7 54.0833 33.6901)"
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30) 0 0 0)" should set the property value
  assert_equals: serialization should be canonical expected "oklch(from oklch(0.7 0.45 30) 0 0 0)" but got "oklch(0 0 0)"
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30) 0 0 0deg)" should set the property value
  assert_equals: serialization should be canonical expected "oklch(from oklch(0.7 0.45 30) 0 0 0deg)" but got "oklch(0 0 0)"
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30) 0 0 0 / 0)" should set the property value
  assert_equals: serialization should be canonical expected "oklch(from oklch(0.7 0.45 30) 0 0 0 / 0)" but got "oklch(0 0 0 / 0)"
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30) 0 0 0deg / 0)" should set the property value
  assert_equals: serialization should be canonical expected "oklch(from oklch(0.7 0.45 30) 0 0 0deg / 0)" but got "oklch(0 0 0 / 0)"
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30) 0 c h / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "oklch(from oklch(0.7 0.45 30) 0 c h / alpha)" but got "oklch(0 0.45 30)"
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30) l 0 h / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "oklch(from oklch(0.7 0.45 30) l 0 h / alpha)" but got "oklch(0.7 0 30)"
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30) l c 0 / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "oklch(from oklch(0.7 0.45 30) l c 0 / alpha)" but got "oklch(0.7 0.45 0)"
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30) l c 0deg / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "oklch(from oklch(0.7 0.45 30) l c 0deg / alpha)" but got "oklch(0.7 0.45 0)"
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30) l c h / 0)" should set the property value
  assert_equals: serialization should be canonical expected "oklch(from oklch(0.7 0.45 30) l c h / 0)" but got "oklch(0.7 0.45 30 / 0)"
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) 0 c h / alpha)" should set the property value
  Colors do not match.\nActual:   oklch(0 0.45 30 / 0.4)\nExpected: oklch(from oklch(0.7 0.45 30 / 0.4) 0 c h / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) l 0 h / alpha)" should set the property value
  Colors do not match.\nActual:   oklch(0.7 0 30 / 0.4)\nExpected: oklch(from oklch(0.7 0.45 30 / 0.4) l 0 h / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) l c 0 / alpha)" should set the property value
  Colors do not match.\nActual:   oklch(0.7 0.45 0 / 0.4)\nExpected: oklch(from oklch(0.7 0.45 30 / 0.4) l c 0 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) l c 0deg / alpha)" should set the property value
  Colors do not match.\nActual:   oklch(0.7 0.45 0 / 0.4)\nExpected: oklch(from oklch(0.7 0.45 30 / 0.4) l c 0deg / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) l c h / 0)" should set the property value
  Colors do not match.\nActual:   oklch(0.7 0.45 30 / 0)\nExpected: oklch(from oklch(0.7 0.45 30 / 0.4) l c h / 0).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30) 0.25 c h / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "oklch(from oklch(0.7 0.45 30) 0.25 c h / alpha)" but got "oklch(0.25 0.45 30)"
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30) l 0.25 h / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "oklch(from oklch(0.7 0.45 30) l 0.25 h / alpha)" but got "oklch(0.7 0.25 30)"
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30) l c 0.25 / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "oklch(from oklch(0.7 0.45 30) l c 0.25 / alpha)" but got "oklch(0.7 0.45 0.25)"
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30) l c 25deg / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "oklch(from oklch(0.7 0.45 30) l c 25deg / alpha)" but got "oklch(0.7 0.45 25)"
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30) l c h / 0.25)" should set the property value
  assert_equals: serialization should be canonical expected "oklch(from oklch(0.7 0.45 30) l c h / 0.25)" but got "oklch(0.7 0.45 30 / 0.25)"
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) 0.25 c h / alpha)" should set the property value
  Colors do not match.\nActual:   oklch(0.25 0.45 30 / 0.4)\nExpected: oklch(from oklch(0.7 0.45 30 / 0.4) 0.25 c h / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) l 0.25 h / alpha)" should set the property value
  Colors do not match.\nActual:   oklch(0.7 0.25 30 / 0.4)\nExpected: oklch(from oklch(0.7 0.45 30 / 0.4) l 0.25 h / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) l c 0.25 / alpha)" should set the property value
  Colors do not match.\nActual:   oklch(0.7 0.45 0.25 / 0.4)\nExpected: oklch(from oklch(0.7 0.45 30 / 0.4) l c 0.25 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) l c 25deg / alpha)" should set the property value
  Colors do not match.\nActual:   oklch(0.7 0.45 25 / 0.4)\nExpected: oklch(from oklch(0.7 0.45 30 / 0.4) l c 25deg / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) l c h / 0.25)" should set the property value
  Colors do not match.\nActual:   oklch(0.7 0.45 30 / 0.25)\nExpected: oklch(from oklch(0.7 0.45 30 / 0.4) l c h / 0.25).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) 2 3 400 / 500)" should set the property value
  Colors do not match.\nActual:   oklch(1 3 40)\nExpected: oklch(from oklch(0.7 0.45 30 / 0.4) 2 3 400 / 500).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 8 got 3
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) -2 -3 -400 / -500)" should set the property value
  Colors do not match.\nActual:   oklch(0 0 320 / 0)\nExpected: oklch(from oklch(0.7 0.45 30 / 0.4) -2 -3 -400 / -500).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 8 got 4
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) 0.5 1.2 400deg / 500)" should set the property value
  Colors do not match.\nActual:   oklch(0.5 1.2 40)\nExpected: oklch(from oklch(0.7 0.45 30 / 0.4) 0.5 1.2 400deg / 500).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 8 got 3
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) 0.5 1.2 -400deg / -500)" should set the property value
  Colors do not match.\nActual:   oklch(0.5 1.2 320 / 0)\nExpected: oklch(from oklch(0.7 0.45 30 / 0.4) 0.5 1.2 -400deg / -500).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 8 got 4
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30) l c c / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "oklch(from oklch(0.7 0.45 30) l c c / alpha)" but got "oklch(0.7 0.45 0.45)"
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) l c c / alpha)" should set the property value
  Colors do not match.\nActual:   oklch(0.7 0.45 0.45 / 0.4)\nExpected: oklch(from oklch(0.7 0.45 30 / 0.4) l c c / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 2, expected 30 +/- 0.01, expected 30 but got 0.45
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30) calc(l) calc(c) calc(h))" should set the property value
  assert_equals: serialization should be canonical expected "oklch(from oklch(0.7 0.45 30) calc(l) calc(c) calc(h))" but got "oklch(0.7 0.45 30)"
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) calc(l) calc(c) calc(h) / calc(alpha))" should set the property value
  Colors do not match.\nActual:   oklch(0.7 0.45 30 / 0.4)\nExpected: oklch(from oklch(0.7 0.45 30 / 0.4) calc(l) calc(c) calc(h) / calc(alpha)).\nError: assert_equals: Color format is correct. expected "oklch(from oklch(   / ) calc(l) calc(c) calc(h) / calc(alpha))" but got "oklch(   / )"
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.2 300) calc(l - 0.2) c h)" should set the property value
  Colors do not match.\nActual:   oklch(0.5 0.2 300)\nExpected: oklch(from oklch(0.7 0.2 300) calc(-0.2 + l) c h).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.2 300) l calc(c / 2) h)" should set the property value
  Colors do not match.\nActual:   oklch(0.7 0.1 300)\nExpected: oklch(from oklch(0.7 0.2 300) l calc(0.5 * c) h).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.2 300) l c calc(h * 2.5))" should set the property value
  Colors do not match.\nActual:   oklch(0.7 0.2 30)\nExpected: oklch(from oklch(0.7 0.2 300) l c calc(2.5 * h)).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30) none none none)" should set the property value
  assert_equals: serialization should be canonical expected "oklch(from oklch(0.7 0.45 30) none none none)" but got "oklch(none none none)"
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30) none none none / none)" should set the property value
  assert_equals: serialization should be canonical expected "oklch(from oklch(0.7 0.45 30) none none none / none)" but got "oklch(none none none / none)"
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30) l c none)" should set the property value
  assert_equals: serialization should be canonical expected "oklch(from oklch(0.7 0.45 30) l c none)" but got "oklch(0.7 0.45 none)"
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30) l c none / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "oklch(from oklch(0.7 0.45 30) l c none / alpha)" but got "oklch(0.7 0.45 none)"
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30) l c h / none)" should set the property value
  assert_equals: serialization should be canonical expected "oklch(from oklch(0.7 0.45 30) l c h / none)" but got "oklch(0.7 0.45 30 / none)"
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) l c none / alpha)" should set the property value
  Colors do not match.\nActual:   oklch(0.7 0.45 none / 0.4)\nExpected: oklch(from oklch(0.7 0.45 30 / 0.4) l c none / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) l c h / none)" should set the property value
  Colors do not match.\nActual:   oklch(0.7 0.45 30 / none)\nExpected: oklch(from oklch(0.7 0.45 30 / 0.4) l c h / none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "oklch(from oklch(none none none) l c h)" should set the property value
  assert_equals: serialization should be canonical expected "oklch(from oklch(none none none) l c h)" but got "oklch(0 0 0)"
[FAIL] e.style['color'] = "oklch(from oklch(none none none / none) l c h / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "oklch(from oklch(none none none / none) l c h / alpha)" but got "oklch(0 0 0 / 0)"
[FAIL] e.style['color'] = "oklch(from oklch(0.7 none 30) l c h)" should set the property value
  assert_equals: serialization should be canonical expected "oklch(from oklch(0.7 none 30) l c h)" but got "oklch(0.7 0 30)"
[FAIL] e.style['color'] = "oklch(from oklch(0.7 0.45 30 / none) l c h / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "oklch(from oklch(0.7 0.45 30 / none) l c h / alpha)" but got "oklch(0.7 0.45 30 / 0)"
[FAIL] e.style['color'] = "oklch(from color-mix(in oklch, oklch(0.7 0.45 30), oklch(0.7 0.45 30)) l c h / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "oklch(from color-mix(in oklch, oklch(0.7 0.45 30), oklch(0.7 0.45 30)) l c h / alpha)" but got "oklch(0.7 0.45 30)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb r g b)" but got "color(srgb 0.7 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb r g b / alpha)" but got "color(srgb 0.7 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb r g b)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.7 0.5 0.3 / 0.4)\nExpected: color(from color(srgb 0.7 0.5 0.3 / 0.4) srgb r g b).\nError: assert_equals: Color format is correct. expected "color(from color(srgb    / ) srgb r g b)" but got "color(srgb    / )"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb r g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.7 0.5 0.3 / 0.4)\nExpected: color(from color(srgb 0.7 0.5 0.3 / 0.4) srgb r g b / alpha).\nError: assert_equals: Color format is correct. expected "color(from color(srgb    / ) srgb r g b / alpha)" but got "color(srgb    / )"
[FAIL] e.style['color'] = "color(from color(from color(srgb 0.7 0.5 0.3) srgb r g b) srgb r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(from color(srgb 0.7 0.5 0.3) srgb r g b) srgb r g b)" but got "color(srgb 0.7 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb 0 0 0)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb 0 0 0)" but got "color(srgb 0 0 0)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb 0 0 0 / 0)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb 0 0 0 / 0)" but got "color(srgb 0 0 0 / 0)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb 0 g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb 0 g b / alpha)" but got "color(srgb 0 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb r 0 b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb r 0 b / alpha)" but got "color(srgb 0.7 0 0.3)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb r g 0 / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb r g 0 / alpha)" but got "color(srgb 0.7 0.5 0)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb r g b / 0)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb r g b / 0)" but got "color(srgb 0.7 0.5 0.3 / 0)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb 0 g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0.5 0.3 / 0.4)\nExpected: color(from color(srgb 0.7 0.5 0.3 / 0.4) srgb 0 g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb r 0 b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.7 0 0.3 / 0.4)\nExpected: color(from color(srgb 0.7 0.5 0.3 / 0.4) srgb r 0 b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb r g 0 / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.7 0.5 0 / 0.4)\nExpected: color(from color(srgb 0.7 0.5 0.3 / 0.4) srgb r g 0 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb r g b / 0)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.7 0.5 0.3 / 0)\nExpected: color(from color(srgb 0.7 0.5 0.3 / 0.4) srgb r g b / 0).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb 0.2 g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb 0.2 g b / alpha)" but got "color(srgb 0.2 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb 20% g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb 20% g b / alpha)" but got "color(srgb 0.2 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb r 0.2 b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb r 0.2 b / alpha)" but got "color(srgb 0.7 0.2 0.3)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb r 20% b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb r 20% b / alpha)" but got "color(srgb 0.7 0.2 0.3)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb r g 0.2 / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb r g 0.2 / alpha)" but got "color(srgb 0.7 0.5 0.2)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb r g 20% / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb r g 20% / alpha)" but got "color(srgb 0.7 0.5 0.2)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb r g b / 0.2)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb r g b / 0.2)" but got "color(srgb 0.7 0.5 0.3 / 0.2)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb r g b / 20%)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb r g b / 20%)" but got "color(srgb 0.7 0.5 0.3 / 0.2)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb 0.2 g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.5 0.3 / 0.4)\nExpected: color(from color(srgb 0.7 0.5 0.3 / 0.4) srgb 0.2 g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb 20% g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.5 0.3 / 0.4)\nExpected: color(from color(srgb 0.7 0.5 0.3 / 0.4) srgb 20% g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb r 0.2 b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.7 0.2 0.3 / 0.4)\nExpected: color(from color(srgb 0.7 0.5 0.3 / 0.4) srgb r 0.2 b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb r 20% b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.7 0.2 0.3 / 0.4)\nExpected: color(from color(srgb 0.7 0.5 0.3 / 0.4) srgb r 20% b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb r g 0.2 / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.7 0.5 0.2 / 0.4)\nExpected: color(from color(srgb 0.7 0.5 0.3 / 0.4) srgb r g 0.2 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb r g 20% / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.7 0.5 0.2 / 0.4)\nExpected: color(from color(srgb 0.7 0.5 0.3 / 0.4) srgb r g 20% / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb r g b / 0.2)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.7 0.5 0.3 / 0.2)\nExpected: color(from color(srgb 0.7 0.5 0.3 / 0.4) srgb r g b / 0.2).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb r g b / 20%)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.7 0.5 0.3 / 0.2)\nExpected: color(from color(srgb 0.7 0.5 0.3 / 0.4) srgb r g b / 20%).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb 2 3 4)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb 2 3 4)" but got "color(srgb 2 3 4)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb 2 3 4 / 5)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb 2 3 4 / 5)" but got "color(srgb 2 3 4)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb -2 -3 -4)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb -2 -3 -4)" but got "color(srgb -2 -3 -4)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb -2 -3 -4 / -5)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb -2 -3 -4 / -5)" but got "color(srgb -2 -3 -4 / 0)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb 200% 300% 400%)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb 200% 300% 400%)" but got "color(srgb 2 3 4)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb 200% 300% 400% / 500%)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb 200% 300% 400% / 500%)" but got "color(srgb 2 3 4)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb -200% -300% -400%)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb -200% -300% -400%)" but got "color(srgb -2 -3 -4)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb -200% -300% -400% / -500%)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb -200% -300% -400% / -500%)" but got "color(srgb -2 -3 -4 / 0)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb g b r)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb g b r)" but got "color(srgb 0.5 0.3 0.7)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb b alpha r / g)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb b alpha r / g)" but got "color(srgb 0.3 1 0.7 / 0.5)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb r r r / r)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb r r r / r)" but got "color(srgb 0.7 0.7 0.7 / 0.7)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb alpha alpha alpha / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb alpha alpha alpha / alpha)" but got "color(srgb 1 1 1)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb g b r)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.5 0.3 0.7 / 0.4)\nExpected: color(from color(srgb 0.7 0.5 0.3 / 0.4) srgb g b r).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.7 +/- 0.01, expected 0.7 but got 0.5
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb b alpha r / g)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.3 0.4 0.7 / 0.5)\nExpected: color(from color(srgb 0.7 0.5 0.3 / 0.4) srgb b alpha r / g).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.7 +/- 0.01, expected 0.7 but got 0.3
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb r r r / r)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.7 0.7 0.7 / 0.7)\nExpected: color(from color(srgb 0.7 0.5 0.3 / 0.4) srgb r r r / r).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 1, expected 0.5 +/- 0.01, expected 0.5 but got 0.7
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb alpha alpha alpha / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.4 0.4 / 0.4)\nExpected: color(from color(srgb 0.7 0.5 0.3 / 0.4) srgb alpha alpha alpha / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.7 +/- 0.01, expected 0.7 but got 0.4
[FAIL] e.style['color'] = "color(from color(srgb 1.7 1.5 1.3) srgb r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 1.7 1.5 1.3) srgb r g b)" but got "color(srgb 1.7 1.5 1.3)"
[FAIL] e.style['color'] = "color(from color(srgb 1.7 1.5 1.3) srgb r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 1.7 1.5 1.3) srgb r g b / alpha)" but got "color(srgb 1.7 1.5 1.3)"
[FAIL] e.style['color'] = "color(from color(srgb 1.7 1.5 1.3 / 140%) srgb r g b)" should set the property value
  Colors do not match.\nActual:   color(srgb 1.7 1.5 1.3)\nExpected: color(from color(srgb 1.7 1.5 1.3) srgb r g b).\nError: assert_equals: Color format is correct. expected "color(from color(srgb   ) srgb r g b)" but got "color(srgb   )"
[FAIL] e.style['color'] = "color(from color(srgb 1.7 1.5 1.3 / 140%) srgb r g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 1.7 1.5 1.3)\nExpected: color(from color(srgb 1.7 1.5 1.3) srgb r g b / alpha).\nError: assert_equals: Color format is correct. expected "color(from color(srgb   ) srgb r g b / alpha)" but got "color(srgb   )"
[FAIL] e.style['color'] = "color(from color(srgb -0.7 -0.5 -0.3) srgb r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb -0.7 -0.5 -0.3) srgb r g b)" but got "color(srgb -0.7 -0.5 -0.3)"
[FAIL] e.style['color'] = "color(from color(srgb -0.7 -0.5 -0.3) srgb r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb -0.7 -0.5 -0.3) srgb r g b / alpha)" but got "color(srgb -0.7 -0.5 -0.3)"
[FAIL] e.style['color'] = "color(from color(srgb -0.7 -0.5 -0.3 / -40%) srgb r g b)" should set the property value
  Colors do not match.\nActual:   color(srgb -0.7 -0.5 -0.3 / 0)\nExpected: color(from color(srgb -0.7 -0.5 -0.3 / 0) srgb r g b).\nError: assert_equals: Color format is correct. expected "color(from color(srgb - - - / ) srgb r g b)" but got "color(srgb - - - / )"
[FAIL] e.style['color'] = "color(from color(srgb -0.7 -0.5 -0.3 / -40%) srgb r g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb -0.7 -0.5 -0.3 / 0)\nExpected: color(from color(srgb -0.7 -0.5 -0.3 / 0) srgb r g b / alpha).\nError: assert_equals: Color format is correct. expected "color(from color(srgb - - - / ) srgb r g b / alpha)" but got "color(srgb - - - / )"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb calc(r) calc(g) calc(b))" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb calc(r) calc(g) calc(b))" but got "color(srgb 0.7 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb calc(r) calc(g) calc(b) / calc(alpha))" should set the property value
  Colors do not match.\nActual:   color(srgb 0.7 0.5 0.3 / 0.4)\nExpected: color(from color(srgb 0.7 0.5 0.3 / 0.4) srgb calc(r) calc(g) calc(b) / calc(alpha)).\nError: assert_equals: Color format is correct. expected "color(from color(srgb    / ) srgb calc(r) calc(g) calc(b) / calc(alpha))" but got "color(srgb    / )"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb none none none)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb none none none)" but got "color(srgb none none none)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb none none none / none)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb none none none / none)" but got "color(srgb none none none / none)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb r g none)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb r g none)" but got "color(srgb 0.7 0.5 none)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb r g none / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb r g none / alpha)" but got "color(srgb 0.7 0.5 none)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb r g b / none)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3) srgb r g b / none)" but got "color(srgb 0.7 0.5 0.3 / none)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb r g none / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.7 0.5 none / 0.4)\nExpected: color(from color(srgb 0.7 0.5 0.3 / 0.4) srgb r g none / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb r g b / none)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.7 0.5 0.3 / none)\nExpected: color(from color(srgb 0.7 0.5 0.3 / 0.4) srgb r g b / none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(srgb none none none) srgb r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb none none none) srgb r g b)" but got "color(srgb 0 0 0)"
[FAIL] e.style['color'] = "color(from color(srgb none none none / none) srgb r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb none none none / none) srgb r g b / alpha)" but got "color(srgb 0 0 0 / 0)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 none 0.3) srgb r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 none 0.3) srgb r g b)" but got "color(srgb 0.7 0 0.3)"
[FAIL] e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / none) srgb r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb 0.7 0.5 0.3 / none) srgb r g b / alpha)" but got "color(srgb 0.7 0.5 0.3 / 0)"
[FAIL] e.style['color'] = "color(from color-mix(in srgb, color(srgb 0.7 0.5 0.3), color(srgb 0.7 0.5 0.3)) srgb r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color-mix(in srgb, color(srgb 0.7 0.5 0.3), color(srgb 0.7 0.5 0.3)) srgb r g b / alpha)" but got "color(srgb 0.7 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g b)" but got "color(srgb-linear 0.7 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g b / alpha)" but got "color(srgb-linear 0.7 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear r g b)" should set the property value
  Colors do not match.\nActual:   color(srgb-linear 0.7 0.5 0.3 / 0.4)\nExpected: color(from color(srgb-linear 0.7 0.5 0.3 / 0.4) srgb-linear r g b).\nError: assert_equals: Color format is correct. expected "color(from color(srgb-linear    / ) srgb-linear r g b)" but got "color(srgb-linear    / )"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear r g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb-linear 0.7 0.5 0.3 / 0.4)\nExpected: color(from color(srgb-linear 0.7 0.5 0.3 / 0.4) srgb-linear r g b / alpha).\nError: assert_equals: Color format is correct. expected "color(from color(srgb-linear    / ) srgb-linear r g b / alpha)" but got "color(srgb-linear    / )"
[FAIL] e.style['color'] = "color(from color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g b) srgb-linear r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g b) srgb-linear r g b)" but got "color(srgb-linear 0.7 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear 0 0 0)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear 0 0 0)" but got "color(srgb-linear 0 0 0)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear 0 0 0 / 0)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear 0 0 0 / 0)" but got "color(srgb-linear 0 0 0 / 0)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear 0 g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear 0 g b / alpha)" but got "color(srgb-linear 0 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r 0 b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r 0 b / alpha)" but got "color(srgb-linear 0.7 0 0.3)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g 0 / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g 0 / alpha)" but got "color(srgb-linear 0.7 0.5 0)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g b / 0)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g b / 0)" but got "color(srgb-linear 0.7 0.5 0.3 / 0)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear 0 g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb-linear 0 0.5 0.3 / 0.4)\nExpected: color(from color(srgb-linear 0.7 0.5 0.3 / 0.4) srgb-linear 0 g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear r 0 b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb-linear 0.7 0 0.3 / 0.4)\nExpected: color(from color(srgb-linear 0.7 0.5 0.3 / 0.4) srgb-linear r 0 b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear r g 0 / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb-linear 0.7 0.5 0 / 0.4)\nExpected: color(from color(srgb-linear 0.7 0.5 0.3 / 0.4) srgb-linear r g 0 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear r g b / 0)" should set the property value
  Colors do not match.\nActual:   color(srgb-linear 0.7 0.5 0.3 / 0)\nExpected: color(from color(srgb-linear 0.7 0.5 0.3 / 0.4) srgb-linear r g b / 0).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear 0.2 g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear 0.2 g b / alpha)" but got "color(srgb-linear 0.2 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear 20% g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear 20% g b / alpha)" but got "color(srgb-linear 0.2 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r 0.2 b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r 0.2 b / alpha)" but got "color(srgb-linear 0.7 0.2 0.3)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r 20% b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r 20% b / alpha)" but got "color(srgb-linear 0.7 0.2 0.3)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g 0.2 / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g 0.2 / alpha)" but got "color(srgb-linear 0.7 0.5 0.2)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g 20% / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g 20% / alpha)" but got "color(srgb-linear 0.7 0.5 0.2)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g b / 0.2)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g b / 0.2)" but got "color(srgb-linear 0.7 0.5 0.3 / 0.2)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g b / 20%)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g b / 20%)" but got "color(srgb-linear 0.7 0.5 0.3 / 0.2)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear 0.2 g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb-linear 0.2 0.5 0.3 / 0.4)\nExpected: color(from color(srgb-linear 0.7 0.5 0.3 / 0.4) srgb-linear 0.2 g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear 20% g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb-linear 0.2 0.5 0.3 / 0.4)\nExpected: color(from color(srgb-linear 0.7 0.5 0.3 / 0.4) srgb-linear 20% g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear r 0.2 b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb-linear 0.7 0.2 0.3 / 0.4)\nExpected: color(from color(srgb-linear 0.7 0.5 0.3 / 0.4) srgb-linear r 0.2 b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear r 20% b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb-linear 0.7 0.2 0.3 / 0.4)\nExpected: color(from color(srgb-linear 0.7 0.5 0.3 / 0.4) srgb-linear r 20% b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear r g 0.2 / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb-linear 0.7 0.5 0.2 / 0.4)\nExpected: color(from color(srgb-linear 0.7 0.5 0.3 / 0.4) srgb-linear r g 0.2 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear r g 20% / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb-linear 0.7 0.5 0.2 / 0.4)\nExpected: color(from color(srgb-linear 0.7 0.5 0.3 / 0.4) srgb-linear r g 20% / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear r g b / 0.2)" should set the property value
  Colors do not match.\nActual:   color(srgb-linear 0.7 0.5 0.3 / 0.2)\nExpected: color(from color(srgb-linear 0.7 0.5 0.3 / 0.4) srgb-linear r g b / 0.2).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear r g b / 20%)" should set the property value
  Colors do not match.\nActual:   color(srgb-linear 0.7 0.5 0.3 / 0.2)\nExpected: color(from color(srgb-linear 0.7 0.5 0.3 / 0.4) srgb-linear r g b / 20%).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear 2 3 4)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear 2 3 4)" but got "color(srgb-linear 2 3 4)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear 2 3 4 / 5)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear 2 3 4 / 5)" but got "color(srgb-linear 2 3 4)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear -2 -3 -4)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear -2 -3 -4)" but got "color(srgb-linear -2 -3 -4)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear -2 -3 -4 / -5)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear -2 -3 -4 / -5)" but got "color(srgb-linear -2 -3 -4 / 0)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear 200% 300% 400%)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear 200% 300% 400%)" but got "color(srgb-linear 2 3 4)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear 200% 300% 400% / 500%)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear 200% 300% 400% / 500%)" but got "color(srgb-linear 2 3 4)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear -200% -300% -400%)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear -200% -300% -400%)" but got "color(srgb-linear -2 -3 -4)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear -200% -300% -400% / -500%)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear -200% -300% -400% / -500%)" but got "color(srgb-linear -2 -3 -4 / 0)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear g b r)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear g b r)" but got "color(srgb-linear 0.5 0.3 0.7)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear b alpha r / g)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear b alpha r / g)" but got "color(srgb-linear 0.3 1 0.7 / 0.5)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r r r / r)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r r r / r)" but got "color(srgb-linear 0.7 0.7 0.7 / 0.7)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear alpha alpha alpha / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear alpha alpha alpha / alpha)" but got "color(srgb-linear 1 1 1)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear g b r)" should set the property value
  Colors do not match.\nActual:   color(srgb-linear 0.5 0.3 0.7 / 0.4)\nExpected: color(from color(srgb-linear 0.7 0.5 0.3 / 0.4) srgb-linear g b r).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.7 +/- 0.01, expected 0.7 but got 0.5
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear b alpha r / g)" should set the property value
  Colors do not match.\nActual:   color(srgb-linear 0.3 0.4 0.7 / 0.5)\nExpected: color(from color(srgb-linear 0.7 0.5 0.3 / 0.4) srgb-linear b alpha r / g).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.7 +/- 0.01, expected 0.7 but got 0.3
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear r r r / r)" should set the property value
  Colors do not match.\nActual:   color(srgb-linear 0.7 0.7 0.7 / 0.7)\nExpected: color(from color(srgb-linear 0.7 0.5 0.3 / 0.4) srgb-linear r r r / r).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 1, expected 0.5 +/- 0.01, expected 0.5 but got 0.7
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear alpha alpha alpha / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb-linear 0.4 0.4 0.4 / 0.4)\nExpected: color(from color(srgb-linear 0.7 0.5 0.3 / 0.4) srgb-linear alpha alpha alpha / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.7 +/- 0.01, expected 0.7 but got 0.4
[FAIL] e.style['color'] = "color(from color(srgb-linear 1.7 1.5 1.3) srgb-linear r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 1.7 1.5 1.3) srgb-linear r g b)" but got "color(srgb-linear 1.7 1.5 1.3)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 1.7 1.5 1.3) srgb-linear r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 1.7 1.5 1.3) srgb-linear r g b / alpha)" but got "color(srgb-linear 1.7 1.5 1.3)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 1.7 1.5 1.3 / 140%) srgb-linear r g b)" should set the property value
  Colors do not match.\nActual:   color(srgb-linear 1.7 1.5 1.3)\nExpected: color(from color(srgb-linear 1.7 1.5 1.3) srgb-linear r g b).\nError: assert_equals: Color format is correct. expected "color(from color(srgb-linear   ) srgb-linear r g b)" but got "color(srgb-linear   )"
[FAIL] e.style['color'] = "color(from color(srgb-linear 1.7 1.5 1.3 / 140%) srgb-linear r g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb-linear 1.7 1.5 1.3)\nExpected: color(from color(srgb-linear 1.7 1.5 1.3) srgb-linear r g b / alpha).\nError: assert_equals: Color format is correct. expected "color(from color(srgb-linear   ) srgb-linear r g b / alpha)" but got "color(srgb-linear   )"
[FAIL] e.style['color'] = "color(from color(srgb-linear -0.7 -0.5 -0.3) srgb-linear r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear -0.7 -0.5 -0.3) srgb-linear r g b)" but got "color(srgb-linear -0.7 -0.5 -0.3)"
[FAIL] e.style['color'] = "color(from color(srgb-linear -0.7 -0.5 -0.3) srgb-linear r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear -0.7 -0.5 -0.3) srgb-linear r g b / alpha)" but got "color(srgb-linear -0.7 -0.5 -0.3)"
[FAIL] e.style['color'] = "color(from color(srgb-linear -0.7 -0.5 -0.3 / -40%) srgb-linear r g b)" should set the property value
  Colors do not match.\nActual:   color(srgb-linear -0.7 -0.5 -0.3 / 0)\nExpected: color(from color(srgb-linear -0.7 -0.5 -0.3 / 0) srgb-linear r g b).\nError: assert_equals: Color format is correct. expected "color(from color(srgb-linear - - - / ) srgb-linear r g b)" but got "color(srgb-linear - - - / )"
[FAIL] e.style['color'] = "color(from color(srgb-linear -0.7 -0.5 -0.3 / -40%) srgb-linear r g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb-linear -0.7 -0.5 -0.3 / 0)\nExpected: color(from color(srgb-linear -0.7 -0.5 -0.3 / 0) srgb-linear r g b / alpha).\nError: assert_equals: Color format is correct. expected "color(from color(srgb-linear - - - / ) srgb-linear r g b / alpha)" but got "color(srgb-linear - - - / )"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear calc(r) calc(g) calc(b))" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear calc(r) calc(g) calc(b))" but got "color(srgb-linear 0.7 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear calc(r) calc(g) calc(b) / calc(alpha))" should set the property value
  Colors do not match.\nActual:   color(srgb-linear 0.7 0.5 0.3 / 0.4)\nExpected: color(from color(srgb-linear 0.7 0.5 0.3 / 0.4) srgb-linear calc(r) calc(g) calc(b) / calc(alpha)).\nError: assert_equals: Color format is correct. expected "color(from color(srgb-linear    / ) srgb-linear calc(r) calc(g) calc(b) / calc(alpha))" but got "color(srgb-linear    / )"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear none none none)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear none none none)" but got "color(srgb-linear none none none)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear none none none / none)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear none none none / none)" but got "color(srgb-linear none none none / none)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g none)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g none)" but got "color(srgb-linear 0.7 0.5 none)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g none / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g none / alpha)" but got "color(srgb-linear 0.7 0.5 none)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g b / none)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g b / none)" but got "color(srgb-linear 0.7 0.5 0.3 / none)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear r g none / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb-linear 0.7 0.5 none / 0.4)\nExpected: color(from color(srgb-linear 0.7 0.5 0.3 / 0.4) srgb-linear r g none / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear r g b / none)" should set the property value
  Colors do not match.\nActual:   color(srgb-linear 0.7 0.5 0.3 / none)\nExpected: color(from color(srgb-linear 0.7 0.5 0.3 / 0.4) srgb-linear r g b / none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(srgb-linear none none none) srgb-linear r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear none none none) srgb-linear r g b)" but got "color(srgb-linear 0 0 0)"
[FAIL] e.style['color'] = "color(from color(srgb-linear none none none / none) srgb-linear r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear none none none / none) srgb-linear r g b / alpha)" but got "color(srgb-linear 0 0 0 / 0)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 none 0.3) srgb-linear r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 none 0.3) srgb-linear r g b)" but got "color(srgb-linear 0.7 0 0.3)"
[FAIL] e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / none) srgb-linear r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(srgb-linear 0.7 0.5 0.3 / none) srgb-linear r g b / alpha)" but got "color(srgb-linear 0.7 0.5 0.3 / 0)"
[FAIL] e.style['color'] = "color(from color-mix(in srgb-linear, color(srgb-linear 0.7 0.5 0.3), color(srgb-linear 0.7 0.5 0.3)) srgb-linear r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color-mix(in srgb-linear, color(srgb-linear 0.7 0.5 0.3), color(srgb-linear 0.7 0.5 0.3)) srgb-linear r g b / alpha)" but got "color(srgb-linear 0.7 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g b)" but got "color(a98-rgb 0.7 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g b / alpha)" but got "color(a98-rgb 0.7 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb r g b)" should set the property value
  Colors do not match.\nActual:   color(a98-rgb 0.7 0.5 0.3 / 0.4)\nExpected: color(from color(a98-rgb 0.7 0.5 0.3 / 0.4) a98-rgb r g b).\nError: assert_equals: Color format is correct. expected "color(from color(a-rgb    / ) a-rgb r g b)" but got "color(a-rgb    / )"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb r g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(a98-rgb 0.7 0.5 0.3 / 0.4)\nExpected: color(from color(a98-rgb 0.7 0.5 0.3 / 0.4) a98-rgb r g b / alpha).\nError: assert_equals: Color format is correct. expected "color(from color(a-rgb    / ) a-rgb r g b / alpha)" but got "color(a-rgb    / )"
[FAIL] e.style['color'] = "color(from color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g b) a98-rgb r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g b) a98-rgb r g b)" but got "color(a98-rgb 0.7 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb 0 0 0)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb 0 0 0)" but got "color(a98-rgb 0 0 0)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb 0 0 0 / 0)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb 0 0 0 / 0)" but got "color(a98-rgb 0 0 0 / 0)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb 0 g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb 0 g b / alpha)" but got "color(a98-rgb 0 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r 0 b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r 0 b / alpha)" but got "color(a98-rgb 0.7 0 0.3)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g 0 / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g 0 / alpha)" but got "color(a98-rgb 0.7 0.5 0)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g b / 0)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g b / 0)" but got "color(a98-rgb 0.7 0.5 0.3 / 0)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb 0 g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(a98-rgb 0 0.5 0.3 / 0.4)\nExpected: color(from color(a98-rgb 0.7 0.5 0.3 / 0.4) a98-rgb 0 g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb r 0 b / alpha)" should set the property value
  Colors do not match.\nActual:   color(a98-rgb 0.7 0 0.3 / 0.4)\nExpected: color(from color(a98-rgb 0.7 0.5 0.3 / 0.4) a98-rgb r 0 b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb r g 0 / alpha)" should set the property value
  Colors do not match.\nActual:   color(a98-rgb 0.7 0.5 0 / 0.4)\nExpected: color(from color(a98-rgb 0.7 0.5 0.3 / 0.4) a98-rgb r g 0 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb r g b / 0)" should set the property value
  Colors do not match.\nActual:   color(a98-rgb 0.7 0.5 0.3 / 0)\nExpected: color(from color(a98-rgb 0.7 0.5 0.3 / 0.4) a98-rgb r g b / 0).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb 0.2 g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb 0.2 g b / alpha)" but got "color(a98-rgb 0.2 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb 20% g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb 20% g b / alpha)" but got "color(a98-rgb 0.2 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r 0.2 b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r 0.2 b / alpha)" but got "color(a98-rgb 0.7 0.2 0.3)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r 20% b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r 20% b / alpha)" but got "color(a98-rgb 0.7 0.2 0.3)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g 0.2 / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g 0.2 / alpha)" but got "color(a98-rgb 0.7 0.5 0.2)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g 20% / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g 20% / alpha)" but got "color(a98-rgb 0.7 0.5 0.2)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g b / 0.2)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g b / 0.2)" but got "color(a98-rgb 0.7 0.5 0.3 / 0.2)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g b / 20%)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g b / 20%)" but got "color(a98-rgb 0.7 0.5 0.3 / 0.2)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb 0.2 g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(a98-rgb 0.2 0.5 0.3 / 0.4)\nExpected: color(from color(a98-rgb 0.7 0.5 0.3 / 0.4) a98-rgb 0.2 g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb 20% g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(a98-rgb 0.2 0.5 0.3 / 0.4)\nExpected: color(from color(a98-rgb 0.7 0.5 0.3 / 0.4) a98-rgb 20% g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb r 0.2 b / alpha)" should set the property value
  Colors do not match.\nActual:   color(a98-rgb 0.7 0.2 0.3 / 0.4)\nExpected: color(from color(a98-rgb 0.7 0.5 0.3 / 0.4) a98-rgb r 0.2 b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb r 20% b / alpha)" should set the property value
  Colors do not match.\nActual:   color(a98-rgb 0.7 0.2 0.3 / 0.4)\nExpected: color(from color(a98-rgb 0.7 0.5 0.3 / 0.4) a98-rgb r 20% b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb r g 0.2 / alpha)" should set the property value
  Colors do not match.\nActual:   color(a98-rgb 0.7 0.5 0.2 / 0.4)\nExpected: color(from color(a98-rgb 0.7 0.5 0.3 / 0.4) a98-rgb r g 0.2 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb r g 20% / alpha)" should set the property value
  Colors do not match.\nActual:   color(a98-rgb 0.7 0.5 0.2 / 0.4)\nExpected: color(from color(a98-rgb 0.7 0.5 0.3 / 0.4) a98-rgb r g 20% / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb r g b / 0.2)" should set the property value
  Colors do not match.\nActual:   color(a98-rgb 0.7 0.5 0.3 / 0.2)\nExpected: color(from color(a98-rgb 0.7 0.5 0.3 / 0.4) a98-rgb r g b / 0.2).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb r g b / 20%)" should set the property value
  Colors do not match.\nActual:   color(a98-rgb 0.7 0.5 0.3 / 0.2)\nExpected: color(from color(a98-rgb 0.7 0.5 0.3 / 0.4) a98-rgb r g b / 20%).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb 2 3 4)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb 2 3 4)" but got "color(a98-rgb 2 3 4)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb 2 3 4 / 5)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb 2 3 4 / 5)" but got "color(a98-rgb 2 3 4)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb -2 -3 -4)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb -2 -3 -4)" but got "color(a98-rgb -2 -3 -4)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb -2 -3 -4 / -5)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb -2 -3 -4 / -5)" but got "color(a98-rgb -2 -3 -4 / 0)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb 200% 300% 400%)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb 200% 300% 400%)" but got "color(a98-rgb 2 3 4)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb 200% 300% 400% / 500%)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb 200% 300% 400% / 500%)" but got "color(a98-rgb 2 3 4)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb -200% -300% -400%)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb -200% -300% -400%)" but got "color(a98-rgb -2 -3 -4)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb -200% -300% -400% / -500%)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb -200% -300% -400% / -500%)" but got "color(a98-rgb -2 -3 -4 / 0)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb g b r)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb g b r)" but got "color(a98-rgb 0.5 0.3 0.7)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb b alpha r / g)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb b alpha r / g)" but got "color(a98-rgb 0.3 1 0.7 / 0.5)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r r r / r)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r r r / r)" but got "color(a98-rgb 0.7 0.7 0.7 / 0.7)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb alpha alpha alpha / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb alpha alpha alpha / alpha)" but got "color(a98-rgb 1 1 1)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb g b r)" should set the property value
  Colors do not match.\nActual:   color(a98-rgb 0.5 0.3 0.7 / 0.4)\nExpected: color(from color(a98-rgb 0.7 0.5 0.3 / 0.4) a98-rgb g b r).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.7 +/- 0.01, expected 0.7 but got 0.5
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb b alpha r / g)" should set the property value
  Colors do not match.\nActual:   color(a98-rgb 0.3 0.4 0.7 / 0.5)\nExpected: color(from color(a98-rgb 0.7 0.5 0.3 / 0.4) a98-rgb b alpha r / g).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.7 +/- 0.01, expected 0.7 but got 0.3
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb r r r / r)" should set the property value
  Colors do not match.\nActual:   color(a98-rgb 0.7 0.7 0.7 / 0.7)\nExpected: color(from color(a98-rgb 0.7 0.5 0.3 / 0.4) a98-rgb r r r / r).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 1, expected 0.5 +/- 0.01, expected 0.5 but got 0.7
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb alpha alpha alpha / alpha)" should set the property value
  Colors do not match.\nActual:   color(a98-rgb 0.4 0.4 0.4 / 0.4)\nExpected: color(from color(a98-rgb 0.7 0.5 0.3 / 0.4) a98-rgb alpha alpha alpha / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.7 +/- 0.01, expected 0.7 but got 0.4
[FAIL] e.style['color'] = "color(from color(a98-rgb 1.7 1.5 1.3) a98-rgb r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 1.7 1.5 1.3) a98-rgb r g b)" but got "color(a98-rgb 1.7 1.5 1.3)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 1.7 1.5 1.3) a98-rgb r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 1.7 1.5 1.3) a98-rgb r g b / alpha)" but got "color(a98-rgb 1.7 1.5 1.3)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 1.7 1.5 1.3 / 140%) a98-rgb r g b)" should set the property value
  Colors do not match.\nActual:   color(a98-rgb 1.7 1.5 1.3)\nExpected: color(from color(a98-rgb 1.7 1.5 1.3) a98-rgb r g b).\nError: assert_equals: Color format is correct. expected "color(from color(a-rgb   ) a-rgb r g b)" but got "color(a-rgb   )"
[FAIL] e.style['color'] = "color(from color(a98-rgb 1.7 1.5 1.3 / 140%) a98-rgb r g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(a98-rgb 1.7 1.5 1.3)\nExpected: color(from color(a98-rgb 1.7 1.5 1.3) a98-rgb r g b / alpha).\nError: assert_equals: Color format is correct. expected "color(from color(a-rgb   ) a-rgb r g b / alpha)" but got "color(a-rgb   )"
[FAIL] e.style['color'] = "color(from color(a98-rgb -0.7 -0.5 -0.3) a98-rgb r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb -0.7 -0.5 -0.3) a98-rgb r g b)" but got "color(a98-rgb -0.7 -0.5 -0.3)"
[FAIL] e.style['color'] = "color(from color(a98-rgb -0.7 -0.5 -0.3) a98-rgb r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb -0.7 -0.5 -0.3) a98-rgb r g b / alpha)" but got "color(a98-rgb -0.7 -0.5 -0.3)"
[FAIL] e.style['color'] = "color(from color(a98-rgb -0.7 -0.5 -0.3 / -40%) a98-rgb r g b)" should set the property value
  Colors do not match.\nActual:   color(a98-rgb -0.7 -0.5 -0.3 / 0)\nExpected: color(from color(a98-rgb -0.7 -0.5 -0.3 / 0) a98-rgb r g b).\nError: assert_equals: Color format is correct. expected "color(from color(a-rgb - - - / ) a-rgb r g b)" but got "color(a-rgb - - - / )"
[FAIL] e.style['color'] = "color(from color(a98-rgb -0.7 -0.5 -0.3 / -40%) a98-rgb r g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(a98-rgb -0.7 -0.5 -0.3 / 0)\nExpected: color(from color(a98-rgb -0.7 -0.5 -0.3 / 0) a98-rgb r g b / alpha).\nError: assert_equals: Color format is correct. expected "color(from color(a-rgb - - - / ) a-rgb r g b / alpha)" but got "color(a-rgb - - - / )"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb calc(r) calc(g) calc(b))" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb calc(r) calc(g) calc(b))" but got "color(a98-rgb 0.7 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb calc(r) calc(g) calc(b) / calc(alpha))" should set the property value
  Colors do not match.\nActual:   color(a98-rgb 0.7 0.5 0.3 / 0.4)\nExpected: color(from color(a98-rgb 0.7 0.5 0.3 / 0.4) a98-rgb calc(r) calc(g) calc(b) / calc(alpha)).\nError: assert_equals: Color format is correct. expected "color(from color(a-rgb    / ) a-rgb calc(r) calc(g) calc(b) / calc(alpha))" but got "color(a-rgb    / )"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb none none none)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb none none none)" but got "color(a98-rgb none none none)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb none none none / none)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb none none none / none)" but got "color(a98-rgb none none none / none)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g none)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g none)" but got "color(a98-rgb 0.7 0.5 none)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g none / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g none / alpha)" but got "color(a98-rgb 0.7 0.5 none)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g b / none)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g b / none)" but got "color(a98-rgb 0.7 0.5 0.3 / none)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb r g none / alpha)" should set the property value
  Colors do not match.\nActual:   color(a98-rgb 0.7 0.5 none / 0.4)\nExpected: color(from color(a98-rgb 0.7 0.5 0.3 / 0.4) a98-rgb r g none / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb r g b / none)" should set the property value
  Colors do not match.\nActual:   color(a98-rgb 0.7 0.5 0.3 / none)\nExpected: color(from color(a98-rgb 0.7 0.5 0.3 / 0.4) a98-rgb r g b / none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(a98-rgb none none none) a98-rgb r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb none none none) a98-rgb r g b)" but got "color(a98-rgb 0 0 0)"
[FAIL] e.style['color'] = "color(from color(a98-rgb none none none / none) a98-rgb r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb none none none / none) a98-rgb r g b / alpha)" but got "color(a98-rgb 0 0 0 / 0)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 none 0.3) a98-rgb r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 none 0.3) a98-rgb r g b)" but got "color(a98-rgb 0.7 0 0.3)"
[FAIL] e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / none) a98-rgb r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(a98-rgb 0.7 0.5 0.3 / none) a98-rgb r g b / alpha)" but got "color(a98-rgb 0.7 0.5 0.3 / 0)"
[FAIL] e.style['color'] = "color(from color-mix(in a98-rgb, color(a98-rgb 0.7 0.5 0.3), color(a98-rgb 0.7 0.5 0.3)) a98-rgb r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color-mix(in a98-rgb, color(a98-rgb 0.7 0.5 0.3), color(a98-rgb 0.7 0.5 0.3)) a98-rgb r g b / alpha)" but got "color(a98-rgb 0.7 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 r g b)" but got "color(rec2020 0.7 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 r g b / alpha)" but got "color(rec2020 0.7 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 r g b)" should set the property value
  Colors do not match.\nActual:   color(rec2020 0.7 0.5 0.3 / 0.4)\nExpected: color(from color(rec2020 0.7 0.5 0.3 / 0.4) rec2020 r g b).\nError: assert_equals: Color format is correct. expected "color(from color(rec    / ) rec r g b)" but got "color(rec    / )"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 r g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(rec2020 0.7 0.5 0.3 / 0.4)\nExpected: color(from color(rec2020 0.7 0.5 0.3 / 0.4) rec2020 r g b / alpha).\nError: assert_equals: Color format is correct. expected "color(from color(rec    / ) rec r g b / alpha)" but got "color(rec    / )"
[FAIL] e.style['color'] = "color(from color(from color(rec2020 0.7 0.5 0.3) rec2020 r g b) rec2020 r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(from color(rec2020 0.7 0.5 0.3) rec2020 r g b) rec2020 r g b)" but got "color(rec2020 0.7 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 0 0 0)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 0 0 0)" but got "color(rec2020 0 0 0)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 0 0 0 / 0)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 0 0 0 / 0)" but got "color(rec2020 0 0 0 / 0)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 0 g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 0 g b / alpha)" but got "color(rec2020 0 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 r 0 b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 r 0 b / alpha)" but got "color(rec2020 0.7 0 0.3)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 r g 0 / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 r g 0 / alpha)" but got "color(rec2020 0.7 0.5 0)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 r g b / 0)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 r g b / 0)" but got "color(rec2020 0.7 0.5 0.3 / 0)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 0 g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(rec2020 0 0.5 0.3 / 0.4)\nExpected: color(from color(rec2020 0.7 0.5 0.3 / 0.4) rec2020 0 g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 r 0 b / alpha)" should set the property value
  Colors do not match.\nActual:   color(rec2020 0.7 0 0.3 / 0.4)\nExpected: color(from color(rec2020 0.7 0.5 0.3 / 0.4) rec2020 r 0 b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 r g 0 / alpha)" should set the property value
  Colors do not match.\nActual:   color(rec2020 0.7 0.5 0 / 0.4)\nExpected: color(from color(rec2020 0.7 0.5 0.3 / 0.4) rec2020 r g 0 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 r g b / 0)" should set the property value
  Colors do not match.\nActual:   color(rec2020 0.7 0.5 0.3 / 0)\nExpected: color(from color(rec2020 0.7 0.5 0.3 / 0.4) rec2020 r g b / 0).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 0.2 g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 0.2 g b / alpha)" but got "color(rec2020 0.2 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 20% g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 20% g b / alpha)" but got "color(rec2020 0.2 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 r 0.2 b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 r 0.2 b / alpha)" but got "color(rec2020 0.7 0.2 0.3)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 r 20% b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 r 20% b / alpha)" but got "color(rec2020 0.7 0.2 0.3)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 r g 0.2 / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 r g 0.2 / alpha)" but got "color(rec2020 0.7 0.5 0.2)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 r g 20% / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 r g 20% / alpha)" but got "color(rec2020 0.7 0.5 0.2)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 r g b / 0.2)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 r g b / 0.2)" but got "color(rec2020 0.7 0.5 0.3 / 0.2)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 r g b / 20%)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 r g b / 20%)" but got "color(rec2020 0.7 0.5 0.3 / 0.2)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 0.2 g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(rec2020 0.2 0.5 0.3 / 0.4)\nExpected: color(from color(rec2020 0.7 0.5 0.3 / 0.4) rec2020 0.2 g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 20% g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(rec2020 0.2 0.5 0.3 / 0.4)\nExpected: color(from color(rec2020 0.7 0.5 0.3 / 0.4) rec2020 20% g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 r 0.2 b / alpha)" should set the property value
  Colors do not match.\nActual:   color(rec2020 0.7 0.2 0.3 / 0.4)\nExpected: color(from color(rec2020 0.7 0.5 0.3 / 0.4) rec2020 r 0.2 b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 r 20% b / alpha)" should set the property value
  Colors do not match.\nActual:   color(rec2020 0.7 0.2 0.3 / 0.4)\nExpected: color(from color(rec2020 0.7 0.5 0.3 / 0.4) rec2020 r 20% b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 r g 0.2 / alpha)" should set the property value
  Colors do not match.\nActual:   color(rec2020 0.7 0.5 0.2 / 0.4)\nExpected: color(from color(rec2020 0.7 0.5 0.3 / 0.4) rec2020 r g 0.2 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 r g 20% / alpha)" should set the property value
  Colors do not match.\nActual:   color(rec2020 0.7 0.5 0.2 / 0.4)\nExpected: color(from color(rec2020 0.7 0.5 0.3 / 0.4) rec2020 r g 20% / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 r g b / 0.2)" should set the property value
  Colors do not match.\nActual:   color(rec2020 0.7 0.5 0.3 / 0.2)\nExpected: color(from color(rec2020 0.7 0.5 0.3 / 0.4) rec2020 r g b / 0.2).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 r g b / 20%)" should set the property value
  Colors do not match.\nActual:   color(rec2020 0.7 0.5 0.3 / 0.2)\nExpected: color(from color(rec2020 0.7 0.5 0.3 / 0.4) rec2020 r g b / 20%).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 2 3 4)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 2 3 4)" but got "color(rec2020 2 3 4)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 2 3 4 / 5)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 2 3 4 / 5)" but got "color(rec2020 2 3 4)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 -2 -3 -4)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 -2 -3 -4)" but got "color(rec2020 -2 -3 -4)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 -2 -3 -4 / -5)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 -2 -3 -4 / -5)" but got "color(rec2020 -2 -3 -4 / 0)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 200% 300% 400%)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 200% 300% 400%)" but got "color(rec2020 2 3 4)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 200% 300% 400% / 500%)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 200% 300% 400% / 500%)" but got "color(rec2020 2 3 4)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 -200% -300% -400%)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 -200% -300% -400%)" but got "color(rec2020 -2 -3 -4)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 -200% -300% -400% / -500%)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 -200% -300% -400% / -500%)" but got "color(rec2020 -2 -3 -4 / 0)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 g b r)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 g b r)" but got "color(rec2020 0.5 0.3 0.7)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 b alpha r / g)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 b alpha r / g)" but got "color(rec2020 0.3 1 0.7 / 0.5)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 r r r / r)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 r r r / r)" but got "color(rec2020 0.7 0.7 0.7 / 0.7)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 alpha alpha alpha / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 alpha alpha alpha / alpha)" but got "color(rec2020 1 1 1)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 g b r)" should set the property value
  Colors do not match.\nActual:   color(rec2020 0.5 0.3 0.7 / 0.4)\nExpected: color(from color(rec2020 0.7 0.5 0.3 / 0.4) rec2020 g b r).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.7 +/- 0.01, expected 0.7 but got 0.5
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 b alpha r / g)" should set the property value
  Colors do not match.\nActual:   color(rec2020 0.3 0.4 0.7 / 0.5)\nExpected: color(from color(rec2020 0.7 0.5 0.3 / 0.4) rec2020 b alpha r / g).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.7 +/- 0.01, expected 0.7 but got 0.3
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 r r r / r)" should set the property value
  Colors do not match.\nActual:   color(rec2020 0.7 0.7 0.7 / 0.7)\nExpected: color(from color(rec2020 0.7 0.5 0.3 / 0.4) rec2020 r r r / r).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 1, expected 0.5 +/- 0.01, expected 0.5 but got 0.7
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 alpha alpha alpha / alpha)" should set the property value
  Colors do not match.\nActual:   color(rec2020 0.4 0.4 0.4 / 0.4)\nExpected: color(from color(rec2020 0.7 0.5 0.3 / 0.4) rec2020 alpha alpha alpha / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.7 +/- 0.01, expected 0.7 but got 0.4
[FAIL] e.style['color'] = "color(from color(rec2020 1.7 1.5 1.3) rec2020 r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 1.7 1.5 1.3) rec2020 r g b)" but got "color(rec2020 1.7 1.5 1.3)"
[FAIL] e.style['color'] = "color(from color(rec2020 1.7 1.5 1.3) rec2020 r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 1.7 1.5 1.3) rec2020 r g b / alpha)" but got "color(rec2020 1.7 1.5 1.3)"
[FAIL] e.style['color'] = "color(from color(rec2020 1.7 1.5 1.3 / 140%) rec2020 r g b)" should set the property value
  Colors do not match.\nActual:   color(rec2020 1.7 1.5 1.3)\nExpected: color(from color(rec2020 1.7 1.5 1.3) rec2020 r g b).\nError: assert_equals: Color format is correct. expected "color(from color(rec   ) rec r g b)" but got "color(rec   )"
[FAIL] e.style['color'] = "color(from color(rec2020 1.7 1.5 1.3 / 140%) rec2020 r g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(rec2020 1.7 1.5 1.3)\nExpected: color(from color(rec2020 1.7 1.5 1.3) rec2020 r g b / alpha).\nError: assert_equals: Color format is correct. expected "color(from color(rec   ) rec r g b / alpha)" but got "color(rec   )"
[FAIL] e.style['color'] = "color(from color(rec2020 -0.7 -0.5 -0.3) rec2020 r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 -0.7 -0.5 -0.3) rec2020 r g b)" but got "color(rec2020 -0.7 -0.5 -0.3)"
[FAIL] e.style['color'] = "color(from color(rec2020 -0.7 -0.5 -0.3) rec2020 r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 -0.7 -0.5 -0.3) rec2020 r g b / alpha)" but got "color(rec2020 -0.7 -0.5 -0.3)"
[FAIL] e.style['color'] = "color(from color(rec2020 -0.7 -0.5 -0.3 / -40%) rec2020 r g b)" should set the property value
  Colors do not match.\nActual:   color(rec2020 -0.7 -0.5 -0.3 / 0)\nExpected: color(from color(rec2020 -0.7 -0.5 -0.3 / 0) rec2020 r g b).\nError: assert_equals: Color format is correct. expected "color(from color(rec - - - / ) rec r g b)" but got "color(rec - - - / )"
[FAIL] e.style['color'] = "color(from color(rec2020 -0.7 -0.5 -0.3 / -40%) rec2020 r g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(rec2020 -0.7 -0.5 -0.3 / 0)\nExpected: color(from color(rec2020 -0.7 -0.5 -0.3 / 0) rec2020 r g b / alpha).\nError: assert_equals: Color format is correct. expected "color(from color(rec - - - / ) rec r g b / alpha)" but got "color(rec - - - / )"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 calc(r) calc(g) calc(b))" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 calc(r) calc(g) calc(b))" but got "color(rec2020 0.7 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 calc(r) calc(g) calc(b) / calc(alpha))" should set the property value
  Colors do not match.\nActual:   color(rec2020 0.7 0.5 0.3 / 0.4)\nExpected: color(from color(rec2020 0.7 0.5 0.3 / 0.4) rec2020 calc(r) calc(g) calc(b) / calc(alpha)).\nError: assert_equals: Color format is correct. expected "color(from color(rec    / ) rec calc(r) calc(g) calc(b) / calc(alpha))" but got "color(rec    / )"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 none none none)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 none none none)" but got "color(rec2020 none none none)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 none none none / none)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 none none none / none)" but got "color(rec2020 none none none / none)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 r g none)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 r g none)" but got "color(rec2020 0.7 0.5 none)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 r g none / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 r g none / alpha)" but got "color(rec2020 0.7 0.5 none)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 r g b / none)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3) rec2020 r g b / none)" but got "color(rec2020 0.7 0.5 0.3 / none)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 r g none / alpha)" should set the property value
  Colors do not match.\nActual:   color(rec2020 0.7 0.5 none / 0.4)\nExpected: color(from color(rec2020 0.7 0.5 0.3 / 0.4) rec2020 r g none / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 r g b / none)" should set the property value
  Colors do not match.\nActual:   color(rec2020 0.7 0.5 0.3 / none)\nExpected: color(from color(rec2020 0.7 0.5 0.3 / 0.4) rec2020 r g b / none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(rec2020 none none none) rec2020 r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 none none none) rec2020 r g b)" but got "color(rec2020 0 0 0)"
[FAIL] e.style['color'] = "color(from color(rec2020 none none none / none) rec2020 r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 none none none / none) rec2020 r g b / alpha)" but got "color(rec2020 0 0 0 / 0)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 none 0.3) rec2020 r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 none 0.3) rec2020 r g b)" but got "color(rec2020 0.7 0 0.3)"
[FAIL] e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / none) rec2020 r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(rec2020 0.7 0.5 0.3 / none) rec2020 r g b / alpha)" but got "color(rec2020 0.7 0.5 0.3 / 0)"
[FAIL] e.style['color'] = "color(from color-mix(in rec2020, color(rec2020 0.7 0.5 0.3), color(rec2020 0.7 0.5 0.3)) rec2020 r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color-mix(in rec2020, color(rec2020 0.7 0.5 0.3), color(rec2020 0.7 0.5 0.3)) rec2020 r g b / alpha)" but got "color(rec2020 0.7 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g b)" but got "color(prophoto-rgb 0.7 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g b / alpha)" but got "color(prophoto-rgb 0.7 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb r g b)" should set the property value
  Colors do not match.\nActual:   color(prophoto-rgb 0.7 0.5 0.3 / 0.4)\nExpected: color(from color(prophoto-rgb 0.7 0.5 0.3 / 0.4) prophoto-rgb r g b).\nError: assert_equals: Color format is correct. expected "color(from color(prophoto-rgb    / ) prophoto-rgb r g b)" but got "color(prophoto-rgb    / )"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb r g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(prophoto-rgb 0.7 0.5 0.3 / 0.4)\nExpected: color(from color(prophoto-rgb 0.7 0.5 0.3 / 0.4) prophoto-rgb r g b / alpha).\nError: assert_equals: Color format is correct. expected "color(from color(prophoto-rgb    / ) prophoto-rgb r g b / alpha)" but got "color(prophoto-rgb    / )"
[FAIL] e.style['color'] = "color(from color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g b) prophoto-rgb r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g b) prophoto-rgb r g b)" but got "color(prophoto-rgb 0.7 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb 0 0 0)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb 0 0 0)" but got "color(prophoto-rgb 0 0 0)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb 0 0 0 / 0)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb 0 0 0 / 0)" but got "color(prophoto-rgb 0 0 0 / 0)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb 0 g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb 0 g b / alpha)" but got "color(prophoto-rgb 0 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r 0 b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r 0 b / alpha)" but got "color(prophoto-rgb 0.7 0 0.3)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g 0 / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g 0 / alpha)" but got "color(prophoto-rgb 0.7 0.5 0)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g b / 0)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g b / 0)" but got "color(prophoto-rgb 0.7 0.5 0.3 / 0)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb 0 g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(prophoto-rgb 0 0.5 0.3 / 0.4)\nExpected: color(from color(prophoto-rgb 0.7 0.5 0.3 / 0.4) prophoto-rgb 0 g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb r 0 b / alpha)" should set the property value
  Colors do not match.\nActual:   color(prophoto-rgb 0.7 0 0.3 / 0.4)\nExpected: color(from color(prophoto-rgb 0.7 0.5 0.3 / 0.4) prophoto-rgb r 0 b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb r g 0 / alpha)" should set the property value
  Colors do not match.\nActual:   color(prophoto-rgb 0.7 0.5 0 / 0.4)\nExpected: color(from color(prophoto-rgb 0.7 0.5 0.3 / 0.4) prophoto-rgb r g 0 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb r g b / 0)" should set the property value
  Colors do not match.\nActual:   color(prophoto-rgb 0.7 0.5 0.3 / 0)\nExpected: color(from color(prophoto-rgb 0.7 0.5 0.3 / 0.4) prophoto-rgb r g b / 0).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb 0.2 g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb 0.2 g b / alpha)" but got "color(prophoto-rgb 0.2 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb 20% g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb 20% g b / alpha)" but got "color(prophoto-rgb 0.2 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r 0.2 b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r 0.2 b / alpha)" but got "color(prophoto-rgb 0.7 0.2 0.3)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r 20% b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r 20% b / alpha)" but got "color(prophoto-rgb 0.7 0.2 0.3)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g 0.2 / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g 0.2 / alpha)" but got "color(prophoto-rgb 0.7 0.5 0.2)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g 20% / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g 20% / alpha)" but got "color(prophoto-rgb 0.7 0.5 0.2)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g b / 0.2)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g b / 0.2)" but got "color(prophoto-rgb 0.7 0.5 0.3 / 0.2)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g b / 20%)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g b / 20%)" but got "color(prophoto-rgb 0.7 0.5 0.3 / 0.2)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb 0.2 g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(prophoto-rgb 0.2 0.5 0.3 / 0.4)\nExpected: color(from color(prophoto-rgb 0.7 0.5 0.3 / 0.4) prophoto-rgb 0.2 g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb 20% g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(prophoto-rgb 0.2 0.5 0.3 / 0.4)\nExpected: color(from color(prophoto-rgb 0.7 0.5 0.3 / 0.4) prophoto-rgb 20% g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb r 0.2 b / alpha)" should set the property value
  Colors do not match.\nActual:   color(prophoto-rgb 0.7 0.2 0.3 / 0.4)\nExpected: color(from color(prophoto-rgb 0.7 0.5 0.3 / 0.4) prophoto-rgb r 0.2 b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb r 20% b / alpha)" should set the property value
  Colors do not match.\nActual:   color(prophoto-rgb 0.7 0.2 0.3 / 0.4)\nExpected: color(from color(prophoto-rgb 0.7 0.5 0.3 / 0.4) prophoto-rgb r 20% b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb r g 0.2 / alpha)" should set the property value
  Colors do not match.\nActual:   color(prophoto-rgb 0.7 0.5 0.2 / 0.4)\nExpected: color(from color(prophoto-rgb 0.7 0.5 0.3 / 0.4) prophoto-rgb r g 0.2 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb r g 20% / alpha)" should set the property value
  Colors do not match.\nActual:   color(prophoto-rgb 0.7 0.5 0.2 / 0.4)\nExpected: color(from color(prophoto-rgb 0.7 0.5 0.3 / 0.4) prophoto-rgb r g 20% / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb r g b / 0.2)" should set the property value
  Colors do not match.\nActual:   color(prophoto-rgb 0.7 0.5 0.3 / 0.2)\nExpected: color(from color(prophoto-rgb 0.7 0.5 0.3 / 0.4) prophoto-rgb r g b / 0.2).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb r g b / 20%)" should set the property value
  Colors do not match.\nActual:   color(prophoto-rgb 0.7 0.5 0.3 / 0.2)\nExpected: color(from color(prophoto-rgb 0.7 0.5 0.3 / 0.4) prophoto-rgb r g b / 20%).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb 2 3 4)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb 2 3 4)" but got "color(prophoto-rgb 2 3 4)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb 2 3 4 / 5)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb 2 3 4 / 5)" but got "color(prophoto-rgb 2 3 4)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb -2 -3 -4)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb -2 -3 -4)" but got "color(prophoto-rgb -2 -3 -4)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb -2 -3 -4 / -5)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb -2 -3 -4 / -5)" but got "color(prophoto-rgb -2 -3 -4 / 0)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb 200% 300% 400%)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb 200% 300% 400%)" but got "color(prophoto-rgb 2 3 4)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb 200% 300% 400% / 500%)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb 200% 300% 400% / 500%)" but got "color(prophoto-rgb 2 3 4)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb -200% -300% -400%)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb -200% -300% -400%)" but got "color(prophoto-rgb -2 -3 -4)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb -200% -300% -400% / -500%)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb -200% -300% -400% / -500%)" but got "color(prophoto-rgb -2 -3 -4 / 0)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb g b r)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb g b r)" but got "color(prophoto-rgb 0.5 0.3 0.7)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb b alpha r / g)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb b alpha r / g)" but got "color(prophoto-rgb 0.3 1 0.7 / 0.5)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r r r / r)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r r r / r)" but got "color(prophoto-rgb 0.7 0.7 0.7 / 0.7)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb alpha alpha alpha / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb alpha alpha alpha / alpha)" but got "color(prophoto-rgb 1 1 1)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb g b r)" should set the property value
  Colors do not match.\nActual:   color(prophoto-rgb 0.5 0.3 0.7 / 0.4)\nExpected: color(from color(prophoto-rgb 0.7 0.5 0.3 / 0.4) prophoto-rgb g b r).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.7 +/- 0.01, expected 0.7 but got 0.5
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb b alpha r / g)" should set the property value
  Colors do not match.\nActual:   color(prophoto-rgb 0.3 0.4 0.7 / 0.5)\nExpected: color(from color(prophoto-rgb 0.7 0.5 0.3 / 0.4) prophoto-rgb b alpha r / g).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.7 +/- 0.01, expected 0.7 but got 0.3
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb r r r / r)" should set the property value
  Colors do not match.\nActual:   color(prophoto-rgb 0.7 0.7 0.7 / 0.7)\nExpected: color(from color(prophoto-rgb 0.7 0.5 0.3 / 0.4) prophoto-rgb r r r / r).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 1, expected 0.5 +/- 0.01, expected 0.5 but got 0.7
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb alpha alpha alpha / alpha)" should set the property value
  Colors do not match.\nActual:   color(prophoto-rgb 0.4 0.4 0.4 / 0.4)\nExpected: color(from color(prophoto-rgb 0.7 0.5 0.3 / 0.4) prophoto-rgb alpha alpha alpha / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.7 +/- 0.01, expected 0.7 but got 0.4
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 1.7 1.5 1.3) prophoto-rgb r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 1.7 1.5 1.3) prophoto-rgb r g b)" but got "color(prophoto-rgb 1.7 1.5 1.3)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 1.7 1.5 1.3) prophoto-rgb r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 1.7 1.5 1.3) prophoto-rgb r g b / alpha)" but got "color(prophoto-rgb 1.7 1.5 1.3)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 1.7 1.5 1.3 / 140%) prophoto-rgb r g b)" should set the property value
  Colors do not match.\nActual:   color(prophoto-rgb 1.7 1.5 1.3)\nExpected: color(from color(prophoto-rgb 1.7 1.5 1.3) prophoto-rgb r g b).\nError: assert_equals: Color format is correct. expected "color(from color(prophoto-rgb   ) prophoto-rgb r g b)" but got "color(prophoto-rgb   )"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 1.7 1.5 1.3 / 140%) prophoto-rgb r g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(prophoto-rgb 1.7 1.5 1.3)\nExpected: color(from color(prophoto-rgb 1.7 1.5 1.3) prophoto-rgb r g b / alpha).\nError: assert_equals: Color format is correct. expected "color(from color(prophoto-rgb   ) prophoto-rgb r g b / alpha)" but got "color(prophoto-rgb   )"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb -0.7 -0.5 -0.3) prophoto-rgb r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb -0.7 -0.5 -0.3) prophoto-rgb r g b)" but got "color(prophoto-rgb -0.7 -0.5 -0.3)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb -0.7 -0.5 -0.3) prophoto-rgb r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb -0.7 -0.5 -0.3) prophoto-rgb r g b / alpha)" but got "color(prophoto-rgb -0.7 -0.5 -0.3)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb -0.7 -0.5 -0.3 / -40%) prophoto-rgb r g b)" should set the property value
  Colors do not match.\nActual:   color(prophoto-rgb -0.7 -0.5 -0.3 / 0)\nExpected: color(from color(prophoto-rgb -0.7 -0.5 -0.3 / 0) prophoto-rgb r g b).\nError: assert_equals: Color format is correct. expected "color(from color(prophoto-rgb - - - / ) prophoto-rgb r g b)" but got "color(prophoto-rgb - - - / )"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb -0.7 -0.5 -0.3 / -40%) prophoto-rgb r g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(prophoto-rgb -0.7 -0.5 -0.3 / 0)\nExpected: color(from color(prophoto-rgb -0.7 -0.5 -0.3 / 0) prophoto-rgb r g b / alpha).\nError: assert_equals: Color format is correct. expected "color(from color(prophoto-rgb - - - / ) prophoto-rgb r g b / alpha)" but got "color(prophoto-rgb - - - / )"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb calc(r) calc(g) calc(b))" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb calc(r) calc(g) calc(b))" but got "color(prophoto-rgb 0.7 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb calc(r) calc(g) calc(b) / calc(alpha))" should set the property value
  Colors do not match.\nActual:   color(prophoto-rgb 0.7 0.5 0.3 / 0.4)\nExpected: color(from color(prophoto-rgb 0.7 0.5 0.3 / 0.4) prophoto-rgb calc(r) calc(g) calc(b) / calc(alpha)).\nError: assert_equals: Color format is correct. expected "color(from color(prophoto-rgb    / ) prophoto-rgb calc(r) calc(g) calc(b) / calc(alpha))" but got "color(prophoto-rgb    / )"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb none none none)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb none none none)" but got "color(prophoto-rgb none none none)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb none none none / none)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb none none none / none)" but got "color(prophoto-rgb none none none / none)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g none)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g none)" but got "color(prophoto-rgb 0.7 0.5 none)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g none / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g none / alpha)" but got "color(prophoto-rgb 0.7 0.5 none)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g b / none)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g b / none)" but got "color(prophoto-rgb 0.7 0.5 0.3 / none)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb r g none / alpha)" should set the property value
  Colors do not match.\nActual:   color(prophoto-rgb 0.7 0.5 none / 0.4)\nExpected: color(from color(prophoto-rgb 0.7 0.5 0.3 / 0.4) prophoto-rgb r g none / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb r g b / none)" should set the property value
  Colors do not match.\nActual:   color(prophoto-rgb 0.7 0.5 0.3 / none)\nExpected: color(from color(prophoto-rgb 0.7 0.5 0.3 / 0.4) prophoto-rgb r g b / none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(prophoto-rgb none none none) prophoto-rgb r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb none none none) prophoto-rgb r g b)" but got "color(prophoto-rgb 0 0 0)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb none none none / none) prophoto-rgb r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb none none none / none) prophoto-rgb r g b / alpha)" but got "color(prophoto-rgb 0 0 0 / 0)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 none 0.3) prophoto-rgb r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 none 0.3) prophoto-rgb r g b)" but got "color(prophoto-rgb 0.7 0 0.3)"
[FAIL] e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / none) prophoto-rgb r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(prophoto-rgb 0.7 0.5 0.3 / none) prophoto-rgb r g b / alpha)" but got "color(prophoto-rgb 0.7 0.5 0.3 / 0)"
[FAIL] e.style['color'] = "color(from color-mix(in prophoto-rgb, color(prophoto-rgb 0.7 0.5 0.3), color(prophoto-rgb 0.7 0.5 0.3)) prophoto-rgb r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color-mix(in prophoto-rgb, color(prophoto-rgb 0.7 0.5 0.3), color(prophoto-rgb 0.7 0.5 0.3)) prophoto-rgb r g b / alpha)" but got "color(prophoto-rgb 0.7 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 r g b)" but got "color(display-p3 0.7 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 r g b / alpha)" but got "color(display-p3 0.7 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 r g b)" should set the property value
  Colors do not match.\nActual:   color(display-p3 0.7 0.5 0.3 / 0.4)\nExpected: color(from color(display-p3 0.7 0.5 0.3 / 0.4) display-p3 r g b).\nError: assert_equals: Color format is correct. expected "color(from color(display-p    / ) display-p r g b)" but got "color(display-p    / )"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 r g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(display-p3 0.7 0.5 0.3 / 0.4)\nExpected: color(from color(display-p3 0.7 0.5 0.3 / 0.4) display-p3 r g b / alpha).\nError: assert_equals: Color format is correct. expected "color(from color(display-p    / ) display-p r g b / alpha)" but got "color(display-p    / )"
[FAIL] e.style['color'] = "color(from color(from color(display-p3 0.7 0.5 0.3) display-p3 r g b) display-p3 r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(from color(display-p3 0.7 0.5 0.3) display-p3 r g b) display-p3 r g b)" but got "color(display-p3 0.7 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 0 0 0)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 0 0 0)" but got "color(display-p3 0 0 0)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 0 0 0 / 0)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 0 0 0 / 0)" but got "color(display-p3 0 0 0 / 0)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 0 g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 0 g b / alpha)" but got "color(display-p3 0 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 r 0 b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 r 0 b / alpha)" but got "color(display-p3 0.7 0 0.3)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 r g 0 / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 r g 0 / alpha)" but got "color(display-p3 0.7 0.5 0)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 r g b / 0)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 r g b / 0)" but got "color(display-p3 0.7 0.5 0.3 / 0)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 0 g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(display-p3 0 0.5 0.3 / 0.4)\nExpected: color(from color(display-p3 0.7 0.5 0.3 / 0.4) display-p3 0 g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 r 0 b / alpha)" should set the property value
  Colors do not match.\nActual:   color(display-p3 0.7 0 0.3 / 0.4)\nExpected: color(from color(display-p3 0.7 0.5 0.3 / 0.4) display-p3 r 0 b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 r g 0 / alpha)" should set the property value
  Colors do not match.\nActual:   color(display-p3 0.7 0.5 0 / 0.4)\nExpected: color(from color(display-p3 0.7 0.5 0.3 / 0.4) display-p3 r g 0 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 r g b / 0)" should set the property value
  Colors do not match.\nActual:   color(display-p3 0.7 0.5 0.3 / 0)\nExpected: color(from color(display-p3 0.7 0.5 0.3 / 0.4) display-p3 r g b / 0).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 0.2 g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 0.2 g b / alpha)" but got "color(display-p3 0.2 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 20% g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 20% g b / alpha)" but got "color(display-p3 0.2 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 r 0.2 b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 r 0.2 b / alpha)" but got "color(display-p3 0.7 0.2 0.3)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 r 20% b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 r 20% b / alpha)" but got "color(display-p3 0.7 0.2 0.3)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 r g 0.2 / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 r g 0.2 / alpha)" but got "color(display-p3 0.7 0.5 0.2)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 r g 20% / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 r g 20% / alpha)" but got "color(display-p3 0.7 0.5 0.2)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 r g b / 0.2)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 r g b / 0.2)" but got "color(display-p3 0.7 0.5 0.3 / 0.2)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 r g b / 20%)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 r g b / 20%)" but got "color(display-p3 0.7 0.5 0.3 / 0.2)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 0.2 g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(display-p3 0.2 0.5 0.3 / 0.4)\nExpected: color(from color(display-p3 0.7 0.5 0.3 / 0.4) display-p3 0.2 g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 20% g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(display-p3 0.2 0.5 0.3 / 0.4)\nExpected: color(from color(display-p3 0.7 0.5 0.3 / 0.4) display-p3 20% g b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 r 0.2 b / alpha)" should set the property value
  Colors do not match.\nActual:   color(display-p3 0.7 0.2 0.3 / 0.4)\nExpected: color(from color(display-p3 0.7 0.5 0.3 / 0.4) display-p3 r 0.2 b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 r 20% b / alpha)" should set the property value
  Colors do not match.\nActual:   color(display-p3 0.7 0.2 0.3 / 0.4)\nExpected: color(from color(display-p3 0.7 0.5 0.3 / 0.4) display-p3 r 20% b / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 r g 0.2 / alpha)" should set the property value
  Colors do not match.\nActual:   color(display-p3 0.7 0.5 0.2 / 0.4)\nExpected: color(from color(display-p3 0.7 0.5 0.3 / 0.4) display-p3 r g 0.2 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 r g 20% / alpha)" should set the property value
  Colors do not match.\nActual:   color(display-p3 0.7 0.5 0.2 / 0.4)\nExpected: color(from color(display-p3 0.7 0.5 0.3 / 0.4) display-p3 r g 20% / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 r g b / 0.2)" should set the property value
  Colors do not match.\nActual:   color(display-p3 0.7 0.5 0.3 / 0.2)\nExpected: color(from color(display-p3 0.7 0.5 0.3 / 0.4) display-p3 r g b / 0.2).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 r g b / 20%)" should set the property value
  Colors do not match.\nActual:   color(display-p3 0.7 0.5 0.3 / 0.2)\nExpected: color(from color(display-p3 0.7 0.5 0.3 / 0.4) display-p3 r g b / 20%).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 2 3 4)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 2 3 4)" but got "color(display-p3 2 3 4)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 2 3 4 / 5)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 2 3 4 / 5)" but got "color(display-p3 2 3 4)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 -2 -3 -4)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 -2 -3 -4)" but got "color(display-p3 -2 -3 -4)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 -2 -3 -4 / -5)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 -2 -3 -4 / -5)" but got "color(display-p3 -2 -3 -4 / 0)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 200% 300% 400%)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 200% 300% 400%)" but got "color(display-p3 2 3 4)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 200% 300% 400% / 500%)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 200% 300% 400% / 500%)" but got "color(display-p3 2 3 4)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 -200% -300% -400%)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 -200% -300% -400%)" but got "color(display-p3 -2 -3 -4)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 -200% -300% -400% / -500%)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 -200% -300% -400% / -500%)" but got "color(display-p3 -2 -3 -4 / 0)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 g b r)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 g b r)" but got "color(display-p3 0.5 0.3 0.7)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 b alpha r / g)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 b alpha r / g)" but got "color(display-p3 0.3 1 0.7 / 0.5)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 r r r / r)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 r r r / r)" but got "color(display-p3 0.7 0.7 0.7 / 0.7)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 alpha alpha alpha / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 alpha alpha alpha / alpha)" but got "color(display-p3 1 1 1)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 g b r)" should set the property value
  Colors do not match.\nActual:   color(display-p3 0.5 0.3 0.7 / 0.4)\nExpected: color(from color(display-p3 0.7 0.5 0.3 / 0.4) display-p3 g b r).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.7 +/- 0.01, expected 0.7 but got 0.5
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 b alpha r / g)" should set the property value
  Colors do not match.\nActual:   color(display-p3 0.3 0.4 0.7 / 0.5)\nExpected: color(from color(display-p3 0.7 0.5 0.3 / 0.4) display-p3 b alpha r / g).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.7 +/- 0.01, expected 0.7 but got 0.3
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 r r r / r)" should set the property value
  Colors do not match.\nActual:   color(display-p3 0.7 0.7 0.7 / 0.7)\nExpected: color(from color(display-p3 0.7 0.5 0.3 / 0.4) display-p3 r r r / r).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 1, expected 0.5 +/- 0.01, expected 0.5 but got 0.7
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 alpha alpha alpha / alpha)" should set the property value
  Colors do not match.\nActual:   color(display-p3 0.4 0.4 0.4 / 0.4)\nExpected: color(from color(display-p3 0.7 0.5 0.3 / 0.4) display-p3 alpha alpha alpha / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.7 +/- 0.01, expected 0.7 but got 0.4
[FAIL] e.style['color'] = "color(from color(display-p3 1.7 1.5 1.3) display-p3 r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 1.7 1.5 1.3) display-p3 r g b)" but got "color(display-p3 1.7 1.5 1.3)"
[FAIL] e.style['color'] = "color(from color(display-p3 1.7 1.5 1.3) display-p3 r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 1.7 1.5 1.3) display-p3 r g b / alpha)" but got "color(display-p3 1.7 1.5 1.3)"
[FAIL] e.style['color'] = "color(from color(display-p3 1.7 1.5 1.3 / 140%) display-p3 r g b)" should set the property value
  Colors do not match.\nActual:   color(display-p3 1.7 1.5 1.3)\nExpected: color(from color(display-p3 1.7 1.5 1.3) display-p3 r g b).\nError: assert_equals: Color format is correct. expected "color(from color(display-p   ) display-p r g b)" but got "color(display-p   )"
[FAIL] e.style['color'] = "color(from color(display-p3 1.7 1.5 1.3 / 140%) display-p3 r g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(display-p3 1.7 1.5 1.3)\nExpected: color(from color(display-p3 1.7 1.5 1.3) display-p3 r g b / alpha).\nError: assert_equals: Color format is correct. expected "color(from color(display-p   ) display-p r g b / alpha)" but got "color(display-p   )"
[FAIL] e.style['color'] = "color(from color(display-p3 -0.7 -0.5 -0.3) display-p3 r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 -0.7 -0.5 -0.3) display-p3 r g b)" but got "color(display-p3 -0.7 -0.5 -0.3)"
[FAIL] e.style['color'] = "color(from color(display-p3 -0.7 -0.5 -0.3) display-p3 r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 -0.7 -0.5 -0.3) display-p3 r g b / alpha)" but got "color(display-p3 -0.7 -0.5 -0.3)"
[FAIL] e.style['color'] = "color(from color(display-p3 -0.7 -0.5 -0.3 / -40%) display-p3 r g b)" should set the property value
  Colors do not match.\nActual:   color(display-p3 -0.7 -0.5 -0.3 / 0)\nExpected: color(from color(display-p3 -0.7 -0.5 -0.3 / 0) display-p3 r g b).\nError: assert_equals: Color format is correct. expected "color(from color(display-p - - - / ) display-p r g b)" but got "color(display-p - - - / )"
[FAIL] e.style['color'] = "color(from color(display-p3 -0.7 -0.5 -0.3 / -40%) display-p3 r g b / alpha)" should set the property value
  Colors do not match.\nActual:   color(display-p3 -0.7 -0.5 -0.3 / 0)\nExpected: color(from color(display-p3 -0.7 -0.5 -0.3 / 0) display-p3 r g b / alpha).\nError: assert_equals: Color format is correct. expected "color(from color(display-p - - - / ) display-p r g b / alpha)" but got "color(display-p - - - / )"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 calc(r) calc(g) calc(b))" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 calc(r) calc(g) calc(b))" but got "color(display-p3 0.7 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 calc(r) calc(g) calc(b) / calc(alpha))" should set the property value
  Colors do not match.\nActual:   color(display-p3 0.7 0.5 0.3 / 0.4)\nExpected: color(from color(display-p3 0.7 0.5 0.3 / 0.4) display-p3 calc(r) calc(g) calc(b) / calc(alpha)).\nError: assert_equals: Color format is correct. expected "color(from color(display-p    / ) display-p calc(r) calc(g) calc(b) / calc(alpha))" but got "color(display-p    / )"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 none none none)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 none none none)" but got "color(display-p3 none none none)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 none none none / none)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 none none none / none)" but got "color(display-p3 none none none / none)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 r g none)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 r g none)" but got "color(display-p3 0.7 0.5 none)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 r g none / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 r g none / alpha)" but got "color(display-p3 0.7 0.5 none)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 r g b / none)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3) display-p3 r g b / none)" but got "color(display-p3 0.7 0.5 0.3 / none)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 r g none / alpha)" should set the property value
  Colors do not match.\nActual:   color(display-p3 0.7 0.5 none / 0.4)\nExpected: color(from color(display-p3 0.7 0.5 0.3 / 0.4) display-p3 r g none / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 r g b / none)" should set the property value
  Colors do not match.\nActual:   color(display-p3 0.7 0.5 0.3 / none)\nExpected: color(from color(display-p3 0.7 0.5 0.3 / 0.4) display-p3 r g b / none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(display-p3 none none none) display-p3 r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 none none none) display-p3 r g b)" but got "color(display-p3 0 0 0)"
[FAIL] e.style['color'] = "color(from color(display-p3 none none none / none) display-p3 r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 none none none / none) display-p3 r g b / alpha)" but got "color(display-p3 0 0 0 / 0)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 none 0.3) display-p3 r g b)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 none 0.3) display-p3 r g b)" but got "color(display-p3 0.7 0 0.3)"
[FAIL] e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / none) display-p3 r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color(display-p3 0.7 0.5 0.3 / none) display-p3 r g b / alpha)" but got "color(display-p3 0.7 0.5 0.3 / 0)"
[FAIL] e.style['color'] = "color(from color-mix(in display-p3, color(display-p3 0.7 0.5 0.3), color(display-p3 0.7 0.5 0.3)) display-p3 r g b / alpha)" should set the property value
  assert_equals: serialization should be canonical expected "color(from color-mix(in display-p3, color(display-p3 0.7 0.5 0.3), color(display-p3 0.7 0.5 0.3)) display-p3 r g b / alpha)" but got "color(display-p3 0.7 0.5 0.3)"
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz x y z)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 100)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y z).\nError: assert_equals: Color format is correct. expected "color(from color(xyz-d  - ) xyz-d x y z)" but got "color(xyz-d  - )"
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz x y z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 100)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y z / alpha).\nError: assert_equals: Color format is correct. expected "color(from color(xyz-d  - ) xyz-d x y z / alpha)" but got "color(xyz-d  - )"
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100 / 40%) xyz x y z)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 100 / 0.4)\nExpected: color(from color(xyz-d65 7 -20.5 100 / 0.4) xyz-d65 x y z).\nError: assert_equals: Color format is correct. expected "color(from color(xyz-d  -  / ) xyz-d x y z)" but got "color(xyz-d  -  / )"
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100 / 40%) xyz x y z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 100 / 0.4)\nExpected: color(from color(xyz-d65 7 -20.5 100 / 0.4) xyz-d65 x y z / alpha).\nError: assert_equals: Color format is correct. expected "color(from color(xyz-d  -  / ) xyz-d x y z / alpha)" but got "color(xyz-d  -  / )"
[FAIL] e.style['color'] = "color(from color(from color(xyz 7 -20.5 100) xyz x y z) xyz x y z)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 100)\nExpected: color(from color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y z) xyz-d65 x y z).\nError: assert_equals: Color format is correct. expected "color(from color(from color(xyz-d  - ) xyz-d x y z) xyz-d x y z)" but got "color(xyz-d  - )"
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz 0 0 0)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 0 0 0)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 0 0 0).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 6 got 3
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz 0 0 0 / 0)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 0 0 0 / 0)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 0 0 0 / 0).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 7 got 4
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz 0 y z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 0 -20.5 100)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 0 y z / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz x 0 z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 0 100)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 x 0 z / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz x y 0 / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 0)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y 0 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz x y z / 0)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 100 / 0)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y z / 0).\nError: assert_equals: Color format is correct. expected "color(from color(xyz-d  - ) xyz-d x y z / )" but got "color(xyz-d  -  / )"
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100 / 40%) xyz 0 y z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 0 -20.5 100 / 0.4)\nExpected: color(from color(xyz-d65 7 -20.5 100 / 0.4) xyz-d65 0 y z / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100 / 40%) xyz x 0 z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 0 100 / 0.4)\nExpected: color(from color(xyz-d65 7 -20.5 100 / 0.4) xyz-d65 x 0 z / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100 / 40%) xyz x y 0 / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 0 / 0.4)\nExpected: color(from color(xyz-d65 7 -20.5 100 / 0.4) xyz-d65 x y 0 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100 / 40%) xyz x y z / 0)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 100 / 0)\nExpected: color(from color(xyz-d65 7 -20.5 100 / 0.4) xyz-d65 x y z / 0).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz 0.2 y z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 0.2 -20.5 100)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 0.2 y z / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz x 0.2 z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 0.2 100)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 x 0.2 z / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz x y 0.2 / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 0.2)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y 0.2 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz x y z / 0.2)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 100 / 0.2)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y z / 0.2).\nError: assert_equals: Color format is correct. expected "color(from color(xyz-d  - ) xyz-d x y z / )" but got "color(xyz-d  -  / )"
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz x y z / 20%)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 100 / 0.2)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y z / 20%).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 3, expected 20 +/- 0.01, expected 20 but got 0.2
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100 / 40%) xyz 0.2 y z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 0.2 -20.5 100 / 0.4)\nExpected: color(from color(xyz-d65 7 -20.5 100 / 0.4) xyz-d65 0.2 y z / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100 / 40%) xyz x 0.2 z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 0.2 100 / 0.4)\nExpected: color(from color(xyz-d65 7 -20.5 100 / 0.4) xyz-d65 x 0.2 z / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100 / 40%) xyz x y 0.2 / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 0.2 / 0.4)\nExpected: color(from color(xyz-d65 7 -20.5 100 / 0.4) xyz-d65 x y 0.2 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100 / 40%) xyz x y z / 0.2)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 100 / 0.2)\nExpected: color(from color(xyz-d65 7 -20.5 100 / 0.4) xyz-d65 x y z / 0.2).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz y z x)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 -20.5 100 7)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 y z x).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 7 +/- 0.01, expected 7 but got -20.5
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz x x x / x)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 7 7)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 x x x / x).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 1, expected -20.5 +/- 0.01, expected -20.5 but got 7
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100 / 40%) xyz y z x)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 -20.5 100 7 / 0.4)\nExpected: color(from color(xyz-d65 7 -20.5 100 / 0.4) xyz-d65 y z x).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 7 +/- 0.01, expected 7 but got -20.5
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100 / 40%) xyz x x x / x)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 7 7)\nExpected: color(from color(xyz-d65 7 -20.5 100 / 0.4) xyz-d65 x x x / x).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz calc(x) calc(y) calc(z))" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 100)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 calc(x) calc(y) calc(z)).\nError: assert_equals: Color format is correct. expected "color(from color(xyz-d  - ) xyz-d calc(x) calc(y) calc(z))" but got "color(xyz-d  - )"
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100 / 40%) xyz calc(x) calc(y) calc(z) / calc(alpha))" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 100 / 0.4)\nExpected: color(from color(xyz-d65 7 -20.5 100 / 0.4) xyz-d65 calc(x) calc(y) calc(z) / calc(alpha)).\nError: assert_equals: Color format is correct. expected "color(from color(xyz-d  -  / ) xyz-d calc(x) calc(y) calc(z) / calc(alpha))" but got "color(xyz-d  -  / )"
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz none none none)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 none none none)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 none none none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 0
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz none none none / none)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 none none none / none)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 none none none / none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 0
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz x y none)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 none)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 2
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz x y none / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 none)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y none / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 2
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz x y z / none)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 100 / none)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y z / none).\nError: assert_equals: Color format is correct. expected "color(from color(xyz-d  - ) xyz-d x y z / none)" but got "color(xyz-d  -  / none)"
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100 / 40%) xyz x y none / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 none / 0.4)\nExpected: color(from color(xyz-d65 7 -20.5 100 / 0.4) xyz-d65 x y none / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100 / 40%) xyz x y z / none)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 100 / none)\nExpected: color(from color(xyz-d65 7 -20.5 100 / 0.4) xyz-d65 x y z / none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(xyz none none none) xyz x y z)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 0 0 0)\nExpected: color(from color(xyz-d65 none none none) xyz-d65 x y z).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "color(from color(xyz none none none / none) xyz x y z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 0 0 0 / 0)\nExpected: color(from color(xyz-d65 none none none / none) xyz-d65 x y z / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 4
[FAIL] e.style['color'] = "color(from color(xyz 7 none 100) xyz x y z)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 0 100)\nExpected: color(from color(xyz-d65 7 none 100) xyz-d65 x y z).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 2 got 3
[FAIL] e.style['color'] = "color(from color(xyz 7 -20.5 100 / none) xyz x y z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 100 / 0)\nExpected: color(from color(xyz-d65 7 -20.5 100 / none) xyz-d65 x y z / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 4
[FAIL] e.style['color'] = "color(from color-mix(in xyz, color(xyz 0.7 0.5 0.3), color(xyz 0.7 0.5 0.3)) xyz x y z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 0.7 0.5 0.3)\nExpected: color(from color-mix(in xyz-d65, color(xyz-d65 0.7 0.5 0.3), color(xyz-d65 0.7 0.5 0.3)) xyz-d65 x y z / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 6 got 3
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 x y z)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 7 -20.5 100)\nExpected: color(from color(xyz-d50 7 -20.5 100) xyz-d50 x y z).\nError: assert_equals: Color format is correct. expected "color(from color(xyz-d  - ) xyz-d x y z)" but got "color(xyz-d  - )"
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 x y z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 7 -20.5 100)\nExpected: color(from color(xyz-d50 7 -20.5 100) xyz-d50 x y z / alpha).\nError: assert_equals: Color format is correct. expected "color(from color(xyz-d  - ) xyz-d x y z / alpha)" but got "color(xyz-d  - )"
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100 / 40%) xyz-d50 x y z)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 7 -20.5 100 / 0.4)\nExpected: color(from color(xyz-d50 7 -20.5 100 / 0.4) xyz-d50 x y z).\nError: assert_equals: Color format is correct. expected "color(from color(xyz-d  -  / ) xyz-d x y z)" but got "color(xyz-d  -  / )"
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100 / 40%) xyz-d50 x y z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 7 -20.5 100 / 0.4)\nExpected: color(from color(xyz-d50 7 -20.5 100 / 0.4) xyz-d50 x y z / alpha).\nError: assert_equals: Color format is correct. expected "color(from color(xyz-d  -  / ) xyz-d x y z / alpha)" but got "color(xyz-d  -  / )"
[FAIL] e.style['color'] = "color(from color(from color(xyz-d50 7 -20.5 100) xyz-d50 x y z) xyz-d50 x y z)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 7 -20.5 100)\nExpected: color(from color(from color(xyz-d50 7 -20.5 100) xyz-d50 x y z) xyz-d50 x y z).\nError: assert_equals: Color format is correct. expected "color(from color(from color(xyz-d  - ) xyz-d x y z) xyz-d x y z)" but got "color(xyz-d  - )"
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 0 0 0)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 0 0 0)\nExpected: color(from color(xyz-d50 7 -20.5 100) xyz-d50 0 0 0).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 6 got 3
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 0 0 0 / 0)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 0 0 0 / 0)\nExpected: color(from color(xyz-d50 7 -20.5 100) xyz-d50 0 0 0 / 0).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 7 got 4
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 0 y z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 0 -20.5 100)\nExpected: color(from color(xyz-d50 7 -20.5 100) xyz-d50 0 y z / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 x 0 z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 7 0 100)\nExpected: color(from color(xyz-d50 7 -20.5 100) xyz-d50 x 0 z / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 x y 0 / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 7 -20.5 0)\nExpected: color(from color(xyz-d50 7 -20.5 100) xyz-d50 x y 0 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 x y z / 0)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 7 -20.5 100 / 0)\nExpected: color(from color(xyz-d50 7 -20.5 100) xyz-d50 x y z / 0).\nError: assert_equals: Color format is correct. expected "color(from color(xyz-d  - ) xyz-d x y z / )" but got "color(xyz-d  -  / )"
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100 / 40%) xyz-d50 0 y z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 0 -20.5 100 / 0.4)\nExpected: color(from color(xyz-d50 7 -20.5 100 / 0.4) xyz-d50 0 y z / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100 / 40%) xyz-d50 x 0 z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 7 0 100 / 0.4)\nExpected: color(from color(xyz-d50 7 -20.5 100 / 0.4) xyz-d50 x 0 z / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100 / 40%) xyz-d50 x y 0 / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 7 -20.5 0 / 0.4)\nExpected: color(from color(xyz-d50 7 -20.5 100 / 0.4) xyz-d50 x y 0 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100 / 40%) xyz-d50 x y z / 0)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 7 -20.5 100 / 0)\nExpected: color(from color(xyz-d50 7 -20.5 100 / 0.4) xyz-d50 x y z / 0).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 0.2 y z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 0.2 -20.5 100)\nExpected: color(from color(xyz-d50 7 -20.5 100) xyz-d50 0.2 y z / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 x 0.2 z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 7 0.2 100)\nExpected: color(from color(xyz-d50 7 -20.5 100) xyz-d50 x 0.2 z / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 x y 0.2 / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 7 -20.5 0.2)\nExpected: color(from color(xyz-d50 7 -20.5 100) xyz-d50 x y 0.2 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 x y z / 0.2)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 7 -20.5 100 / 0.2)\nExpected: color(from color(xyz-d50 7 -20.5 100) xyz-d50 x y z / 0.2).\nError: assert_equals: Color format is correct. expected "color(from color(xyz-d  - ) xyz-d x y z / )" but got "color(xyz-d  -  / )"
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 x y z / 20%)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 7 -20.5 100 / 0.2)\nExpected: color(from color(xyz-d50 7 -20.5 100) xyz-d50 x y z / 20%).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 3, expected 20 +/- 0.01, expected 20 but got 0.2
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100 / 40%) xyz-d50 0.2 y z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 0.2 -20.5 100 / 0.4)\nExpected: color(from color(xyz-d50 7 -20.5 100 / 0.4) xyz-d50 0.2 y z / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100 / 40%) xyz-d50 x 0.2 z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 7 0.2 100 / 0.4)\nExpected: color(from color(xyz-d50 7 -20.5 100 / 0.4) xyz-d50 x 0.2 z / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100 / 40%) xyz-d50 x y 0.2 / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 7 -20.5 0.2 / 0.4)\nExpected: color(from color(xyz-d50 7 -20.5 100 / 0.4) xyz-d50 x y 0.2 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100 / 40%) xyz-d50 x y z / 0.2)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 7 -20.5 100 / 0.2)\nExpected: color(from color(xyz-d50 7 -20.5 100 / 0.4) xyz-d50 x y z / 0.2).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 y z x)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 -20.5 100 7)\nExpected: color(from color(xyz-d50 7 -20.5 100) xyz-d50 y z x).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 7 +/- 0.01, expected 7 but got -20.5
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 x x x / x)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 7 7 7)\nExpected: color(from color(xyz-d50 7 -20.5 100) xyz-d50 x x x / x).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 1, expected -20.5 +/- 0.01, expected -20.5 but got 7
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100 / 40%) xyz-d50 y z x)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 -20.5 100 7 / 0.4)\nExpected: color(from color(xyz-d50 7 -20.5 100 / 0.4) xyz-d50 y z x).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 7 +/- 0.01, expected 7 but got -20.5
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100 / 40%) xyz-d50 x x x / x)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 7 7 7)\nExpected: color(from color(xyz-d50 7 -20.5 100 / 0.4) xyz-d50 x x x / x).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 calc(x) calc(y) calc(z))" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 7 -20.5 100)\nExpected: color(from color(xyz-d50 7 -20.5 100) xyz-d50 calc(x) calc(y) calc(z)).\nError: assert_equals: Color format is correct. expected "color(from color(xyz-d  - ) xyz-d calc(x) calc(y) calc(z))" but got "color(xyz-d  - )"
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100 / 40%) xyz-d50 calc(x) calc(y) calc(z) / calc(alpha))" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 7 -20.5 100 / 0.4)\nExpected: color(from color(xyz-d50 7 -20.5 100 / 0.4) xyz-d50 calc(x) calc(y) calc(z) / calc(alpha)).\nError: assert_equals: Color format is correct. expected "color(from color(xyz-d  -  / ) xyz-d calc(x) calc(y) calc(z) / calc(alpha))" but got "color(xyz-d  -  / )"
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 none none none)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 none none none)\nExpected: color(from color(xyz-d50 7 -20.5 100) xyz-d50 none none none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 0
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 none none none / none)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 none none none / none)\nExpected: color(from color(xyz-d50 7 -20.5 100) xyz-d50 none none none / none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 0
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 x y none)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 7 -20.5 none)\nExpected: color(from color(xyz-d50 7 -20.5 100) xyz-d50 x y none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 2
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 x y none / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 7 -20.5 none)\nExpected: color(from color(xyz-d50 7 -20.5 100) xyz-d50 x y none / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 2
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 x y z / none)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 7 -20.5 100 / none)\nExpected: color(from color(xyz-d50 7 -20.5 100) xyz-d50 x y z / none).\nError: assert_equals: Color format is correct. expected "color(from color(xyz-d  - ) xyz-d x y z / none)" but got "color(xyz-d  -  / none)"
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100 / 40%) xyz-d50 x y none / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 7 -20.5 none / 0.4)\nExpected: color(from color(xyz-d50 7 -20.5 100 / 0.4) xyz-d50 x y none / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100 / 40%) xyz-d50 x y z / none)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 7 -20.5 100 / none)\nExpected: color(from color(xyz-d50 7 -20.5 100 / 0.4) xyz-d50 x y z / none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(xyz-d50 none none none) xyz-d50 x y z)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 0 0 0)\nExpected: color(from color(xyz-d50 none none none) xyz-d50 x y z).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "color(from color(xyz-d50 none none none / none) xyz-d50 x y z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 0 0 0 / 0)\nExpected: color(from color(xyz-d50 none none none / none) xyz-d50 x y z / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 4
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 none 100) xyz-d50 x y z)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 7 0 100)\nExpected: color(from color(xyz-d50 7 none 100) xyz-d50 x y z).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 2 got 3
[FAIL] e.style['color'] = "color(from color(xyz-d50 7 -20.5 100 / none) xyz-d50 x y z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 7 -20.5 100 / 0)\nExpected: color(from color(xyz-d50 7 -20.5 100 / none) xyz-d50 x y z / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 4
[FAIL] e.style['color'] = "color(from color-mix(in xyz-d50, color(xyz-d50 0.7 0.5 0.3), color(xyz-d50 0.7 0.5 0.3)) xyz-d50 x y z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d50 0.7 0.5 0.3)\nExpected: color(from color-mix(in xyz-d50, color(xyz-d50 0.7 0.5 0.3), color(xyz-d50 0.7 0.5 0.3)) xyz-d50 x y z / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 6 got 3
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y z)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 100)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y z).\nError: assert_equals: Color format is correct. expected "color(from color(xyz-d  - ) xyz-d x y z)" but got "color(xyz-d  - )"
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 100)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y z / alpha).\nError: assert_equals: Color format is correct. expected "color(from color(xyz-d  - ) xyz-d x y z / alpha)" but got "color(xyz-d  - )"
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100 / 40%) xyz-d65 x y z)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 100 / 0.4)\nExpected: color(from color(xyz-d65 7 -20.5 100 / 0.4) xyz-d65 x y z).\nError: assert_equals: Color format is correct. expected "color(from color(xyz-d  -  / ) xyz-d x y z)" but got "color(xyz-d  -  / )"
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100 / 40%) xyz-d65 x y z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 100 / 0.4)\nExpected: color(from color(xyz-d65 7 -20.5 100 / 0.4) xyz-d65 x y z / alpha).\nError: assert_equals: Color format is correct. expected "color(from color(xyz-d  -  / ) xyz-d x y z / alpha)" but got "color(xyz-d  -  / )"
[FAIL] e.style['color'] = "color(from color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y z) xyz-d65 x y z)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 100)\nExpected: color(from color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y z) xyz-d65 x y z).\nError: assert_equals: Color format is correct. expected "color(from color(from color(xyz-d  - ) xyz-d x y z) xyz-d x y z)" but got "color(xyz-d  - )"
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 0 0 0)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 0 0 0)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 0 0 0).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 6 got 3
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 0 0 0 / 0)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 0 0 0 / 0)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 0 0 0 / 0).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 7 got 4
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 0 y z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 0 -20.5 100)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 0 y z / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 x 0 z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 0 100)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 x 0 z / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y 0 / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 0)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y 0 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y z / 0)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 100 / 0)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y z / 0).\nError: assert_equals: Color format is correct. expected "color(from color(xyz-d  - ) xyz-d x y z / )" but got "color(xyz-d  -  / )"
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100 / 40%) xyz-d65 0 y z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 0 -20.5 100 / 0.4)\nExpected: color(from color(xyz-d65 7 -20.5 100 / 0.4) xyz-d65 0 y z / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100 / 40%) xyz-d65 x 0 z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 0 100 / 0.4)\nExpected: color(from color(xyz-d65 7 -20.5 100 / 0.4) xyz-d65 x 0 z / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100 / 40%) xyz-d65 x y 0 / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 0 / 0.4)\nExpected: color(from color(xyz-d65 7 -20.5 100 / 0.4) xyz-d65 x y 0 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100 / 40%) xyz-d65 x y z / 0)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 100 / 0)\nExpected: color(from color(xyz-d65 7 -20.5 100 / 0.4) xyz-d65 x y z / 0).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 0.2 y z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 0.2 -20.5 100)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 0.2 y z / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 x 0.2 z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 0.2 100)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 x 0.2 z / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y 0.2 / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 0.2)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y 0.2 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y z / 0.2)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 100 / 0.2)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y z / 0.2).\nError: assert_equals: Color format is correct. expected "color(from color(xyz-d  - ) xyz-d x y z / )" but got "color(xyz-d  -  / )"
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y z / 20%)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 100 / 0.2)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y z / 20%).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 3, expected 20 +/- 0.01, expected 20 but got 0.2
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100 / 40%) xyz-d65 0.2 y z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 0.2 -20.5 100 / 0.4)\nExpected: color(from color(xyz-d65 7 -20.5 100 / 0.4) xyz-d65 0.2 y z / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100 / 40%) xyz-d65 x 0.2 z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 0.2 100 / 0.4)\nExpected: color(from color(xyz-d65 7 -20.5 100 / 0.4) xyz-d65 x 0.2 z / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100 / 40%) xyz-d65 x y 0.2 / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 0.2 / 0.4)\nExpected: color(from color(xyz-d65 7 -20.5 100 / 0.4) xyz-d65 x y 0.2 / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100 / 40%) xyz-d65 x y z / 0.2)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 100 / 0.2)\nExpected: color(from color(xyz-d65 7 -20.5 100 / 0.4) xyz-d65 x y z / 0.2).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 5 got 4
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 y z x)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 -20.5 100 7)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 y z x).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 7 +/- 0.01, expected 7 but got -20.5
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 x x x / x)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 7 7)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 x x x / x).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 1, expected -20.5 +/- 0.01, expected -20.5 but got 7
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100 / 40%) xyz-d65 y z x)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 -20.5 100 7 / 0.4)\nExpected: color(from color(xyz-d65 7 -20.5 100 / 0.4) xyz-d65 y z x).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 7 +/- 0.01, expected 7 but got -20.5
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100 / 40%) xyz-d65 x x x / x)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 7 7)\nExpected: color(from color(xyz-d65 7 -20.5 100 / 0.4) xyz-d65 x x x / x).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 calc(x) calc(y) calc(z))" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 100)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 calc(x) calc(y) calc(z)).\nError: assert_equals: Color format is correct. expected "color(from color(xyz-d  - ) xyz-d calc(x) calc(y) calc(z))" but got "color(xyz-d  - )"
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100 / 40%) xyz-d65 calc(x) calc(y) calc(z) / calc(alpha))" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 100 / 0.4)\nExpected: color(from color(xyz-d65 7 -20.5 100 / 0.4) xyz-d65 calc(x) calc(y) calc(z) / calc(alpha)).\nError: assert_equals: Color format is correct. expected "color(from color(xyz-d  -  / ) xyz-d calc(x) calc(y) calc(z) / calc(alpha))" but got "color(xyz-d  -  / )"
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 none none none)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 none none none)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 none none none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 0
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 none none none / none)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 none none none / none)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 none none none / none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 0
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y none)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 none)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 2
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y none / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 none)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y none / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 2
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y z / none)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 100 / none)\nExpected: color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y z / none).\nError: assert_equals: Color format is correct. expected "color(from color(xyz-d  - ) xyz-d x y z / none)" but got "color(xyz-d  -  / none)"
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100 / 40%) xyz-d65 x y none / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 none / 0.4)\nExpected: color(from color(xyz-d65 7 -20.5 100 / 0.4) xyz-d65 x y none / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100 / 40%) xyz-d65 x y z / none)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 100 / none)\nExpected: color(from color(xyz-d65 7 -20.5 100 / 0.4) xyz-d65 x y z / none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "color(from color(xyz-d65 none none none) xyz-d65 x y z)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 0 0 0)\nExpected: color(from color(xyz-d65 none none none) xyz-d65 x y z).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "color(from color(xyz-d65 none none none / none) xyz-d65 x y z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 0 0 0 / 0)\nExpected: color(from color(xyz-d65 none none none / none) xyz-d65 x y z / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 4
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 none 100) xyz-d65 x y z)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 0 100)\nExpected: color(from color(xyz-d65 7 none 100) xyz-d65 x y z).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 2 got 3
[FAIL] e.style['color'] = "color(from color(xyz-d65 7 -20.5 100 / none) xyz-d65 x y z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 7 -20.5 100 / 0)\nExpected: color(from color(xyz-d65 7 -20.5 100 / none) xyz-d65 x y z / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 4
[FAIL] e.style['color'] = "color(from color-mix(in xyz-d65, color(xyz-d65 0.7 0.5 0.3), color(xyz-d65 0.7 0.5 0.3)) xyz-d65 x y z / alpha)" should set the property value
  Colors do not match.\nActual:   color(xyz-d65 0.7 0.5 0.3)\nExpected: color(from color-mix(in xyz-d65, color(xyz-d65 0.7 0.5 0.3), color(xyz-d65 0.7 0.5 0.3)) xyz-d65 x y z / alpha).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 6 got 3
[FAIL] e.style['color'] = "rgb(from indianred 255 g b)" should set the property value
  assert_equals: serialization should be canonical expected "rgb(from indianred 255 g b)" but got "color(srgb 1 0.360784 0.360784)"
[FAIL] e.style['color'] = "lch(from peru calc(l * 0.8) c h)" should set the property value
  Colors do not match.\nActual:   lch(49.7972 54.0177 63.6639)\nExpected: lch(from peru calc(0.8 * l) c h).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 1 got 3
Harness: the test ran to completion.

